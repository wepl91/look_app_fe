{"version":3,"file":"react-pdf.cjs.min.js","sources":["../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/warning.js","../src/utils/deepMerge.js","../src/utils/isFunction.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/index.js","../src/utils/url.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document.cleanup();\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  cleanup() {\n    this.document.cleanup();\n  }\n\n  finish() {\n    this.document.finish();\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.cleanup();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n\n    child.cleanup();\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  cleanup() {\n    this.children.forEach(c => c.cleanup());\n    this.layout.unsetMeasureFunc();\n    Yoga.Node.destroy(this.layout);\n  }\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const DPI = 72; // 72pt per inch.\n\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  }\n\n  return { value, unit: undefined };\n};\n\nconst parseScalar = (value, container) => {\n  const scalar = parseValue(value);\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * (1 / 25.4) * DPI;\n    case 'cm':\n      return scalar.value * (1 / 2.54) * DPI;\n    case 'vh':\n      if (container.isAutoHeight) {\n        throw new Error(\n          'vh unit not supported in auto-height pages. Please specify page height if you want to use vh.',\n        );\n      }\n\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\n\nexport const processFontWeight = value => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value =>\n  value.match(/\\d+(px|in|mm|cm|pt|%|vw|vh)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = (style, container) => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else if (isFontWeightStyle(key, value)) {\n      resolved = processFontWeight(value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved, container);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles, container);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import { isNil, mergeDeepWith } from 'ramda';\n\nconst merge = (a, b) => {\n  return isNil(b) ? a : b;\n};\n\nconst deepMerge = objs =>\n  objs.reduce((acc, obj) => {\n    return mergeDeepWith(merge, acc, obj);\n  }, {});\n\nexport default deepMerge;\n","import { compose, equals, type } from 'ramda';\n\nconst isFunction = compose(\n  equals('Function'),\n  type,\n);\n\nexport default isFunction;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import { pick, toPairsIn } from 'ramda';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport deepMerge from '../utils/deepMerge';\nimport upperFirst from '../utils/upperFirst';\nimport isFunction from '../utils/isFunction';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = deepMerge([\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    ]);\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = deepMerge([\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    ]);\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation, isAutoHeight } = this.page;\n    const container = {\n      orientation,\n      isAutoHeight,\n      width: size.width,\n      height: size.height,\n    };\n\n    const ownStyles = StyleSheet.resolve(this.props.style, container);\n\n    const inheritedStyles = this.parent\n      ? pick(inheritedProperties, this.parent.style)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    for (let i = 0; i < this.children.length; i++) {\n      await this.children[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  cleanup() {}\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type string, number, array or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'number') {\n    result = [size];\n  } else if (typeof size === 'object' && size.width) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  get isAutoHeight() {\n    return typeof this.size.height === 'undefined';\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  update(newProps) {\n    super.update(newProps);\n    this._size = null;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    if (!this.isAutoHeight) {\n      this.height = this.size.height;\n    }\n\n    this.calculateLayout();\n\n    const height = this.isAutoHeight ? this.height : this.size.height;\n\n    instance.addPage({\n      size: [this.size.width, height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor, doc) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import { pathOr, last } from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = pathOr(12, ['attributes', 'fontSize']);\n\nconst getFallbackFont = () => {\n  return getOrCreateFont('Helvetica');\n};\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst shouldFallbackToFont = (codePoint, font) => {\n  return (\n    !IGNORED_CODE_POINTS.includes(codePoint) &&\n    !font.hasGlyphForCodePoint(codePoint) &&\n    getFallbackFont().hasGlyphForCodePoint(codePoint)\n  );\n};\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","import layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport fontSubstitution from './fontSubstitution';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\nexport default engine;\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { isNil, propEq, prop, complement, compose } from 'ramda';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst isImage = propEq('name', 'Image');\n\nconst isTextInstance = compose(\n  complement(isNil),\n  prop('value'),\n);\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance));\n};\n","import Yoga from 'yoga-layout';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\nimport AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Base from './Base';\nimport Font from '../font';\nimport layout from '../layout';\nimport { getURL } from '../utils/url';\nimport { getAttributedString } from '../utils/attributedString';\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.blocks = null;\n    this.computed = false;\n    this.attributedString = null;\n    this.layoutOptions = {\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n      shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n    };\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.blocks) return [];\n\n    return this.blocks\n      .reduce((acc, block) => [...acc, ...block], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.blocks) return -1;\n    return this.lines.reduce((acc, line) => acc + line.box.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.blocks) return -1;\n    return Math.max(\n      ...this.lines.map(line => AttributedString.advanceWidth(line)),\n    );\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n\n      child.cleanup();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.box.height > height) return i;\n      counter += line.box.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.box.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.blocks || this.props.render) {\n      // Do the actual text layout.\n      /// If height null or NaN, we take some liberty on layout height\n      const container = {\n        x: 0,\n        y: 0,\n        width,\n        height: height || Infinity,\n        maxLines: this.style.maxLines,\n        truncateMode: this.style.textOverflow,\n      };\n      this.blocks = layout(\n        this.attributedString,\n        container,\n        this.layoutOptions,\n      );\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.blocks.reduce((acc, b) => acc + b.length, 0);\n\n    this.end = linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width, height);\n\n      return { height: this.linesHeight };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.blocks && !this.props.render) {\n      text.blocks = [...this.blocks];\n    }\n\n    return text;\n  }\n\n  renderText() {\n    const { top, left } = this.getAbsoluteLayout();\n    const initialY = this.lines[0] ? this.lines[0].box.y : 0;\n\n    // We translate lines based on Yoga container\n    this.root.instance.save();\n    this.root.instance.translate(\n      left + this.padding.left,\n      top + this.padding.top - initialY,\n    );\n\n    // Perform actual text rendering on document\n    PDFRenderer.render(this.root.instance, [this.lines]);\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    this.renderText();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n\n    child.cleanup();\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea = this.page.isAutoHeight\n      ? Infinity\n      : this.page.size.height -\n        pagePadding.top -\n        pagePadding.bottom -\n        imageMargin.top -\n        imageMargin.bottom -\n        SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n\n    child.cleanup();\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages(), this.loadEmojis()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  cleanup() {\n    this.subpages.forEach(p => p.cleanup());\n  }\n\n  finish() {\n    this.children.forEach(c => c.cleanup());\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      if (page.wrap) {\n        const wrapArea = page.isAutoHeight\n          ? Infinity\n          : page.size.height - (page.style.paddingBottom || 0);\n\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport {\n  unstable_scheduleCallback as schedulePassiveEffects,\n  unstable_cancelCallback as cancelPassiveEffects\n} from 'scheduler';\n\nimport { createInstance } from './elements';\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  schedulePassiveEffects,\n  cancelPassiveEffects,\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  async function toBuffer() {\n    await container.render();\n\n    callOnRender();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    container,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport const renderToStream = async function(element) {\n  const instance = pdf(element);\n  const buffer = await instance.toBuffer();\n  instance.container.finish();\n  return buffer;\n};\n\nexport const renderToFile = async function(element, filePath, callback) {\n  const output = await renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  createInstance,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["Root","constructor","isDirty","document","instance","appendChild","child","removeChild","cleanup","markDirty","finish","PDFDocument","autoFirstPage","this","render","upperFirst","value","charAt","toUpperCase","slice","isPercent","exec","matchPercent","match","parseFloat","percent","absValue","Math","abs","absPercent","Node","parent","children","computed","layout","Yoga","createDefault","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","Error","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","forEach","c","unsetMeasureFunc","destroy","getPositionType","POSITION_TYPE_ABSOLUTE","getComputedTop","getComputedLeft","getComputedRight","getComputedBottom","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","setPositionType","POSITION_TYPE_RELATIVE","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","DPI","parseValue","unit","undefined","parseScalar","container","scalar","isAutoHeight","isBorderStyle","key","matchBorderShorthand","processBorders","isBoxModelStyle","matchBoxModel","processBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","toLowerCase","isObjectPositionStyle","matchObjectPosition","processObjectPosition","isTransformOriginStyle","matchTransformOrigin","transformOffsetKeywords","processTransformOrigin","result","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandStyles","style","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","transformStyles","expandedStyles","resolved","create","styles","flatten","input","Array","isArray","reduce","acc","s","resolveMediaQueries","test","matchMedia","resolve","absoluteFillObject","position","hairlineWidth","Debug","debug","root","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","drawBorders","rtr","min","rtl","rbr","rbl","strokeOpacity","clipBorderTop","fillBorderTop","clipBorderRight","fillBorderRight","clipBorderBottom","fillBorderBottom","clipBorderLeft","fillBorderLeft","ctx","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","strokeColor","lineWidth","dash","space","undash","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","topLeftCoordX","bottomLeftXCoord","Clipping","ctr","cbr","cbl","ctl","getRotation","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","rotate","scale","translate","Transformations","applyTransformations","re","printWarning","format","args","argIndex","message","replace","console","error","x","__DEV__","process","env","NODE_ENV","warning","condition","merge","a","b","isNil","deepMerge","objs","obj","mergeDeepWith","isFunction","compose","equals","type","inheritedProperties","Base","props","defaultProps","page","wrap","break","fixed","minPresenceAhead","percentX","percentY","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","applyStyle","size","orientation","ownStyles","StyleSheet","pick","setter","getLayoutData","name","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","assign","Borders","Transform","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","elements","Fragment","createInstance","addDynamicChild","cb","listToExplore","shift","renderDynamicNodes","super","addPage","renderChildren","View","fetchFont","async","src","options","response","fetch","buffer","arrayBuffer","Buffer","FontSource","fontFamily","fontStyle","fontWeight","data","loading","BROWSER","headers","body","method","fontkit","Promise","reject","open","err","Font","family","sources","register","descriptor","styleSources","filter","exactFit","find","res","leftOffset","rightOffset","lt","gt","emojiSource","registerEmojiSource","url","getEmojiSource","hyphenationCallback","registerHyphenationCallback","callback","getHyphenationCallback","fonts","font","getRegisteredFonts","getRegisteredFontFamilies","getFont","standardFonts","includes","load","doc","reset","clear","emoji","hyphenation","StandardFont","PDFFont","str","encoded","positions","encode","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","pathOr","getFallbackFont","getOrCreateFont","shouldFallbackToFont","fontSubstitution","string","runs","lastFont","lastIndex","run","defaultFont","attributes","start","end","char","codePointAt","unitsPerEm","last","engines","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","engine","layoutEngine","PROTOCOL_REGEXP","getURL","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","createCache","limit","cache","get","set","IMAGE_CACHE","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","isDangerousLocalPath","filename","safePath","absoluteSafePath","startsWith","fetchLocalFile","allowDangerousPaths","fs","readFile","fetchRemoteFile","uri","isValidFormat","lower","guessFormat","isCompatibleBase64","getImage","extension","resolveBase64Image","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","cacheKey","toString","image","emojis","regex","emojiRegex","reflect","promise","then","v","makeFetchEmojiImage","_removeNoColor","getCodePoints","join","buildEmojiUrl","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragments","fragment","emojiSize","chunk","String","fromCharCode","attachment","yOffset","floor","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","capitalize","l","isImage","propEq","isTextInstance","complement","transformText","transformation","getFragments","color","textAlign","lineHeight","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","getAttributedString","AttributedString","fromFragments","Text","blocks","attributedString","layoutOptions","hyphenationPenalty","shrinkWhitespaceFactor","before","after","setMeasureFunc","measureText","bind","href","block","lines","line","box","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","y","Infinity","maxLines","truncateMode","textOverflow","linesCount","widthMode","heightMode","MEASURE_MODE_EXACTLY","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","renderText","initialY","PDFRenderer","Link","Note","note","isNumeric","n","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","flexGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","ratio","source","warn","renderImage","objectFit","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","childNode","all","loadFonts","loadImages","loadEmojis","p","pageCount","pages","wrapArea","wrapPages","j","pageNumber","totalPages","loadAssets","renderPages","availableMethods","painter","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","oldPropsKeys","newPropsKeys","emptyObject","shouldReplaceLink","ReactFiberReconciler","schedulePassiveEffects","cancelPassiveEffects","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","insertBefore","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","toBuffer","toBlob","stream","pipe","BlobStream","on","blob","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version"],"mappings":"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"}