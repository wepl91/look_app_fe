{"version":3,"file":"react-pdf.browser.cjs.js","sources":["../src/utils/styles.js","../src/elements/Root.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/transform.js","../src/elements/Base.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/url.js","../src/utils/capitalize.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/elements/Image.js","../src/elements/index.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many time\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      font.data = fontkit.openSync(font.src);\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we do.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be resetted after document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hypher = new Hypher(english);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      return word.includes(SOFT_HYPHEN_HEX)\n        ? word.split(SOFT_HYPHEN_HEX)\n        : hypher.hyphenate(word);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 3,\n  shrink: 4,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(start, glyphString.length);\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  const cache = {};\n  const keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fetch from 'isomorphic-fetch';\nimport PNG from '@react-pdf/png-js';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nconst imagesCache = createCache({ limit: 30 });\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst isCompatibleBase64 = src =>\n  /data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(src);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = src => {\n  const match = /data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(src);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveLocalImage = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveRemoteImage = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(buffer => {\n      if (buffer.constructor.name === 'Buffer') {\n        return buffer;\n      }\n      return Buffer.from(buffer);\n    })\n    .then(body => {\n      const isPng =\n        body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n\n      const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n      let extension = '';\n      if (isPng) {\n        extension = 'png';\n      } else if (isJpg) {\n        extension = 'jpg';\n      } else {\n        throw new Error('Not valid image extension');\n      }\n\n      return getImage(body, extension);\n    });\n};\n\nexport const resolveImage = (src, cache = true) => {\n  if (cache && imagesCache.get(src)) return imagesCache.get(src);\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (typeof src === 'object') {\n    image = resolveLocalImage(src);\n  } else {\n    image = resolveRemoteImage(src);\n  }\n\n  if (cache) {\n    imagesCache.set(src, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(resolveImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import wrapPages from 'page-wrapping';\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    const subpages = await this.wrapPages();\n\n    for (let j = 0; j < subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await subpages[j].render();\n    }\n\n    return subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const matchPercent = value => /(\\d+\\.?\\d*)%/g.exec(value);\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout-prebuilt';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseFloat(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setPaddingPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setMarginPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout-prebuilt';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n    const isBorderStyle = key.match(/border/) && typeof value === 'string';\n    const resolved = isBorderStyle ? processBorders(key, value) : value;\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null && style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n\n    this.root.instance.restore();\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","const Borders = {\n  drawBorders() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopWidth = 0,\n      borderRightWidth = 0,\n      borderBottomWidth = 0,\n      borderLeftWidth = 0,\n    } = this;\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n      borderTopColor = 'black',\n      borderRightColor = 'black',\n      borderBottomColor = 'black',\n      borderLeftColor = 'black',\n      borderTopStyle = 'solid',\n      borderRightStyle = 'solid',\n      borderBottomStyle = 'solid',\n      borderLeftStyle = 'solid',\n    } = this.getComputedStyles();\n\n    // Save current graphics stack\n    this.root.instance.save();\n\n    // border top\n    this.drawHorizontalBorder(\n      [\n        left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      [\n        left + width - (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      borderTopLeftRadius,\n      borderTopRightRadius,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n    );\n\n    // border right\n    this.drawVerticalBorder(\n      [\n        left + width - borderRightWidth / 2,\n        top + (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      [\n        left + width - borderRightWidth / 2,\n        top + height - (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      -borderTopRightRadius,\n      -borderBottomRightRadius,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n    );\n\n    // border bottom\n    this.drawHorizontalBorder(\n      [\n        left +\n          width -\n          (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      [\n        left + (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      -borderBottomRightRadius,\n      -borderBottomLeftRadius,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n    );\n\n    // border left\n    this.drawVerticalBorder(\n      [\n        left + borderLeftWidth / 2,\n        top + height - (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      [\n        left + borderLeftWidth / 2,\n        top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      borderBottomLeftRadius,\n      borderTopLeftRadius,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    );\n\n    // Restore graphics stack to avoid side effects\n    this.root.instance.restore();\n  },\n  traceBorder(style, width) {\n    switch (style) {\n      case 'dashed':\n        this.root.instance.dash(width * 2, { space: width * 1.2 }).stroke();\n        break;\n      case 'dotted':\n        this.root.instance.dash(width, { space: width * 1.2 }).stroke();\n        break;\n      default:\n        this.root.instance.stroke();\n    }\n  },\n  drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0], p1[1] + r1)\n      .quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1])\n      .lineTo(p2[0] - r2, p2[1])\n      .quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2)\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawVerticalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0] + r1, p1[1])\n      .quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1)\n      .lineTo(p2[0], p2[1] + r2)\n      .quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1])\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n};\n\nexport default Borders;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform) => {\n  const { left, top, width, height } = element.getAbsoluteLayout();\n  const origin = [left + width / 2, top + height / 2];\n\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0]);\n    }\n  },\n};\n\nexport default Transformations;\n","import toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Transform from '../mixins/transform';\nimport upperFirst from '../utils/upperFirst';\nimport { inheritedProperties } from '../utils/styles';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style = StyleSheet.resolve(this.props.style, {\n      width: size.width,\n      height: size.height,\n      orientation: orientation,\n    });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  drawBackgroundColor() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    // We can't set individual radius for each corner on PDF, so we get the higher\n    const borderRadius =\n      Math.max(\n        styles.borderTopLeftRadius,\n        styles.borderTopRightRadius,\n        styles.borderBottomRightRadius,\n        styles.borderBottomLeftRadius,\n      ) || 0;\n\n    if (styles.backgroundColor) {\n      this.root.instance\n        .fillColor(styles.backgroundColor)\n        .roundedRect(left, top, width, height, borderRadius)\n        .fill();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent._container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout-prebuilt';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\nimport { createInstance } from './index';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = matchPercent(value);\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    if (isPercent) {\n      const percent = parseFloat(isPercent[1], 10) / 100;\n      this.layout.setPadding(edge, dimension * percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  update(newProps) {}\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nexport const getURL = value => {\n  let src = value;\n\n  if (typeof src === 'string' && !src.match(PROTOCOL_REGEXP)) {\n    src = `http://${src}`;\n  }\n\n  return src;\n};\n","const capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nexport default capitalize;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport capitalize from './capitalize';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  let fragments = [];\n  const {\n    color = 'black',\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n  } = instance.getComputedStyles();\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          fontSize,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout-prebuilt';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this._container = null;\n    this._attributedString = null;\n    this._layoutEngine = null;\n    this.renderCallback = props.render;\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get attributedString() {\n    if (!this._attributedString) {\n      this._attributedString = getAttributedString(this);\n    }\n    return this._attributedString;\n  }\n\n  set attributedString(value) {\n    this._attributedString = value;\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get linesHeight() {\n    if (!this._container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this._container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  get layoutEngine() {\n    if (!this._layoutEngine) {\n      const { hyphenationPenalty } = this.props;\n      const hyphenationCallback = Font.getHyphenationCallback();\n      this._layoutEngine = new LayoutEngine({\n        hyphenationCallback,\n        hyphenationPenalty,\n      });\n    }\n\n    return this._layoutEngine;\n  }\n\n  set layoutEngine(instance) {\n    this._layoutEngine = instance;\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    // IF height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this._container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this._container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this._container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this.end = linesCount + 1;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (!this.props.render && !this.props.fixed) {\n      text._container = this._container;\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    const padding = this.padding;\n    const { top, left } = this.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + padding.left;\n      line.rect.y += top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.root.instance, {\n      outlineLines: false,\n    });\n\n    renderer.render(this.container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import Yoga from 'yoga-layout-prebuilt';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport { resolveImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const imageWidth = Math.min(this.image.width, width);\n\n      return {\n        width: imageWidth,\n        height: imageWidth / this.ratio,\n      };\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    try {\n      this.image = await resolveImage(this.props.src, this.props.cache);\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  async render() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const width =\n        Math.min(this.height * this.ratio, this.width) -\n        padding.left -\n        padding.right;\n      const height = this.height - padding.top - padding.bottom;\n      const xOffset = Math.max((this.width - width) / 2, 0);\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.image(\n          this.image.data,\n          left + padding.left + xOffset,\n          top + padding.top,\n          { width, height },\n        );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import Root from './Root';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createInstance } from './elements';\n\nconst objectsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        objectsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !objectsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ blob });\n          }\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    if (container.document.props.onRender) {\n      container.document.props.onRender();\n    }\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ string: result });\n          }\n\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nimport { flatStyles } from './utils/styles';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty()) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({ className, style, children, ...props }) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["inheritedProperties","flatStyles","stylesArray","reduce","acc","style","Root","isDirty","document","instance","appendChild","child","markDirty","render","PDFDocument","autoFirstPage","fetchFont","fetch","src","then","response","buffer","arrayBuffer","Buffer","from","fonts","emojiSource","hyphenationCallback","register","family","otherOptions","registerHyphenationCallback","callback","registerEmojiSource","url","format","getRegisteredFonts","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","font","data","loading","isUrl","fontkit","create","openSync","loaded","registerFont","standardFonts","includes","Error","reset","hasOwnProperty","clear","StandardFont","name","PDFFont","open","layout","str","encode","encoded","positions","map","_","i","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","slice","start","end","char","codePointAt","SOFT_HYPHEN_HEX","hypher","Hypher","english","cache","calculateParts","word","split","hyphenate","hyphenateWord","parts","Node","prev","next","toString","LinkedList","head","tail","listSize","isLinked","node","isEmpty","size","first","last","toArray","result","forEach","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","remove","pop","shift","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","candidates","badness","tmpSum","currentClass","candidate","Math","pow","abs","undefined","reverse","glue","value","box","hyphenated","INFINITY","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","min","calculateRatio","applyBestFit","count","breakpoints","HYPHEN","TOLERANCE_STEPS","TOLERANCE_LIMIT","opts","getNodes","glyphString","syllables","align","hyphenWidth","hyphenPenalty","s","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakLines","breakPoint","prevNode","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","hyphenationPenalty","engines","scriptItemizer","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","BaseLayoutEngine","MARKERS","JPEG","height","readUInt16BE","marker","pos","createCache","limit","keys","key","imagesCache","isValidFormat","lower","toLowerCase","isCompatibleBase64","test","getImage","body","extension","PNG","resolveBase64Image","match","exec","resolve","resolveLocalImage","resolveRemoteImage","constructor","isPng","isJpg","resolveImage","get","image","set","emojis","regex","emojiRegex","reflect","promise","v","e","fetchEmojiImage","getCodePoints","join","buildEmojiUrl","Font","emoji","fetchEmojis","promises","emojiUrl","embedEmojis","fragments","fragment","emojiSize","fontSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","parent","removeChild","indexOf","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","listToExplore","childNode","all","loadEmojis","loadImages","loadAssets","applyProps","update","newProps","wrapPages","page","paddingBottom","wrap","wrapArea","pageCount","subpages","pages","renderPages","j","renderDynamicNodes","defaultProps","upperFirst","charAt","toUpperCase","matchPercent","computed","Yoga","createDefault","insertChild","getChildCount","appendChildBefore","beforeChild","splice","removeAllChilds","setDimension","attr","fixedMethod","percentMethod","isPercent","parseFloat","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","copyStyle","calculateLayout","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","paddingRight","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","parseScalar","scalar","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","expandedStyles","isBorderStyle","resolved","styles","flatten","Array","isArray","input","resolveMediaQueries","container","matchMedia","absoluteFillObject","Debug","padding","margin","save","debugContent","debugPadding","debugMargin","debugText","restore","roundedWidth","round","right","roundedHeight","bottom","opacity","fillColor","text","max","rect","fill","Borders","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getComputedStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","drawHorizontalBorder","drawVerticalBorder","dash","space","stroke","p1","p2","r1","r2","color","lineWidth","moveTo","quadraticCurveTo","lineTo","strokeColor","traceBorder","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","origin","rotate","scale","translate","Transformations","re","Base","merge","orientation","StyleSheet","attribute","applyStyle","setter","isFunction","inheritedStyles","pick","drawBackgroundColor","borderRadius","backgroundColor","roundedRect","clone","onNodeSplit","renderChildren","filter","absolute","nonAbsoluteChilds","absoluteChilds","break","fixed","minPresenceAhead","Transform","TextInstance","_container","PAGE_SIZES","getPageSize","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","vRange","getVerticalSteps","Page","_size","resetMargins","rulerWidth","getRulerWidth","dimension","percent","addDynamicChild","elements","Fragment","createInstance","cb","condition","nodeWillWrap","addPage","debug","renderRuler","View","applyTransformations","drawBorders","PROTOCOL_REGEXP","getURL","capitalize","l","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","transformText","transformation","getFragments","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","preprocessor","getAttributedString","AttributedString","fromFragments","PDFRenderer","createPDFRenderer","Rect","Text","_attributedString","_layoutEngine","renderCallback","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","path","Path","Container","attributedString","layoutEngine","linesCount","blocks","block","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","y","x","initialX","href","Link","link","Note","note","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","imageWidth","warn","message","xOffset","constructors","objectsEqual","a","b","oldPropsKeys","newPropsKeys","shouldReplaceLink","ReactFiberReconciler","parentInstance","internalInstanceHandle","instanceType","rootContainerInstance","oldProps","emptyObject","Date","now","textInstance","oldText","newText","updatePayload","pdf","pipe","BlobStream","reject","on","blob","stream","toBlob","onRender","error","mountNode","createContainer","updateContainer","toBuffer","React","InternalBlobProvider","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","PDFDownloadLink","fileName","downloadOnIE","window","navigator","msSaveBlob","params"],"mappings":"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"}