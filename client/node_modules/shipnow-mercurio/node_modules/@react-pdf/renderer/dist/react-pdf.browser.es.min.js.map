{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/utils/styles.js","../src/elements/Root.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/transform.js","../src/elements/Base.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/url.js","../src/utils/capitalize.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/elements/Image.js","../src/elements/index.js","../src/renderer.js","../src/index.js","../src/dom.js"],"sourcesContent":["export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many time\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      font.data = fontkit.openSync(font.src);\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we do.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be resetted after document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hypher = new Hypher(english);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      return word.includes(SOFT_HYPHEN_HEX)\n        ? word.split(SOFT_HYPHEN_HEX)\n        : hypher.hyphenate(word);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 3,\n  shrink: 4,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(start, glyphString.length);\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  const cache = {};\n  const keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fetch from 'isomorphic-fetch';\nimport PNG from '@react-pdf/png-js';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nconst imagesCache = createCache({ limit: 30 });\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst isCompatibleBase64 = src =>\n  /data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(src);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = src => {\n  const match = /data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(src);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveLocalImage = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveRemoteImage = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(buffer => {\n      if (buffer.constructor.name === 'Buffer') {\n        return buffer;\n      }\n      return Buffer.from(buffer);\n    })\n    .then(body => {\n      const isPng =\n        body[0] === 137 &&\n        body[1] === 80 &&\n        body[2] === 78 &&\n        body[3] === 71 &&\n        body[4] === 13 &&\n        body[5] === 10 &&\n        body[6] === 26 &&\n        body[7] === 10;\n\n      const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n      let extension = '';\n      if (isPng) {\n        extension = 'png';\n      } else if (isJpg) {\n        extension = 'jpg';\n      } else {\n        throw new Error('Not valid image extension');\n      }\n\n      return getImage(body, extension);\n    });\n};\n\nexport const resolveImage = (src, cache = true) => {\n  if (cache && imagesCache.get(src)) return imagesCache.get(src);\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (typeof src === 'object') {\n    image = resolveLocalImage(src);\n  } else {\n    image = resolveRemoteImage(src);\n  }\n\n  if (cache) {\n    imagesCache.set(src, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(resolveImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import wrapPages from 'page-wrapping';\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    const subpages = await this.wrapPages();\n\n    for (let j = 0; j < subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await subpages[j].render();\n    }\n\n    return subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const matchPercent = value => /(\\d+\\.?\\d*)%/g.exec(value);\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout-prebuilt';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseFloat(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setPaddingPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setMarginPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout-prebuilt';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n    const isBorderStyle = key.match(/border/) && typeof value === 'string';\n    const resolved = isBorderStyle ? processBorders(key, value) : value;\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null && style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n\n    this.root.instance.restore();\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","const Borders = {\n  drawBorders() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopWidth = 0,\n      borderRightWidth = 0,\n      borderBottomWidth = 0,\n      borderLeftWidth = 0,\n    } = this;\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n      borderTopColor = 'black',\n      borderRightColor = 'black',\n      borderBottomColor = 'black',\n      borderLeftColor = 'black',\n      borderTopStyle = 'solid',\n      borderRightStyle = 'solid',\n      borderBottomStyle = 'solid',\n      borderLeftStyle = 'solid',\n    } = this.getComputedStyles();\n\n    // Save current graphics stack\n    this.root.instance.save();\n\n    // border top\n    this.drawHorizontalBorder(\n      [\n        left + (borderTopLeftRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      [\n        left + width - (borderTopRightRadius > 0 ? borderTopWidth / 2 : 0),\n        top + borderTopWidth / 2,\n      ],\n      borderTopLeftRadius,\n      borderTopRightRadius,\n      borderTopWidth,\n      borderTopColor,\n      borderTopStyle,\n    );\n\n    // border right\n    this.drawVerticalBorder(\n      [\n        left + width - borderRightWidth / 2,\n        top + (borderTopRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      [\n        left + width - borderRightWidth / 2,\n        top + height - (borderBottomRightRadius > 0 ? borderRightWidth / 2 : 0),\n      ],\n      -borderTopRightRadius,\n      -borderBottomRightRadius,\n      borderRightWidth,\n      borderRightColor,\n      borderRightStyle,\n    );\n\n    // border bottom\n    this.drawHorizontalBorder(\n      [\n        left +\n          width -\n          (borderBottomRightRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      [\n        left + (borderBottomLeftRadius > 0 ? borderBottomWidth / 2 : 0),\n        top + height - borderBottomWidth / 2,\n      ],\n      -borderBottomRightRadius,\n      -borderBottomLeftRadius,\n      borderBottomWidth,\n      borderBottomColor,\n      borderBottomStyle,\n    );\n\n    // border left\n    this.drawVerticalBorder(\n      [\n        left + borderLeftWidth / 2,\n        top + height - (borderBottomLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      [\n        left + borderLeftWidth / 2,\n        top + (borderTopLeftRadius > 0 ? borderLeftWidth / 2 : 0),\n      ],\n      borderBottomLeftRadius,\n      borderTopLeftRadius,\n      borderLeftWidth,\n      borderLeftColor,\n      borderLeftStyle,\n    );\n\n    // Restore graphics stack to avoid side effects\n    this.root.instance.restore();\n  },\n  traceBorder(style, width) {\n    switch (style) {\n      case 'dashed':\n        this.root.instance.dash(width * 2, { space: width * 1.2 }).stroke();\n        break;\n      case 'dotted':\n        this.root.instance.dash(width, { space: width * 1.2 }).stroke();\n        break;\n      default:\n        this.root.instance.stroke();\n    }\n  },\n  drawHorizontalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0], p1[1] + r1)\n      .quadraticCurveTo(p1[0], p1[1], p1[0] + r1, p1[1])\n      .lineTo(p2[0] - r2, p2[1])\n      .quadraticCurveTo(p2[0], p2[1], p2[0], p2[1] + r2)\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n  drawVerticalBorder(p1, p2, r1, r2, width, color, style) {\n    if (width <= 0) return;\n\n    this.root.instance\n      .lineWidth(width)\n      .moveTo(p1[0] + r1, p1[1])\n      .quadraticCurveTo(p1[0], p1[1], p1[0], p1[1] - r1)\n      .lineTo(p2[0], p2[1] + r2)\n      .quadraticCurveTo(p2[0], p2[1], p2[0] + r2, p2[1])\n      .strokeColor(color);\n\n    this.traceBorder(style, width);\n  },\n};\n\nexport default Borders;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform) => {\n  const { left, top, width, height } = element.getAbsoluteLayout();\n  const origin = [left + width / 2, top + height / 2];\n\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0]);\n    }\n  },\n};\n\nexport default Transformations;\n","import toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Transform from '../mixins/transform';\nimport upperFirst from '../utils/upperFirst';\nimport { inheritedProperties } from '../utils/styles';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style = StyleSheet.resolve(this.props.style, {\n      width: size.width,\n      height: size.height,\n      orientation: orientation,\n    });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  drawBackgroundColor() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    // We can't set individual radius for each corner on PDF, so we get the higher\n    const borderRadius =\n      Math.max(\n        styles.borderTopLeftRadius,\n        styles.borderTopRightRadius,\n        styles.borderBottomRightRadius,\n        styles.borderBottomLeftRadius,\n      ) || 0;\n\n    if (styles.backgroundColor) {\n      this.root.instance\n        .fillColor(styles.backgroundColor)\n        .roundedRect(left, top, width, height, borderRadius)\n        .fill();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent._container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout-prebuilt';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\nimport { createInstance } from './index';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = matchPercent(value);\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    if (isPercent) {\n      const percent = parseFloat(isPercent[1], 10) / 100;\n      this.layout.setPadding(edge, dimension * percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  update(newProps) {}\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nexport const getURL = value => {\n  let src = value;\n\n  if (typeof src === 'string' && !src.match(PROTOCOL_REGEXP)) {\n    src = `http://${src}`;\n  }\n\n  return src;\n};\n","const capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nexport default capitalize;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport capitalize from './capitalize';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  let fragments = [];\n  const {\n    color = 'black',\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n  } = instance.getComputedStyles();\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          fontSize,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout-prebuilt';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this._container = null;\n    this._attributedString = null;\n    this._layoutEngine = null;\n    this.renderCallback = props.render;\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get attributedString() {\n    if (!this._attributedString) {\n      this._attributedString = getAttributedString(this);\n    }\n    return this._attributedString;\n  }\n\n  set attributedString(value) {\n    this._attributedString = value;\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get linesHeight() {\n    if (!this._container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this._container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  get layoutEngine() {\n    if (!this._layoutEngine) {\n      const { hyphenationPenalty } = this.props;\n      const hyphenationCallback = Font.getHyphenationCallback();\n      this._layoutEngine = new LayoutEngine({\n        hyphenationCallback,\n        hyphenationPenalty,\n      });\n    }\n\n    return this._layoutEngine;\n  }\n\n  set layoutEngine(instance) {\n    this._layoutEngine = instance;\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    // IF height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this._container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this._container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this._container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this.end = linesCount + 1;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (!this.props.render && !this.props.fixed) {\n      text._container = this._container;\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    const padding = this.padding;\n    const { top, left } = this.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + padding.left;\n      line.rect.y += top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.root.instance, {\n      outlineLines: false,\n    });\n\n    renderer.render(this.container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import Yoga from 'yoga-layout-prebuilt';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport { resolveImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const imageWidth = Math.min(this.image.width, width);\n\n      return {\n        width: imageWidth,\n        height: imageWidth / this.ratio,\n      };\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    try {\n      this.image = await resolveImage(this.props.src, this.props.cache);\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  async render() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const width =\n        Math.min(this.height * this.ratio, this.width) -\n        padding.left -\n        padding.right;\n      const height = this.height - padding.top - padding.bottom;\n      const xOffset = Math.max((this.width - width) / 2, 0);\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.image(\n          this.image.data,\n          left + padding.left + xOffset,\n          top + padding.top,\n          { width, height },\n        );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import Root from './Root';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createInstance } from './elements';\n\nconst objectsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        objectsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !objectsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ blob });\n          }\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    if (container.document.props.onRender) {\n      container.document.props.onRender();\n    }\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          if (container.document.props.onRender) {\n            container.document.props.onRender({ string: result });\n          }\n\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nimport { flatStyles } from './utils/styles';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n  Document as PDFDocument,\n} from './index';\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  state = { blob: null, url: null, loading: true, error: null };\n\n  constructor(props) {\n    super(props);\n\n    // Create new root container for this render\n    this.instance = pdf();\n  }\n\n  componentDidMount() {\n    this.renderDocument();\n    this.onDocumentUpdate();\n  }\n\n  componentDidUpdate() {\n    this.renderDocument();\n\n    if (this.instance.isDirty()) {\n      this.onDocumentUpdate();\n    }\n  }\n\n  renderDocument() {\n    this.instance.updateContainer(this.props.document);\n  }\n\n  onDocumentUpdate() {\n    const oldBlobUrl = this.state.url;\n\n    this.instance\n      .toBlob()\n      .then(blob => {\n        this.setState(\n          { blob, url: URL.createObjectURL(blob), loading: false },\n          () => URL.revokeObjectURL(oldBlobUrl),\n        );\n      })\n      .catch(error => {\n        this.setState({ error });\n        throw error;\n      });\n  }\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({ className, style, children, ...props }) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  PDFRenderer,\n  BlobProvider,\n  createInstance,\n  PDFDownloadLink,\n};\n"],"names":["inheritedProperties","flatStyles","stylesArray","reduce","acc","style","Root","isDirty","document","instance","appendChild","child","markDirty","render","PDFDocument","autoFirstPage","this","fetch","src","then","response","buffer","arrayBuffer","Buffer","from","fonts","emojiSource","hyphenationCallback","register","family","otherOptions","registerHyphenationCallback","callback","registerEmojiSource","url","format","getRegisteredFonts","_Object$keys","getFont","getEmojiSource","getHyphenationCallback","load","fontFamily","doc","font","data","loading","isUrl","fetchFont","fontkit","create","openSync","loaded","registerFont","standardFonts","includes","Error","reset","hasOwnProperty","clear","StandardFont","name","PDFFont","open","layout","str","encode","encoded","positions","map","_","i","g","glyph","_this","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","slice","start","end","char","codePointAt","SOFT_HYPHEN_HEX","hypher","Hypher","english","cache","calculateParts","word","split","hyphenate","hyphenateWord","parts","Node","prev","next","toString","LinkedList","head","tail","listSize","isLinked","node","isEmpty","size","first","last","toArray","result","forEach","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","remove","pop","shift","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","candidates","badness","tmpSum","currentClass","candidate","Math","pow","abs","undefined","reverse","glue","value","box","INFINITY","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","min","calculateRatio","applyBestFit","count","breakpoints","HYPHEN","TOLERANCE_STEPS","TOLERANCE_LIMIT","opts","getNodes","glyphString","syllables","align","hyphenPenalty","s","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","hyphenated","breakLines","breakPoint","prevNode","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","hyphenationPenalty","engines","scriptItemizer","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","_BaseLayoutEngine","BaseLayoutEngine","MARKERS","JPEG","height","readUInt16BE","marker","pos","createCache","limit","keys","key","imagesCache","isValidFormat","lower","toLowerCase","isCompatibleBase64","test","getImage","body","extension","PNG","resolveBase64Image","match","exec","resolve","resolveLocalImage","_JSON$stringify","resolveRemoteImage","constructor","isPng","isJpg","resolveImage","get","image","set","emojis","regex","emojiRegex","reflect","promise","v","e","fetchEmojiImage","getCodePoints","_Array$from","join","buildEmojiUrl","Font","emoji","fetchEmojis","promises","emojiUrl","embedEmojis","fragments","fragment","emojiSize","fontSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","parent","removeChild","indexOf","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","loadFonts","listToExplore","childNode","_Promise","all","loadEmojis","loadImages","loadAssets","applyProps","update","newProps","wrapPages","page","paddingBottom","wrap","wrapArea","pageCount","subpages","pages","renderPages","j","renderDynamicNodes","defaultProps","upperFirst","charAt","toUpperCase","matchPercent","computed","Yoga","createDefault","insertChild","getChildCount","appendChildBefore","beforeChild","splice","removeAllChilds","setDimension","attr","fixedMethod","percentMethod","isPercent","parseFloat","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","getAbsoluteLayout","parentLayout","left","top","copyStyle","calculateLayout","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","setPositionType","POSITION_TYPE_RELATIVE","getComputedTop","EDGE_TOP","getComputedLeft","EDGE_LEFT","getComputedRight","EDGE_RIGHT","getComputedBottom","EDGE_BOTTOM","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","getComputedMargin","getComputedBorder","paddingTop","paddingRight","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","parseScalar","scalar","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","expandedStyles","resolved","styles","flatten","Array","isArray","input","resolveMediaQueries","container","matchMedia","absoluteFillObject","Debug","padding","margin","save","debugContent","debugPadding","debugMargin","debugText","restore","roundedWidth","round","right","roundedHeight","bottom","opacity","fillColor","text","max","rect","fill","Borders","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getComputedStyles","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","drawHorizontalBorder","drawVerticalBorder","dash","space","stroke","p1","p2","r1","r2","color","lineWidth","moveTo","quadraticCurveTo","lineTo","strokeColor","traceBorder","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","origin","rotate","scale","translate","Transformations","re","Base","_Node","merge","orientation","StyleSheet","attribute","applyStyle","setter","isFunction","inheritedStyles","pick","drawBackgroundColor","borderRadius","backgroundColor","roundedRect","clone","onNodeSplit","renderChildren","filter","absolute","nonAbsoluteChilds","absoluteChilds","break","fixed","minPresenceAhead","_Object$assign","Transform","TextInstance","_container","PAGE_SIZES","getPageSize","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","vRange","getVerticalSteps","_this2","Page","_Base","_size","resetMargins","rulerWidth","getRulerWidth","dimension","percent","addDynamicChild","elements","Fragment","createInstance","cb","nodeWillWrap","addPage","debug","renderRuler","View","applyTransformations","drawBorders","PROTOCOL_REGEXP","getURL","capitalize","l","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","transformText","transformation","getFragments","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","getAttributedString","AttributedString","fromFragments","PDFRenderer","createPDFRenderer","Rect","Text","_attributedString","_layoutEngine","renderCallback","setMeasureFunc","measureText","bind","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","path","Path","Container","attributedString","layoutEngine","linesCount","blocks","block","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","y","x","initialX","href","Link","link","Note","note","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","imageWidth","warn","_context","message","xOffset","constructors","objectsEqual","a","b","oldPropsKeys","newPropsKeys","_typeof","shouldReplaceLink","ReactFiberReconciler","parentInstance","internalInstanceHandle","rootContainerInstance","oldProps","emptyObject","Date","now","textInstance","oldText","newText","updatePayload","pdf","pipe","BlobStream","reject","on","blob","stream","toBlob","onRender","error","mountNode","createContainer","updateContainer","React","InternalBlobProvider","_React$PureComponent","state","componentDidMount","renderDocument","onDocumentUpdate","componentDidUpdate","oldBlobUrl","setState","URL","createObjectURL","revokeObjectURL","catch","PureComponent","BlobProvider","PDFViewer","className","PDFDownloadLink","fileName","params","window","navigator","msSaveBlob"],"mappings":"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"}