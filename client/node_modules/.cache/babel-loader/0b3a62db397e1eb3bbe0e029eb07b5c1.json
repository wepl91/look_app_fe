{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar LocalStorageClient =\n/*#__PURE__*/\nfunction () {\n  function LocalStorageClient(namespace) {\n    _classCallCheck(this, LocalStorageClient);\n\n    this.namespace = '';\n    this.namespace = namespace;\n  }\n\n  _createClass(LocalStorageClient, [{\n    key: \"get\",\n    value: function get(resourcePath) {\n      var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var stored = localStorage.getItem(\"\".concat(this.namespace, \"_\").concat(resourcePath, \"_\").concat(id ? id : 'default'));\n\n      if (stored) {\n        return Promise.resolve(JSON.parse(stored));\n      } else {\n        return Promise.reject(new Error('Not found'));\n      }\n    }\n  }, {\n    key: \"post\",\n    value: function post(resourcePath, item) {\n      var toStore = JSON.stringify(item.toJS());\n      var id = item && item.id;\n      localStorage.setItem(\"\".concat(this.namespace, \"_\").concat(resourcePath, \"_\").concat(id ? id : 'default'), toStore);\n      return Promise.resolve(item);\n    }\n  }, {\n    key: \"put\",\n    value: function put(resourcePath, item) {\n      return this.post(resourcePath, item);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(resourcePath, id) {\n      localStorage.removeItem(\"\".concat(this.namespace, \"_\").concat(resourcePath, \"_\").concat(id || 'default'));\n      return Promise.resolve(id);\n    }\n  }]);\n\n  return LocalStorageClient;\n}();\n\nexport { LocalStorageClient as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/lib/LocalStorageClient.js"],"names":["LocalStorageClient","namespace","resourcePath","id","stored","localStorage","getItem","Promise","resolve","JSON","parse","reject","Error","item","toStore","stringify","toJS","setItem","post","removeItem"],"mappings":";;;IAAqBA,kB;;;AAGnB,8BAAaC,SAAb,EAAyB;AAAA;;AAAA,SAFzBA,SAEyB,GAFb,EAEa;AACvB,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;;;wBAEGC,Y,EAAyB;AAAA,UAAXC,EAAW,uEAAN,IAAM;AAC3B,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,WAAwB,KAAKL,SAA7B,cAA0CC,YAA1C,cAA2DC,EAAE,GAAGA,EAAH,GAAQ,SAArE,EAAf;;AAEA,UAAKC,MAAL,EAAc;AACZ,eAAOG,OAAO,CAACC,OAAR,CAAgBC,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAhB,CAAP;AACD,OAFD,MAGK;AACH,eAAOG,OAAO,CAACI,MAAR,CAAgB,IAAIC,KAAJ,CAAU,WAAV,CAAhB,CAAP;AACD;AACF;;;yBAEIV,Y,EAAcW,I,EAAM;AACvB,UAAIC,OAAO,GAAGL,IAAI,CAACM,SAAL,CAAeF,IAAI,CAACG,IAAL,EAAf,CAAd;AACA,UAAMb,EAAE,GAAGU,IAAI,IAAIA,IAAI,CAACV,EAAxB;AAEAE,MAAAA,YAAY,CAACY,OAAb,WAAwB,KAAKhB,SAA7B,cAA0CC,YAA1C,cAA2DC,EAAE,GAAGA,EAAH,GAAQ,SAArE,GAAkFW,OAAlF;AAEA,aAAOP,OAAO,CAACC,OAAR,CAAgBK,IAAhB,CAAP;AACD;;;wBAEGX,Y,EAAcW,I,EAAM;AACtB,aAAO,KAAKK,IAAL,CAAUhB,YAAV,EAAwBW,IAAxB,CAAP;AACD;;;4BAEMX,Y,EAAcC,E,EAAI;AACvBE,MAAAA,YAAY,CAACc,UAAb,WAA2B,KAAKlB,SAAhC,cAA6CC,YAA7C,cAA8DC,EAAE,IAAI,SAApE;AAEA,aAAOI,OAAO,CAACC,OAAR,CAAgBL,EAAhB,CAAP;AACD;;;;;;SAnCkBH,kB","sourcesContent":["export default class LocalStorageClient {\n  namespace = '';\n\n  constructor( namespace ) {\n    this.namespace = namespace;\n  }\n\n  get(resourcePath, id = null) {\n    const stored = localStorage.getItem(`${this.namespace}_${resourcePath}_${ id ? id : 'default'}`);\n\n    if ( stored ) {\n      return Promise.resolve(JSON.parse(stored));\n    }\n    else {\n      return Promise.reject( new Error('Not found') );\n    }\n  }\n\n  post(resourcePath, item) {\n    let toStore = JSON.stringify(item.toJS());\n    const id = item && item.id;\n\n    localStorage.setItem(`${this.namespace}_${resourcePath}_${ id ? id : 'default'}`, toStore);\n\n    return Promise.resolve(item);\n  }\n\n  put(resourcePath, item) {\n    return this.post(resourcePath, item);\n  }\n\n  delete(resourcePath, id) {\n    localStorage.removeItem(`${this.namespace}_${resourcePath}_${ id || 'default'}`)\n\n    return Promise.resolve(id);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}