{"ast":null,"code":"import _initializerDefineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { observable, action, computed, toJS } from 'mobx';\nimport { Model, Collection, DataWrapper } from './';\nimport { hashCode } from './Helper';\nvar Store = (_class =\n/*#__PURE__*/\nfunction () {\n  // all items in the store\n  // views contain Collections of items according to UI needs\n  // contextData contextual information accoording to UI needs\n  // stores model-unrelated results; stores DataWrappers\n  // minutes -- make this 5 \n  function Store(adapter, appStore) {\n    _classCallCheck(this, Store);\n\n    _initializerDefineProperty(this, \"items\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"views\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"contextData\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"fetchResults\", _descriptor4, this);\n\n    this.model = null;\n    this.appStore = null;\n    this.sufix = null;\n    this.adapter = null;\n    this.urlRoot = null;\n    this.updateThreshold = 2;\n    this.adapter = adapter;\n    this.appStore = appStore;\n\n    if (appStore && appStore.settings && appStore.settings.refreshRate) {\n      this.updateThreshold = this.appStore.settings.refreshRate;\n    }\n  }\n\n  _createClass(Store, [{\n    key: \"view\",\n    value: function view(viewName) {\n      var view;\n\n      if (!this.views.has(viewName)) {\n        view = new Collection(this, viewName);\n        this.views.set(viewName, view);\n      } else {\n        view = this.views.get(viewName);\n      }\n\n      return view;\n    }\n  }, {\n    key: \"viewData\",\n    value: function viewData(viewName) {\n      var viewData;\n\n      if (!this.contextData.has(viewName)) {\n        viewData = observable(new Map());\n        this.contextData.set(viewName, viewData);\n      } else {\n        viewData = this.contextData.get(viewName);\n      }\n\n      return viewData;\n    }\n  }, {\n    key: \"fetchResult\",\n    value: function fetchResult(viewName, defaultData) {\n      var view;\n\n      if (!this.fetchResults.has(viewName)) {\n        view = new DataWrapper(defaultData, this);\n        this.fetchResults.set(viewName, view);\n      } else {\n        view = this.fetchResults.get(viewName);\n      }\n\n      return view;\n    }\n  }, {\n    key: \"getDummy\",\n    value: function getDummy() {\n      var _this = this;\n\n      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var ModelClass = this.model;\n\n      if (length <= 1) {\n        return new ModelClass({}, this);\n      } else {\n        return Array.from(Array(length)).map(function () {\n          return new ModelClass({}, _this);\n        });\n      }\n    }\n  }, {\n    key: \"getNew\",\n    value: function getNew() {\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var ModelClass = this.model;\n      return new ModelClass(attrs, this);\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      return this.search({\n        per_page: limit\n      }, 'all');\n    }\n  }, {\n    key: \"search\",\n    value: function search(filters) {\n      var _this2 = this;\n\n      var viewName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var forceRefresh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var apiPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var viewFullName = \"\".concat(viewName, \"-\").concat(hashCode(JSON.stringify(filters)), \"-\").concat(this.appStore && this.appStore.loggedInUserKey);\n      var view = this.view(viewFullName);\n      var viewData = this.viewData(viewFullName);\n      var url = this.sufix ? \"\".concat(apiPath || this.modelRoot, \"/\").concat(this.sufix) : \"\".concat(apiPath || this.modelRoot);\n      var promise;\n\n      if (forceRefresh || view.needsUpdate()) {\n        view.beginUpdate();\n        var ModelClass = this.model;\n        promise = this.adapter.search(url, filters).then(function (res) {\n          // clear view\n          view.clear(); //clear viewData\n\n          viewData.clear(); // get the raw items\n\n          var items = res['results'] || res;\n          var contextData = res['headers'] || res; // iterate results\n\n          if (Array.isArray(items)) {\n            for (var i = 0, l = items.length; i < l; i++) {\n              view.add(_this2.items.addOrUpdateModel(new ModelClass(items[i], _this2)));\n            }\n          } else {\n            view.add(_this2.items.addOrUpdateModel(new ModelClass(items, _this2)));\n          }\n\n          viewData.merge(contextData);\n          view.endUpdate();\n          return view;\n        }, function (err) {\n          view.endUpdate(err); //throw err;\n        });\n      } // return returnPromise ? promise : view;\n\n\n      return view;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var _this3 = this;\n\n      var forceRefresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var onFetch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var filters = arguments.length > 3 ? arguments[3] : undefined;\n      var apiPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var ModelClass = this.model;\n      var item = this.items.find(id);\n\n      if (item === undefined) {\n        item = new ModelClass({\n          id: id\n        }, this);\n        this.items.add(item);\n      }\n\n      if (forceRefresh || item.needsUpdate()) {\n        item.beginUpdate();\n        this.adapter.get(apiPath || this.modelRoot, id, filters).then(function (res) {\n          _this3.items.addOrUpdateModel(new ModelClass(res['results'] || res, _this3));\n\n          item.endUpdate();\n          onFetch && onFetch(item);\n        }, function (err) {\n          item.endUpdate(err); // throw err; -- this ends the flow\n        });\n      }\n\n      return item;\n    }\n  }, {\n    key: \"getFromData\",\n    value: function getFromData(itemData) {\n      var ModelClass = this.model;\n      var item = this.items.find(itemData[new ModelClass()._primaryKey]);\n\n      if (item === undefined) {\n        item = new ModelClass(itemData, this);\n        this.items.add(item);\n      } else {\n        item.beginUpdate();\n        this.items.addOrUpdateModel(new ModelClass(itemData), this);\n        item.endUpdate();\n      }\n\n      return item;\n    }\n  }, {\n    key: \"save\",\n    value: function save(model) {\n      var _this4 = this;\n\n      var apiPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      model.beginUpdate();\n\n      if (model.isNew) {\n        this.adapter.post(apiPath || this.modelRoot, model).then(function (res) {\n          if (res && res['results']) {\n            model.set(res['results']);\n\n            _this4.items.addOrUpdateModel(model);\n\n            model.endUpdate();\n          }\n        }, function (err) {\n          model.endUpdate(err); //throw err;\n        });\n      } else {\n        this.adapter.put(apiPath || this.modelRoot, model).then(function (res) {\n          if (res && res['results']) {\n            model.set(res['results']);\n\n            _this4.items.addOrUpdateModel(model);\n\n            model.endUpdate();\n          }\n        }, function (err) {\n          model.endUpdate(err); //throw err;\n        });\n      }\n\n      return model;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(model) {\n      var _this5 = this;\n\n      var apiPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      model.beginUpdate();\n      this.adapter.delete(apiPath || this.modelRoot, model.id).then(function (res) {\n        _this5.items.addOrUpdateModel(model);\n      }, function (err) {\n        model.endUpdate(err);\n      });\n    }\n  }, {\n    key: \"fetch\",\n    value: function fetch(action, params) {\n      var defaultData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var forceRefresh = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var apiPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n      var secure = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n      var viewFullName = \"\".concat(action, \"-\").concat(hashCode(JSON.stringify(params)), \"-\").concat(this.appStore && this.appStore.loggedInUserKey);\n      var view = this.fetchResult(viewFullName, defaultData);\n\n      if (forceRefresh || view.needsUpdate()) {\n        var url = apiPath ? apiPath : this.modelRoot;\n        view.beginUpdate();\n        this.adapter.search(\"\".concat(url, \"/\").concat(action), params, secure).then(function (res) {\n          // get the raw data\n          var data = res['results'] || res;\n          view.set(data);\n          view.endUpdate();\n        }, function (err) {\n          view.endUpdate(err); //throw err;\n        });\n      }\n\n      return view;\n    }\n  }, {\n    key: \"store\",\n    value: function store(json) {\n      var ModelClass = this.model;\n      var item = this.items.find(json.id);\n\n      if (item === undefined) {\n        item = new ModelClass({\n          id: json.id\n        }, this);\n        this.items.add(item);\n      }\n\n      item.beginUpdate();\n      this.items.addOrUpdateModel(new ModelClass(json, this));\n      item.endUpdate();\n      return item;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.items.clear();\n      this.views.forEach(function (view, key) {\n        view.clear();\n      });\n      this.views.clear();\n    }\n  }, {\n    key: \"modelRoot\",\n    get: function get() {\n      if (this.urlRoot) return this.urlRoot;\n      var ModelClass = this.model;\n      this.urlRoot = new ModelClass({}, this).urlRoot;\n      return this.urlRoot;\n    }\n  }]);\n\n  return Store;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new Collection(this);\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"views\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new Map();\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"contextData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new Map();\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"fetchResults\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new Map();\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"getAll\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getAll\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"search\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"search\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"get\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"get\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getFromData\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"getFromData\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"save\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"save\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"destroy\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"destroy\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"fetch\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"fetch\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"store\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"store\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clear\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clear\"), _class.prototype)), _class);\nexport { Store as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/lib/Store.js"],"names":["observable","action","computed","toJS","Model","Collection","DataWrapper","hashCode","Store","adapter","appStore","model","sufix","urlRoot","updateThreshold","settings","refreshRate","viewName","view","views","has","set","get","viewData","contextData","Map","defaultData","fetchResults","length","ModelClass","Array","from","map","attrs","limit","search","per_page","filters","forceRefresh","apiPath","viewFullName","JSON","stringify","loggedInUserKey","url","modelRoot","promise","needsUpdate","beginUpdate","then","res","clear","items","isArray","i","l","add","addOrUpdateModel","merge","endUpdate","err","id","onFetch","item","find","undefined","itemData","_primaryKey","isNew","post","put","delete","params","secure","fetchResult","data","json","forEach","key"],"mappings":"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","sourcesContent":["import {\n  observable,\n  action,\n  computed,\n  toJS\n} from 'mobx';\n\nimport { Model, Collection, DataWrapper } from './';\n\nimport { hashCode } from './Helper';\n\nexport default class Store {\n  @observable items = new Collection(this); // all items in the store\n  @observable views = new Map(); // views contain Collections of items according to UI needs\n  @observable contextData = new Map(); // contextData contextual information accoording to UI needs\n  @observable fetchResults = new Map(); // stores model-unrelated results; stores DataWrappers\n  \n\n  model = null;\n  appStore = null;\n  sufix = null;\n  adapter = null;\n  urlRoot = null;\n\n  updateThreshold = 2; // minutes -- make this 5 \n\n  constructor (adapter, appStore) {\n    this.adapter = adapter;\n    this.appStore = appStore;\n\n    if ( appStore && appStore.settings && appStore.settings.refreshRate ) {\n      this.updateThreshold = this.appStore.settings.refreshRate;\n    }\n  }\n\n  get modelRoot() {\n    if ( this.urlRoot ) return this.urlRoot;\n    \n    const ModelClass = this.model;\n    this.urlRoot = (new ModelClass({}, this)).urlRoot;\n\n    return this.urlRoot;\n  }\n\n  view( viewName ) {\n    let view;\n\n    if ( !this.views.has(viewName) ) {\n      view = new Collection(this, viewName);\n      this.views.set( viewName, view );\n    }\n    else {\n      view = this.views.get(viewName);\n    }\n\n    return view;\n  }\n\n  viewData( viewName ) {\n    let viewData;\n\n    if( !this.contextData.has( viewName ) ) {\n      viewData = observable(new Map());\n      this.contextData.set( viewName, viewData )\n    }\n    else {\n      viewData = this.contextData.get( viewName );\n    }\n    return viewData;\n  }\n\n  fetchResult( viewName, defaultData ) {\n    let view;\n\n    if ( !this.fetchResults.has(viewName) ) {\n      view = new DataWrapper(defaultData, this);\n      this.fetchResults.set(viewName, view);\n    }\n    else {\n      view = this.fetchResults.get(viewName);\n    }\n\n    return view;\n  }\n\n  getDummy( length = 1 ) {\n    const ModelClass = this.model;\n    if ( length <= 1 ) {\n      return new ModelClass({}, this);\n    }\n    else {\n      return Array.from( Array(length) ).map( () => ( new ModelClass({}, this)) );\n    }\n  }\n\n  getNew( attrs = {} ) {\n    const ModelClass = this.model;\n    return new ModelClass(attrs, this);\n  }\n\n  @action\n  getAll( limit = 1000 ) {\n    return this.search({ per_page: limit }, 'all');\n  }\n\n  @action\n  search( filters, viewName = 'default', forceRefresh = false /*, returnPromise = false */, apiPath = null ) {\n\n    const viewFullName = `${viewName}-${hashCode(JSON.stringify(filters))}-${this.appStore && this.appStore.loggedInUserKey}`;\n\n    const view = this.view(viewFullName);\n    const viewData = this.viewData(viewFullName);\n\n    const url = this.sufix ? `${apiPath || this.modelRoot}/${this.sufix}` : `${apiPath || this.modelRoot}`;\n    let promise;\n\n    if ( forceRefresh || view.needsUpdate() ) {\n\n      view.beginUpdate();\n      const ModelClass = this.model;\n\n      \n      promise = this.adapter.search( url, filters )\n        .then( \n          \n          (res) => {\n            // clear view\n            view.clear();\n\n            //clear viewData\n            viewData.clear();\n\n            // get the raw items\n            const items = res['results'] || res;\n            const contextData = res['headers'] || res;\n            \n            // iterate results\n            if (Array.isArray(items)) {\n              for (var i = 0, l = items.length; i < l; i++) {\n                view.add( this.items.addOrUpdateModel( new ModelClass(items[i], this ) ) );\n              }\n            }\n            else {\n              view.add( this.items.addOrUpdateModel( new ModelClass(items, this ) ) );\n            }\n            \n            viewData.merge(contextData);       \n\n            view.endUpdate();\n\n            return view;\n\n          },\n          (err) => {\n            view.endUpdate(err);\n            //throw err;\n          });\n\n    }\n\n    // return returnPromise ? promise : view;\n\n    return view;\n\n  }\n\n\n  @action\n  get( id, forceRefresh = false, onFetch = null, filters, apiPath = null ) {\n\n    const ModelClass = this.model;\n    let item = this.items.find(id);\n\n    if ( item === undefined ) {\n      item = new ModelClass({ id: id }, this);\n\n      this.items.add( item );\n    }\n\n    if ( forceRefresh || item.needsUpdate() ) {\n      item.beginUpdate();\n      this.adapter.get( apiPath || this.modelRoot, id, filters )\n        .then(\n          (res) => {\n            this.items.addOrUpdateModel( new ModelClass(res['results'] || res, this) );\n            item.endUpdate();\n\n            onFetch && onFetch(item);\n          },\n          (err) => {\n            item.endUpdate(err);\n            // throw err; -- this ends the flow\n          });\n    }\n\n    return item;\n  }\n\n  @action\n  getFromData( itemData ) {\n\n    const ModelClass = this.model;\n\n    let item = this.items.find(itemData[ (new ModelClass())._primaryKey ]); \n\n\n    if ( item === undefined ) {\n      item = new ModelClass(itemData, this);\n      this.items.add(item);\n    }\n    else\n    {\n      item.beginUpdate();\n      this.items.addOrUpdateModel( new ModelClass(itemData), this );\n      item.endUpdate();\n    }\n\n    return item;\n  }\n\n\n  @action\n  save( model, apiPath = null ) {\n\n    model.beginUpdate();\n\n    if ( model.isNew ) {\n\n      this.adapter.post( apiPath || this.modelRoot, model )\n        .then(\n          (res) => {\n            if( res && res['results'] ) {\n              model.set(res['results'])\n              this.items.addOrUpdateModel( model );\n              model.endUpdate();\n            }\n          },\n          (err) => {\n            model.endUpdate(err);\n            //throw err;\n          });\n\n    } \n    else {\n\n      this.adapter.put( apiPath || this.modelRoot, model )\n        .then(\n          (res) => {\n            if ( res && res['results']) {\n              model.set(res['results'])\n              this.items.addOrUpdateModel( model );\n              model.endUpdate();\n            }\n          },\n          (err) => {\n            model.endUpdate(err);\n            //throw err;\n          });\n\n    }\n    return model;\n\n  }\n\n\n  @action\n  destroy( model, apiPath = null ) {\n\n    model.beginUpdate();\n\n    this.adapter.delete( apiPath || this.modelRoot, model.id)\n      .then(\n        (res) => {\n          this.items.addOrUpdateModel(model);\n        },\n        (err) => {\n          model.endUpdate(err);\n        });\n  }\n\n  @action \n  fetch( action, params, defaultData = {}, forceRefresh = false, apiPath = null, secure = true ) {\n    const viewFullName = `${action}-${hashCode(JSON.stringify(params))}-${this.appStore && this.appStore.loggedInUserKey}`;\n    let view = this.fetchResult(viewFullName, defaultData);\n    \n\n    if ( forceRefresh || view.needsUpdate() ) {\n      const url =apiPath? apiPath: this.modelRoot;\n\n      view.beginUpdate();\n      this.adapter.search( `${url}/${action}`, params, secure )\n        .then( \n          (res) => {\n            // get the raw data\n            const data = res['results'] || res;\n\n            view.set(data);\n\n            view.endUpdate();\n\n          },\n          (err) => {\n            view.endUpdate(err);\n            //throw err;\n          });\n\n    }\n\n    return view;\n  }\n\n\n\n  @action\n  store( json ) {\n    const ModelClass = this.model;\n    let item = this.items.find(json.id);\n    \n    if ( item === undefined ) {\n      item = new ModelClass({ id: json.id }, this);\n\n      this.items.add( item );\n    }\n\n    item.beginUpdate();\n    \n    this.items.addOrUpdateModel( new ModelClass(json, this) );\n\n    item.endUpdate();\n\n    return item;\n  }  \n\n\n  @action\n  clear() {\n    this.items.clear();\n\n    this.views.forEach( (view, key) => { view.clear(); });\n    this.views.clear();\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}