{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Appointments/AppointmentsList.jsx\";\n\nimport React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Text, Title, Loader, Field, Select } from 'shipnow-mercurio';\nimport moment from 'moment';\nimport { Columns, Column, Level, LevelLeft, LevelRight } from 'bloomer';\nimport { withStore } from '../../hocs';\nimport { AppointmentCalendar } from '../../components/Appointments';\nimport startCase from 'lodash/startCase';\nimport { faChevronCircleLeft, faChevronCircleRight, faSpinner, faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport { translate } from '../../lib/Translator';\n\nvar AppointmentsList = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentsList, _Component);\n\n  function AppointmentsList(props) {\n    var _this;\n\n    _classCallCheck(this, AppointmentsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppointmentsList).call(this, props));\n    _this.chunk = _this.chunk.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleYear = _this.handleYear.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMonth = _this.handleMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleReload = _this.handleReload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getDatesInMonth = _this.getDatesInMonth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleProfessional = _this.handleProfessional.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      appointments: null,\n      professionals: null,\n      filterProf: 'null'\n    };\n    return _this;\n  }\n\n  _createClass(AppointmentsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var date = moment();\n      var datesInMonth = this.getDatesInMonth(date);\n      this.setState({\n        date: date,\n        datesInWeeks: this.chunk(datesInMonth, 7),\n        appointments: this.props.store.appointments.search({}, 'appointment-list-view', true),\n        professionals: this.props.store.professionals.search({}, 'professional-list-appointment-view', true)\n      });\n    }\n  }, {\n    key: \"handleProfessional\",\n    value: function handleProfessional(sender, value, name) {\n      var searchFilter = value != 'null' ? {\n        professional: value\n      } : {};\n      this.setState({\n        filterProf: value,\n        appointments: this.props.store.appointments.search(searchFilter, 'appointment-list-view', true)\n      });\n    }\n  }, {\n    key: \"handleReload\",\n    value: function handleReload() {\n      this.setState({\n        appointments: this.props.store.appointments.search({}, 'appointment-list-view-reload', true)\n      });\n    }\n  }, {\n    key: \"handleMonth\",\n    value: function handleMonth(sender, value, name) {\n      var newDate = name == 'next' ? moment(this.state.date).add(1, 'months') : moment(this.state.date).subtract(1, 'months');\n      var datesInMonth = this.getDatesInMonth(newDate);\n      this.setState({\n        date: newDate,\n        datesInWeeks: this.chunk(datesInMonth, 7)\n      });\n    }\n  }, {\n    key: \"handleYear\",\n    value: function handleYear(sender, value, name) {\n      var newDate = name == 'next' ? moment(this.state.date).add(1, 'years') : moment(this.state.date).subtract(1, 'years');\n      var datesInMonth = this.getDatesInMonth(newDate);\n      this.setState({\n        date: newDate,\n        datesInWeeks: this.chunk(datesInMonth, 7)\n      });\n    }\n    /** \n    * chunk => method that \"cuts\" the array into n arrays of size you want\n    */\n\n  }, {\n    key: \"chunk\",\n    value: function chunk(arr, size) {\n      return arr.reduce(function (acc, _, i) {\n        return i % size ? acc : [].concat(_toConsumableArray(acc), [arr.slice(i, i + size)]);\n      }, []);\n    }\n  }, {\n    key: \"getDatesInMonth\",\n    value: function getDatesInMonth(date) {\n      return Array.from({\n        length: date.daysInMonth()\n      }, function (x, i) {\n        return moment(date).startOf('month').add(i, 'days');\n      });\n    }\n  }, {\n    key: \"getProfessionalList\",\n    value: function getProfessionalList() {\n      var ret = [];\n      ret.push({\n        key: this.getText('- sin profesional -'),\n        value: 'null'\n      });\n      this.state.professionals.toArray().forEach(function (prof) {\n        ret.push({\n          key: prof.fullName,\n          value: prof.id\n        });\n      });\n      return ret;\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      var _React$createElement;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Level, {\n        className: \"pl-3 pr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        style: {\n          paddingRight: '6px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.getText('Calendario de turnos'))), React.createElement(LevelRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.getText('Cancelar turno de hoy')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Columns, {\n        className: \"pl-4 pr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 3,\n        className: \"pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('¿Querés ver los turnos de un único profesional?'),\n        labelNote: this.getText('Selecciona un profesional'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Select, (_React$createElement = {\n        value: 'null',\n        placeholder: this.getText('Profesionales'),\n        borderless: true,\n        icon: faChevronDown,\n        loading: !this.state.professionals || !this.state.professionals.isOk()\n      }, _defineProperty(_React$createElement, \"value\", [{\n        key: this.getText('- sin profesional -'),\n        value: 'null'\n      }]), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))))), React.createElement(Loader, {\n        icon: faSpinner,\n        label: this.getText('Cargando los turnos..'),\n        className: \"fullscreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isAppointmentLoaded = this.state.appointments && this.state.appointments.isOk();\n      var isProfessionalsLoaded = this.state.professionals && this.state.professionals.isOk();\n      if (!isAppointmentLoaded || !isProfessionalsLoaded) return this.renderLoader();\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Level, {\n        className: \"pl-3 pr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        style: {\n          paddingRight: '6px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.getText('Calendario de turnos'))), React.createElement(LevelRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.getText('Cancelar turno de hoy')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(Columns, {\n        className: \"pl-4 pr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 3,\n        className: \"pl-2 pr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('¿Querés ver los turnos de un único profesional?'),\n        labelNote: this.getText('Selecciona un profesional'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: this.state.filterProf,\n        key: this.state.professionals,\n        onChange: this.handleProfessional,\n        placeholder: this.getText('Profesionales'),\n        borderless: true,\n        icon: faChevronDown,\n        loading: !this.state.professionals || !this.state.professionals.isOk(),\n        options: this.state.professionals && this.state.professionals.isOk() && this.getProfessionalList(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })))), React.createElement(Columns, {\n        className: \"is-gapless is-marginless\",\n        isVCentered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Column, {\n        className: \"has-text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleYear,\n        name: \"prev\",\n        kind: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faChevronCircleLeft,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        className: \"has-text-centered\",\n        isSize: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Text, {\n        weight: \"medium\",\n        size: \"xl\",\n        color: \"primaryDark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, startCase(this.state.date.format('YYYY')))), React.createElement(Column, {\n        className: \"has-text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleYear,\n        name: \"next\",\n        kind: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faChevronCircleRight,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      })))), React.createElement(Columns, {\n        className: \"pl-3\",\n        isVCentered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Column, {\n        className: \"has-text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleMonth,\n        name: \"prev\",\n        kind: \"outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\".concat(this.getText(startCase(moment(this.state.date).subtract(1, 'months').format('MMMM')))))), React.createElement(Column, {\n        className: \"has-text-centered\",\n        isSize: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Text, {\n        weight: \"medium\",\n        size: \"xl\",\n        color: \"primaryDark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.getText(startCase(this.state.date.format('MMMM'))))), React.createElement(Column, {\n        className: \"has-text-right pr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleMonth,\n        name: \"next\",\n        kind: \"outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"\".concat(this.getText(startCase(moment(this.state.date).add(1, 'months').format('MMMM'))))))), React.createElement(AppointmentCalendar, {\n        onReload: this.handleReload,\n        key: this.state.datesInWeeks,\n        weeks: this.state.datesInWeeks,\n        appointments: this.state.appointments.toArray(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AppointmentsList;\n}(Component)) || _class;\n\nexport default withStore(AppointmentsList);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Appointments/AppointmentsList.jsx"],"names":["React","Component","observer","Button","Text","Title","Loader","Field","Select","moment","Columns","Column","Level","LevelLeft","LevelRight","withStore","AppointmentCalendar","startCase","faChevronCircleLeft","faChevronCircleRight","faSpinner","faChevronDown","FontAwesomeIcon","translate","AppointmentsList","props","chunk","bind","handleYear","handleMonth","handleReload","getDatesInMonth","handleProfessional","state","appointments","professionals","filterProf","date","datesInMonth","setState","datesInWeeks","store","search","sender","value","name","searchFilter","professional","newDate","add","subtract","arr","size","reduce","acc","_","i","slice","Array","from","length","daysInMonth","x","startOf","ret","push","key","getText","toArray","forEach","prof","fullName","id","text","ui","language","paddingRight","isOk","isAppointmentLoaded","isProfessionalsLoaded","renderLoader","getProfessionalList","format"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,KAHJ,EAIIC,MAJJ,EAKIC,KALJ,EAMIC,MANJ,QAOO,kBAPP;AAQA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SACIC,OADJ,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,UALJ,QAMO,SANP;AAQA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,mBAAT,QAAoC,+BAApC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,EAAoDC,SAApD,EAA+DC,aAA/D,QAAoF,mCAApF;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,SAASC,SAAT,QAA0B,sBAA1B;;IAEMC,gB,GADLtB,Q;;;;;AAEG,4BAAYuB,KAAZ,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;AAEA,UAAKC,KAAL,GAA0B,MAAKA,KAAL,CAAWC,IAAX,uDAA1B;AACA,UAAKC,UAAL,GAA0B,MAAKA,UAAL,CAAgBD,IAAhB,uDAA1B;AACA,UAAKE,WAAL,GAA0B,MAAKA,WAAL,CAAiBF,IAAjB,uDAA1B;AACA,UAAKG,YAAL,GAA0B,MAAKA,YAAL,CAAkBH,IAAlB,uDAA1B;AACA,UAAKI,eAAL,GAA0B,MAAKA,eAAL,CAAqBJ,IAArB,uDAA1B;AACA,UAAKK,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBL,IAAxB,uDAA1B;AAEA,UAAKM,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,IADL;AAETC,MAAAA,aAAa,EAAE,IAFN;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAVe;AAelB;;;;wCAEmB;AAChB,UAAMC,IAAI,GAAG5B,MAAM,EAAnB;AACA,UAAM6B,YAAY,GAAG,KAAKP,eAAL,CAAqBM,IAArB,CAArB;AACA,WAAKE,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAEA,IADI;AAEVG,QAAAA,YAAY,EAAE,KAAKd,KAAL,CAAWY,YAAX,EAAyB,CAAzB,CAFJ;AAGVJ,QAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWgB,KAAX,CAAiBP,YAAjB,CAA8BQ,MAA9B,CAAqC,EAArC,EAAyC,uBAAzC,EAAkE,IAAlE,CAHJ;AAIVP,QAAAA,aAAa,EAAE,KAAKV,KAAL,CAAWgB,KAAX,CAAiBN,aAAjB,CAA+BO,MAA/B,CAAsC,EAAtC,EAA0C,oCAA1C,EAAgF,IAAhF;AAJL,OAAd;AAMH;;;uCAEmBC,M,EAAQC,K,EAAOC,I,EAAO;AACtC,UAAMC,YAAY,GAAGF,KAAK,IAAI,MAAT,GAAkB;AAAEG,QAAAA,YAAY,EAAEH;AAAhB,OAAlB,GAA4C,EAAjE;AACA,WAAKL,QAAL,CAAc;AACVH,QAAAA,UAAU,EAAEQ,KADF;AAEVV,QAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWgB,KAAX,CAAiBP,YAAjB,CAA8BQ,MAA9B,CAAqCI,YAArC,EAAmD,uBAAnD,EAA4E,IAA5E;AAFJ,OAAd;AAIH;;;mCAEc;AACX,WAAKP,QAAL,CAAc;AACVL,QAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWgB,KAAX,CAAiBP,YAAjB,CAA8BQ,MAA9B,CAAqC,EAArC,EAAyC,8BAAzC,EAAyE,IAAzE;AADJ,OAAd;AAGH;;;gCAEWC,M,EAAQC,K,EAAOC,I,EAAM;AAC7B,UAAIG,OAAO,GAAGH,IAAI,IAAI,MAAR,GAAiBpC,MAAM,CAAC,KAAKwB,KAAL,CAAWI,IAAZ,CAAN,CAAwBY,GAAxB,CAA4B,CAA5B,EAA+B,QAA/B,CAAjB,GAA4DxC,MAAM,CAAC,KAAKwB,KAAL,CAAWI,IAAZ,CAAN,CAAwBa,QAAxB,CAAiC,CAAjC,EAAoC,QAApC,CAA1E;AACA,UAAMZ,YAAY,GAAG,KAAKP,eAAL,CAAqBiB,OAArB,CAArB;AACA,WAAKT,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAEW,OADI;AAEVR,QAAAA,YAAY,EAAE,KAAKd,KAAL,CAAWY,YAAX,EAAyB,CAAzB;AAFJ,OAAd;AAIH;;;+BAEUK,M,EAAQC,K,EAAOC,I,EAAM;AAC5B,UAAIG,OAAO,GAAGH,IAAI,IAAI,MAAR,GAAiBpC,MAAM,CAAC,KAAKwB,KAAL,CAAWI,IAAZ,CAAN,CAAwBY,GAAxB,CAA4B,CAA5B,EAA+B,OAA/B,CAAjB,GAA2DxC,MAAM,CAAC,KAAKwB,KAAL,CAAWI,IAAZ,CAAN,CAAwBa,QAAxB,CAAiC,CAAjC,EAAoC,OAApC,CAAzE;AACA,UAAMZ,YAAY,GAAG,KAAKP,eAAL,CAAqBiB,OAArB,CAArB;AACA,WAAKT,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAEW,OADI;AAEVR,QAAAA,YAAY,EAAE,KAAKd,KAAL,CAAWY,YAAX,EAAyB,CAAzB;AAFJ,OAAd;AAIH;AAED;;;;;;0BAGMa,G,EAAKC,I,EAAM;AACb,aAAOD,GAAG,CAACE,MAAJ,CAAW,UAACC,GAAD,EAAMC,CAAN,EAASC,CAAT;AAAA,eAAgBA,CAAC,GAAGJ,IAAL,GAAaE,GAAb,gCAAuBA,GAAvB,IAA4BH,GAAG,CAACM,KAAJ,CAAUD,CAAV,EAAaA,CAAC,GAAGJ,IAAjB,CAA5B,EAAf;AAAA,OAAX,EAA+E,EAA/E,CAAP;AACH;;;oCAEef,I,EAAM;AAClB,aAAOqB,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAEvB,IAAI,CAACwB,WAAL;AAAV,OAAX,EAA2C,UAACC,CAAD,EAAIN,CAAJ;AAAA,eAAU/C,MAAM,CAAC4B,IAAD,CAAN,CAAa0B,OAAb,CAAqB,OAArB,EAA8Bd,GAA9B,CAAkCO,CAAlC,EAAqC,MAArC,CAAV;AAAA,OAA3C,CAAP;AACH;;;0CAEqB;AAClB,UAAMQ,GAAG,GAAG,EAAZ;AACAA,MAAAA,GAAG,CAACC,IAAJ,CAAS;AACLC,QAAAA,GAAG,EAAE,KAAKC,OAAL,CAAa,qBAAb,CADA;AAELvB,QAAAA,KAAK,EAAE;AAFF,OAAT;AAIA,WAAKX,KAAL,CAAWE,aAAX,CAAyBiC,OAAzB,GAAmCC,OAAnC,CAA2C,UAAAC,IAAI,EAAI;AAC/CN,QAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,UAAAA,GAAG,EAAEI,IAAI,CAACC,QAAZ;AAAsB3B,UAAAA,KAAK,EAAE0B,IAAI,CAACE;AAAlC,SAAT;AACH,OAFD;AAGA,aAAOR,GAAP;AACH;;;4BAEOS,I,EAAM;AACV,aAAOlD,SAAS,CAACkD,IAAD,EAAO,KAAKhD,KAAL,CAAWgB,KAAX,CAAiBiC,EAAjB,CAAoBC,QAA3B,CAAhB;AACH;;;mCAEc;AAAA;;AAEX,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,KAAKT,OAAL,CAAa,sBAAb,CAAT,CADJ,CADJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,KAAKA,OAAL,CAAa,uBAAb,CAAnB,CADJ,CAJJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAUI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,iDAAb,CAAf;AAAiF,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,2BAAb,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,MADX;AAEI,QAAA,WAAW,EAAG,KAAKA,OAAL,CAAa,eAAb,CAFlB;AAGI,QAAA,UAAU,MAHd;AAII,QAAA,IAAI,EAAE9C,aAJV;AAKI,QAAA,OAAO,EAAE,CAAC,KAAKY,KAAL,CAAWE,aAAZ,IAA6B,CAAC,KAAKF,KAAL,CAAWE,aAAX,CAAyB0C,IAAzB;AAL3C,wDAMW,CAAC;AAACX,QAAAA,GAAG,EAAE,KAAKC,OAAL,CAAa,qBAAb,CAAN;AAA0CvB,QAAAA,KAAK,EAAE;AAAjD,OAAD,CANX;AAAA;AAAA;AAAA,uFADJ,CADJ,CADJ,CAVJ,EAuBI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAExB,SAAd;AAAyB,QAAA,KAAK,EAAG,KAAK+C,OAAL,CAAa,uBAAb,CAAjC;AAAyE,QAAA,SAAS,EAAC,YAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBJ,CADJ;AA0BH;;;6BAEQ;AACL,UAAMW,mBAAmB,GAAG,KAAK7C,KAAL,CAAWC,YAAX,IAA2B,KAAKD,KAAL,CAAWC,YAAX,CAAwB2C,IAAxB,EAAvD;AACA,UAAME,qBAAqB,GAAG,KAAK9C,KAAL,CAAWE,aAAX,IAA4B,KAAKF,KAAL,CAAWE,aAAX,CAAyB0C,IAAzB,EAA1D;AACA,UAAI,CAACC,mBAAD,IAAwB,CAACC,qBAA7B,EAAoD,OAAO,KAAKC,YAAL,EAAP;AACpD,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEJ,UAAAA,YAAY,EAAE;AAAhB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKT,OAAL,CAAa,sBAAb,CAAR,CADJ,CADJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,KAAKA,OAAL,CAAa,uBAAb,CAAnB,CADJ,CAJJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAUI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,iDAAb,CAAf;AAAiF,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,2BAAb,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWG,UADtB;AAEI,QAAA,GAAG,EAAG,KAAKH,KAAL,CAAWE,aAFrB;AAGI,QAAA,QAAQ,EAAG,KAAKH,kBAHpB;AAII,QAAA,WAAW,EAAG,KAAKmC,OAAL,CAAa,eAAb,CAJlB;AAKI,QAAA,UAAU,MALd;AAMI,QAAA,IAAI,EAAE9C,aANV;AAOI,QAAA,OAAO,EAAE,CAAC,KAAKY,KAAL,CAAWE,aAAZ,IAA6B,CAAC,KAAKF,KAAL,CAAWE,aAAX,CAAyB0C,IAAzB,EAP3C;AAQI,QAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWE,aAAX,IAA4B,KAAKF,KAAL,CAAWE,aAAX,CAAyB0C,IAAzB,EAA5B,IAA+D,KAAKI,mBAAL,EAR5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CAVJ,EAyBI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,0BAAnB;AAA8C,QAAA,WAAW,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKrD,UAAtB;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,IAAI,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEV,mBAAvB;AAA4C,QAAA,IAAI,EAAC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1D,CADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,MAAM,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqDD,SAAS,CAAC,KAAKgB,KAAL,CAAWI,IAAX,CAAgB6C,MAAhB,CAAuB,MAAvB,CAAD,CAA9D,CADJ,CAJJ,EAOI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKtD,UAAtB;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,IAAI,EAAC,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0D,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAET,oBAAvB;AAA6C,QAAA,IAAI,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1D,CADJ,CAPJ,CAzBJ,EAoCI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,WAAW,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKU,WAAtB;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,IAAI,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkE,KAAKsC,OAAL,CAAalD,SAAS,CAACR,MAAM,CAAC,KAAKwB,KAAL,CAAWI,IAAZ,CAAN,CAAwBa,QAAxB,CAAiC,CAAjC,EAAoC,QAApC,EAA8CgC,MAA9C,CAAqD,MAArD,CAAD,CAAtB,CAAlE,EADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,MAAM,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqD,KAAKf,OAAL,CAAalD,SAAS,CAAC,KAAKgB,KAAL,CAAWI,IAAX,CAAgB6C,MAAhB,CAAuB,MAAvB,CAAD,CAAtB,CAArD,CADJ,CAJJ,EAOI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKrD,WAAtB;AAAmC,QAAA,IAAI,EAAC,MAAxC;AAA+C,QAAA,IAAI,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkE,KAAKsC,OAAL,CAAalD,SAAS,CAACR,MAAM,CAAC,KAAKwB,KAAL,CAAWI,IAAZ,CAAN,CAAwBY,GAAxB,CAA4B,CAA5B,EAA+B,QAA/B,EAAyCiC,MAAzC,CAAgD,MAAhD,CAAD,CAAtB,CAAlE,EADJ,CAPJ,CApCJ,EA+CI,oBAAC,mBAAD;AAAqB,QAAA,QAAQ,EAAE,KAAKpD,YAApC;AAAkD,QAAA,GAAG,EAAE,KAAKG,KAAL,CAAWO,YAAlE;AAAgF,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO,YAAlG;AAAgH,QAAA,YAAY,EAAE,KAAKP,KAAL,CAAWC,YAAX,CAAwBkC,OAAxB,EAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CJ,CADJ;AAkDH;;;;EA5K0BnE,S;;AA+K/B,eAAec,SAAS,CAACS,gBAAD,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport {\n    Button,\n    Text,\n    Title,\n    Loader,\n    Field,\n    Select,\n} from 'shipnow-mercurio';\nimport moment from 'moment';\n\nimport {\n    Columns,\n    Column,\n    Level,\n    LevelLeft,\n    LevelRight\n} from 'bloomer';\n\nimport { withStore } from '../../hocs'\n\nimport { AppointmentCalendar } from '../../components/Appointments';\n\nimport startCase from 'lodash/startCase';\nimport { faChevronCircleLeft, faChevronCircleRight, faSpinner, faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\n\nimport { translate } from '../../lib/Translator';\n@observer\nclass AppointmentsList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.chunk              = this.chunk.bind(this);\n        this.handleYear         = this.handleYear.bind(this);\n        this.handleMonth        = this.handleMonth.bind(this);\n        this.handleReload       = this.handleReload.bind(this);\n        this.getDatesInMonth    = this.getDatesInMonth.bind(this);\n        this.handleProfessional = this.handleProfessional.bind(this);\n\n        this.state = {\n            appointments: null,\n            professionals: null,\n            filterProf: 'null',\n        }\n    }\n\n    componentDidMount() {\n        const date = moment()\n        const datesInMonth = this.getDatesInMonth(date)\n        this.setState({\n            date: date,\n            datesInWeeks: this.chunk(datesInMonth, 7),\n            appointments: this.props.store.appointments.search({}, 'appointment-list-view', true),\n            professionals: this.props.store.professionals.search({}, 'professional-list-appointment-view', true)\n        })\n    }\n\n    handleProfessional( sender, value, name ) {\n        const searchFilter = value != 'null' ? { professional: value } : {}\n        this.setState({\n            filterProf: value,\n            appointments: this.props.store.appointments.search(searchFilter, 'appointment-list-view', true)\n        })\n    }\n\n    handleReload() {\n        this.setState({\n            appointments: this.props.store.appointments.search({}, 'appointment-list-view-reload', true),\n        })\n    }\n\n    handleMonth(sender, value, name) {\n        let newDate = name == 'next' ? moment(this.state.date).add(1, 'months') : moment(this.state.date).subtract(1, 'months')\n        const datesInMonth = this.getDatesInMonth(newDate);\n        this.setState({\n            date: newDate,\n            datesInWeeks: this.chunk(datesInMonth, 7)\n        })\n    }\n\n    handleYear(sender, value, name) {\n        let newDate = name == 'next' ? moment(this.state.date).add(1, 'years') : moment(this.state.date).subtract(1, 'years')\n        const datesInMonth = this.getDatesInMonth(newDate);\n        this.setState({\n            date: newDate,\n            datesInWeeks: this.chunk(datesInMonth, 7)\n        })\n    }\n\n    /** \n    * chunk => method that \"cuts\" the array into n arrays of size you want\n    */\n    chunk(arr, size) {\n        return arr.reduce((acc, _, i) => (i % size) ? acc : [...acc, arr.slice(i, i + size)], []);\n    }\n\n    getDatesInMonth(date) {\n        return Array.from({ length: date.daysInMonth() }, (x, i) => moment(date).startOf('month').add(i, 'days'))\n    }\n\n    getProfessionalList() {\n        const ret = [];\n        ret.push({\n            key: this.getText('- sin profesional -'),\n            value: 'null',\n        });\n        this.state.professionals.toArray().forEach(prof => {\n            ret.push({ key: prof.fullName, value: prof.id })\n        });\n        return ret;\n    }\n\n    getText(text) {\n        return translate(text, this.props.store.ui.language)\n    }\n\n    renderLoader() {\n\n        return (\n            <React.Fragment>\n                <Level className=\"pl-3 pr-3\">\n                    <LevelLeft style={{ paddingRight: '6px' }}>\n                        <Title>{ this.getText('Calendario de turnos') }</Title>\n                    </LevelLeft>\n                    <LevelRight>\n                        <Button disabled>{ this.getText('Cancelar turno de hoy') }</Button>\n                    </LevelRight>\n                </Level>\n                <hr />\n                <Columns className=\"pl-4 pr-3\">\n                    <Column isSize={3} className=\"pl-2 pr-2\">\n                        <Field label={ this.getText('¿Querés ver los turnos de un único profesional?') } labelNote={ this.getText('Selecciona un profesional')}>\n                            <Select\n                                value={'null'}\n                                placeholder={ this.getText('Profesionales') }\n                                borderless\n                                icon={faChevronDown}\n                                loading={!this.state.professionals || !this.state.professionals.isOk()}\n                                value={[{key: this.getText('- sin profesional -'),value: 'null',}]}/>\n                        </Field>\n                    </Column>\n                </Columns>\n                <Loader icon={faSpinner} label={ this.getText('Cargando los turnos..') } className=\"fullscreen\" />\n            </React.Fragment>)\n    }\n\n    render() {\n        const isAppointmentLoaded = this.state.appointments && this.state.appointments.isOk();\n        const isProfessionalsLoaded = this.state.professionals && this.state.professionals.isOk();\n        if (!isAppointmentLoaded || !isProfessionalsLoaded) return this.renderLoader();\n        return (\n            <React.Fragment>\n                <Level className=\"pl-3 pr-3\">\n                    <LevelLeft style={{ paddingRight: '6px' }}>\n                        <Title>{this.getText('Calendario de turnos')}</Title>\n                    </LevelLeft>\n                    <LevelRight>\n                        <Button disabled>{ this.getText('Cancelar turno de hoy') }</Button>\n                    </LevelRight>\n                </Level>\n                <hr />\n                <Columns className=\"pl-4 pr-3\">\n                    <Column isSize={3} className=\"pl-2 pr-2\">\n                        <Field label={ this.getText('¿Querés ver los turnos de un único profesional?') } labelNote={ this.getText('Selecciona un profesional')}>\n                            <Select\n                                value={this.state.filterProf}\n                                key={ this.state.professionals }\n                                onChange={ this.handleProfessional }  \n                                placeholder={ this.getText('Profesionales') }\n                                borderless\n                                icon={faChevronDown}\n                                loading={!this.state.professionals || !this.state.professionals.isOk()}\n                                options={this.state.professionals && this.state.professionals.isOk() && this.getProfessionalList()} />\n                        </Field>\n                    </Column>\n                </Columns>\n                <Columns className=\"is-gapless is-marginless\" isVCentered>\n                    <Column className=\"has-text-right\">\n                        <Button onClick={this.handleYear} name=\"prev\" kind=\"link\"><FontAwesomeIcon icon={faChevronCircleLeft} size=\"lg\" /></Button>\n                    </Column>\n                    <Column className=\"has-text-centered\" isSize={2}>\n                        <Text weight=\"medium\" size=\"xl\" color=\"primaryDark\">{startCase(this.state.date.format('YYYY'))}</Text>\n                    </Column>\n                    <Column className=\"has-text-left\">\n                        <Button onClick={this.handleYear} name=\"next\" kind=\"link\"><FontAwesomeIcon icon={faChevronCircleRight} size=\"lg\" /></Button>\n                    </Column>\n                </Columns>\n                <Columns className=\"pl-3\" isVCentered>\n                    <Column className=\"has-text-left\">\n                        <Button onClick={this.handleMonth} name=\"prev\" kind=\"outline\">{`${this.getText(startCase(moment(this.state.date).subtract(1, 'months').format('MMMM')))}`}</Button>\n                    </Column>\n                    <Column className=\"has-text-centered\" isSize={2}>\n                        <Text weight=\"medium\" size=\"xl\" color=\"primaryDark\">{this.getText(startCase(this.state.date.format('MMMM')))}</Text>\n                    </Column>\n                    <Column className=\"has-text-right pr-4\">\n                        <Button onClick={this.handleMonth} name=\"next\" kind=\"outline\">{`${this.getText(startCase(moment(this.state.date).add(1, 'months').format('MMMM')))}`}</Button>\n                    </Column>\n                </Columns>\n                <AppointmentCalendar onReload={this.handleReload} key={this.state.datesInWeeks} weeks={this.state.datesInWeeks} appointments={this.state.appointments.toArray()} />\n            </React.Fragment>)\n    }\n}\n\nexport default withStore(AppointmentsList);"]},"metadata":{},"sourceType":"module"}