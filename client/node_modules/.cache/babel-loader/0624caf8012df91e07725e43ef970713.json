{"ast":null,"code":"import _initializerDefineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _class2,\n    _descriptor,\n    _descriptor2,\n    _descriptor3,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Suggest/ProfessionalSuggest.jsx\";\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { TextInput, Panel, Dropdown, DropdownToggle, DropdownPanel, Text } from 'shipnow-mercurio';\nimport { observable } from 'mobx';\nimport { observer } from 'mobx-react';\n\nvar ProfessionalSuggest = observer(_class = (_class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfessionalSuggest, _Component);\n\n  function ProfessionalSuggest(props) {\n    var _this;\n\n    _classCallCheck(this, ProfessionalSuggest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfessionalSuggest).call(this, props));\n\n    _initializerDefineProperty(_this, \"professionals\", _descriptor, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"suggest\", _descriptor2, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _initializerDefineProperty(_this, \"value\", _descriptor3, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.state = {\n      showPanel: false\n    };\n    _this.professionals = props.professionals;\n    _this.suggest = props.professionals;\n    _this.value = props.value ? props.value.fullName : '';\n    debugger;\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProfessionalSuggest, [{\n    key: \"handleInput\",\n    value: function handleInput(sender, value, name) {\n      if (value == '- Ninguno -') {\n        this.props.onChange && this.props.onChange(null);\n      }\n\n      var filtered = value == '' || !value ? this.professionals : this.professionals.filter(function (professional) {\n        return professional.fullName.includes(value);\n      });\n      this.suggest = filtered;\n      this.value = value;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.professionals != this.props.professionals) {\n        this.professionals = this.props.professionals;\n        this.suggest = this.props.professionals;\n      }\n\n      if (prevProps.value != this.props.value) {\n        this.value = this.props.value;\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(professional) {\n      this.value = professional == 'null' ? '- Ninguno -' : professional.fullName;\n      this.setState({\n        showPanel: false\n      });\n      this.props.onChange && this.props.onChange(professional == 'null' ? null : professional);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var disabled = this.props.disabled;\n      return React.createElement(Dropdown, {\n        key: this.state.suggest || this.state.value,\n        className: \"is-fullwidth\",\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        className: \"is-fullwidth\",\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        disabled: disabled,\n        borderless: !this.state.showPanel,\n        placeholder: \"Profesional\",\n        className: \"is-fullwidth\",\n        icon: faChevronDown,\n        value: this.value,\n        onChange: this.handleInput,\n        onFocus: function onFocus() {\n          return _this2.setState({\n            showPanel: true\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            showPanel: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(DropdownPanel, {\n        key: this.state.suggest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"mb-1\",\n        size: \"md\",\n        onClick: function onClick() {\n          return _this2.handleSelect('null');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"- Ninguno -\"), this.suggest && this.suggest.map(function (professional, index) {\n        return index < 5 && React.createElement(Text, {\n          className: \"mb-1\",\n          size: \"md\",\n          onClick: function onClick() {\n            return _this2.handleSelect(professional);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, professional.fullName);\n      })));\n    }\n  }]);\n\n  return ProfessionalSuggest;\n}(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"professionals\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"suggest\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"value\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class;\n\nProfessionalSuggest.PropTypes = {\n  professionals: PropTypes.array,\n  disabled: PropTypes.bool,\n  value: PropTypes.object,\n  onChange: PropTypes.func\n};\nProfessionalSuggest.defaultProps = {\n  professionals: [],\n  disabled: false,\n  value: null,\n  onChange: null\n};\nexport default ProfessionalSuggest;","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Suggest/ProfessionalSuggest.jsx"],"names":["React","Component","ReactDOM","PropTypes","faChevronDown","TextInput","Panel","Dropdown","DropdownToggle","DropdownPanel","Text","observable","observer","ProfessionalSuggest","props","state","showPanel","professionals","suggest","value","fullName","handleInput","bind","sender","name","onChange","filtered","filter","professional","includes","prevProps","prevState","setState","disabled","handleSelect","map","index","array","bool","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  TextInput,\n  Panel,\n  Dropdown,\n  DropdownToggle,\n  DropdownPanel,\n  Text,\n} from 'shipnow-mercurio';\n\nimport { observable } from 'mobx';\n\nimport { observer } from 'mobx-react';\n\n@observer\nclass ProfessionalSuggest extends Component {\n  @observable professionals;\n  @observable suggest;\n  @observable value;\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPanel: false,\n    }\n\n    this.professionals = props.professionals;\n    this.suggest = props.professionals;\n    this.value = props.value ? props.value.fullName : '';\n    debugger\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput( sender, value, name ) {\n    if (value == '- Ninguno -') {\n      this.props.onChange && this.props.onChange(null);\n    }\n    const filtered = value == '' || !value ? this.professionals : this.professionals.filter( professional => professional.fullName.includes(value)) \n    this.suggest = filtered;\n    this.value = value;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.professionals != this.props.professionals) {\n      this.professionals = this.props.professionals;\n      this.suggest = this.props.professionals;\n    }\n    if (prevProps.value != this.props.value) {\n      this.value = this.props.value;\n    }\n  }\n\n  handleSelect( professional ) {\n    this.value = professional == 'null' ? '- Ninguno -' : professional.fullName;\n    this.setState({\n      showPanel: false,\n    })\n    this.props.onChange && this.props.onChange(professional == 'null' ? null : professional);\n  }\n\n  render() {\n    const { disabled } = this.props;\n    return(\n      <Dropdown key={ this.state.suggest || this.state.value } className=\"is-fullwidth\" disabled={ disabled }>\n        <DropdownToggle className=\"is-fullwidth\" disabled={ disabled }>\n          <TextInput\n            disabled={ disabled }\n            borderless={ !this.state.showPanel }\n            placeholder=\"Profesional\"\n            className=\"is-fullwidth\" \n            icon={ faChevronDown } \n            value={ this.value } \n            onChange={ this.handleInput } \n            onFocus={ () => (this.setState({showPanel: true}))} onBlur={ () => (this.setState({showPanel: false})) }/>\n        </DropdownToggle>\n          <DropdownPanel key={ this.state.suggest }>\n            <Text className=\"mb-1\" size=\"md\" onClick={ () => (this.handleSelect('null')) }>- Ninguno -</Text>\n            { this.suggest && this.suggest.map( (professional, index) => (\n              index < 5 && <Text className=\"mb-1\" size=\"md\" onClick={ () => (this.handleSelect(professional)) }>{ professional.fullName }</Text> )) }\n          </DropdownPanel>\n      </Dropdown> )\n  }\n\n\n}\n\nProfessionalSuggest.PropTypes = {\n  professionals: PropTypes.array,\n  disabled: PropTypes.bool,\n  value: PropTypes.object,\n  onChange: PropTypes.func,\n}\n\nProfessionalSuggest.defaultProps = {\n  professionals: [],\n  disabled: false,\n  value: null,\n  onChange: null,\n}\n\nexport default ProfessionalSuggest"]},"metadata":{},"sourceType":"module"}