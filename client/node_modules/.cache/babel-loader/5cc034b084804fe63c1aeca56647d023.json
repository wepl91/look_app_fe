{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Branches/BranchesForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleMap, Marker, withGoogleMap } from \"react-google-maps\";\nimport { observer } from 'mobx-react';\nimport { withStore } from '../../hocs';\nimport { Field, TextInput } from 'shipnow-mercurio';\n\nvar BranchesForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BranchesForm, _Component);\n\n  function BranchesForm(props) {\n    var _this;\n\n    _classCallCheck(this, BranchesForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BranchesForm).call(this, props));\n    _this.state = {\n      street_name: '',\n      street_number: '',\n      location: '',\n      lonlat: {\n        lat: null,\n        lon: null\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLanLot = _this.getLanLot.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BranchesForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var diffStreet = prevState.street_name != this.state.street_name;\n      var diffNumber = prevState.street_number != this.state.street_number;\n      var diffLocation = prevState.location != this.state.location;\n\n      if (diffLocation || diffNumber || diffStreet) {\n        this.getLanLot();\n      }\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"getLanLot\",\n    value: function getLanLot() {\n      var _this2 = this;\n\n      console.dir(this.state);\n\n      if (this.state.street_name == '' || this.state.location == '' || this.state.street_number == '') {\n        return;\n      }\n\n      var cookedLocation = \"\".concat(this.state.street_name, \" \").concat(this.state.street_number, \", \").concat(this.state.location);\n      var url = \"http://www.mapquestapi.com/geocoding/v1/address?key=1G0vEZOEtXkU5BW9MDLAGp22ATGiUzs8&location=\".concat(cookedLocation);\n      var request = {\n        'method': 'GET',\n        'headers': {}\n      };\n      fetch(url, request).then(function (response) {\n        return response.json().then(function (content) {\n          var point = {\n            lat: content.results[0].locations[0].displayLatLng.lat,\n            lon: content.results[0].locations[0].displayLatLng.lng\n          };\n\n          _this2.setState({\n            lonlat: point\n          });\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var branch = this.props.branch;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Nombre\",\n        labelNote: \"\\xBFCu\\xE1l es el nombre de la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"Localidad\",\n        labelNote: \"\\xBFEn qu\\xE9 localidad se ubica la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"location\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"Calle\",\n        labelNote: \"\\xBFSobre qu\\xE9 calle se encuentra la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"street_name\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"N\\xFAmero\",\n        labelNote: \"\\xBFA qu\\xE9 altura se encuentra la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"street_number\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(GoogleMap, {\n        defaultZoom: 8,\n        defaultCenter: {\n          lat: this.state.lonlat.lat,\n          lng: this.state.lonlat.lon\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: {\n          lat: this.state.lonlat.lat,\n          lng: this.state.lonlat.lon\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BranchesForm;\n}(Component)) || _class;\n\nBranchesForm.PropTypes = {\n  branch: PropTypes.object\n};\nBranchesForm.defaultProps = {\n  branch: null\n};\nexport default withGoogleMap(withStore(BranchesForm));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Branches/BranchesForm.jsx"],"names":["React","Component","PropTypes","GoogleMap","Marker","withGoogleMap","observer","withStore","Field","TextInput","BranchesForm","props","state","street_name","street_number","location","lonlat","lat","lon","handleChange","bind","getLanLot","prevProps","prevState","diffStreet","diffNumber","diffLocation","text","translate","store","ui","language","console","dir","cookedLocation","url","request","fetch","then","response","json","content","point","results","locations","displayLatLng","lng","setState","sender","value","name","valid","branch","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { GoogleMap, Marker, withGoogleMap } from \"react-google-maps\"\n\nimport { observer } from 'mobx-react';\n\nimport { withStore } from '../../hocs';\n\nimport {\n  Field,\n  TextInput,\n} from 'shipnow-mercurio';\n\n@observer\nclass BranchesForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      street_name: '',\n      street_number: '',\n      location: '',\n      lonlat: {\n        lat: null,\n        lon: null,\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    \n    this.getLanLot = this.getLanLot.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const diffStreet = prevState.street_name != this.state.street_name;\n    const diffNumber = prevState.street_number != this.state.street_number;\n    const diffLocation = prevState.location != this.state.location;\n    if (diffLocation || diffNumber || diffStreet) {\n      this.getLanLot();\n    }\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  getLanLot() {\n    console.dir(this.state)\n    if (this.state.street_name == '' || this.state.location == '' || this.state.street_number == '') {\n      return;\n    }\n\n    const cookedLocation = `${ this.state.street_name } ${ this.state.street_number }, ${ this.state.location }`;\n    const url = `http://www.mapquestapi.com/geocoding/v1/address?key=1G0vEZOEtXkU5BW9MDLAGp22ATGiUzs8&location=${ cookedLocation }`\n    let request = {\n      'method': 'GET',\n      'headers': {},\n    };\n\n    fetch(url, request).then(response => {\n      return response.json().then( content => {\n        const point = {\n          lat: content.results[0].locations[0].displayLatLng.lat,\n          lon: content.results[0].locations[0].displayLatLng.lng\n        }\n        this.setState({\n          lonlat: point,\n        });\n      });\n    });\n  }\n\n  handleChange( sender, value, name, valid ) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { branch } = this.props\n    return(\n      <React.Fragment>\n        <Field label=\"Nombre\" labelNote=\"¿Cuál es el nombre de la nueva sucursal?\">\n          <TextInput name=\"name\" onChange={ this.handleChange } />\n        </Field>\n        <Field label=\"Localidad\" labelNote=\"¿En qué localidad se ubica la nueva sucursal?\">\n          <TextInput name=\"location\" onChange={ this.handleChange } />\n        </Field>\n        <Field label=\"Calle\" labelNote=\"¿Sobre qué calle se encuentra la nueva sucursal?\">\n          <TextInput name=\"street_name\" onChange={ this.handleChange } />\n        </Field>\n        <Field label=\"Número\" labelNote=\"¿A qué altura se encuentra la nueva sucursal?\">\n          <TextInput name=\"street_number\" onChange={ this.handleChange } />\n        </Field>\n        <GoogleMap defaultZoom={8} defaultCenter={{ lat: this.state.lonlat.lat, lng: this.state.lonlat.lon }}>\n          <Marker position={{ lat: this.state.lonlat.lat, lng: this.state.lonlat.lon }} />\n        </GoogleMap>\n      </React.Fragment>)\n  }\n}\n\nBranchesForm.PropTypes = {\n  branch: PropTypes.object,\n}\n\nBranchesForm.defaultProps = {\n  branch: null,\n} \n\nexport default withGoogleMap(withStore(BranchesForm));"]},"metadata":{},"sourceType":"module"}