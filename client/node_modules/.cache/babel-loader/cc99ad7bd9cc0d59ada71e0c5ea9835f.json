{"ast":null,"code":"import _initializerDefineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport { observable, action, computed, toJS as _toJS } from 'mobx';\nimport moment from 'moment';\nvar DataWrapper = (_class =\n/*#__PURE__*/\nfunction () {\n  // _uriBase = '';\n  // _primaryKey = 'id';\n  // object | array\n  // empty | first-load | busy | ok | error\n  function DataWrapper(data, store) {\n    _classCallCheck(this, DataWrapper);\n\n    _initializerDefineProperty(this, \"attributes\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"items\", _descriptor2, this);\n\n    this._store = null;\n    this._error = null;\n    this._type = 'object';\n\n    _initializerDefineProperty(this, \"_lastUpdateAt\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"_status\", _descriptor4, this);\n\n    this._store = store;\n    this._status = 'empty';\n    this.set(data);\n  }\n  /**\n   * DataWrapper shallow serialization \n   *\n   */\n\n\n  _createClass(DataWrapper, [{\n    key: \"toJS\",\n    value: function toJS() {\n      return _toJS(this._type == 'object' ? this.attributes : this.items);\n    }\n    /**\n     * DataWrapper serialization for REST operations \n     *\n     */\n\n  }, {\n    key: \"toParams\",\n    value: function toParams() {\n      return this.toJS();\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._status == 'empty' || this._status == 'first-load';\n    }\n  }, {\n    key: \"isBusy\",\n    value: function isBusy() {\n      return this._status == 'busy' || this._status == 'first-load';\n    }\n  }, {\n    key: \"isOk\",\n    value: function isOk() {\n      return this._status == 'ok';\n    }\n  }, {\n    key: \"isError\",\n    value: function isError() {\n      return this._status == 'error';\n    }\n  }, {\n    key: \"get\",\n    value: function get(attribute) {\n      if (this.attributes.has(attribute)) {\n        return this.attributes.get(attribute);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"beginUpdate\",\n    value: function beginUpdate() {\n      this._status = this._status === 'empty' ? 'first-load' : 'busy';\n    }\n  }, {\n    key: \"endUpdate\",\n    value: function endUpdate(error) {\n      if (error) {\n        this._error = error;\n        this._status = 'error';\n      } else {\n        this._status = 'ok';\n        this.modelDidUpdate();\n      }\n\n      if (this._onUpdateCallback) {\n        this._onUpdateCallback(this, error);\n\n        this._onUpdateCallback = null;\n      }\n\n      this._lastUpdateAt = moment();\n    }\n  }, {\n    key: \"needsUpdate\",\n    value: function needsUpdate() {\n      if (this._status == 'busy') return false;\n      return this._status == 'empty' || moment().diff(this._lastUpdateAt, 'minutes') > this._store.updateThreshold; // this should be parametrized\n    }\n  }, {\n    key: \"transformData\",\n    value: function transformData(data) {\n      return data;\n    }\n  }, {\n    key: \"set\",\n    value: function set(data) {\n      var _this = this;\n\n      this._lastUpdateAt = moment();\n      this._type = Array.isArray(data) ? 'array' : 'object';\n\n      if (this._type == 'object') {\n        this.attributes.merge(this.transformData(data));\n        this.attributes.forEach(function (value, key) {\n          if (_this[key] === undefined) Object.defineProperty(_this, key, {\n            set: function set(v) {\n              return _this.attributes.set(key, v);\n            },\n            get: function get(v) {\n              return _this.get(key);\n            }\n          });\n        });\n        this.items.clear();\n      } else {\n        this.items.replace(this.transformData(data));\n        this.attributes.clear();\n      }\n    }\n  }, {\n    key: \"modelDidUpdate\",\n    value: function modelDidUpdate() {}\n  }, {\n    key: \"andThen\",\n    value: function andThen(_callback) {\n      if (this.isOk()) {\n        _callback && _callback(this);\n        return this;\n      }\n\n      this._onUpdateCallback = _callback;\n      return this;\n    }\n  }]);\n\n  return DataWrapper;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"attributes\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new Map();\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return new Array();\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"_lastUpdateAt\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"_status\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"beginUpdate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"beginUpdate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"endUpdate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"endUpdate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"set\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"set\"), _class.prototype)), _class);\nexport { DataWrapper as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/lib/DataWrapper.js"],"names":["observable","action","computed","toJS","moment","DataWrapper","data","store","_store","_error","_type","_status","set","attributes","items","attribute","has","get","error","modelDidUpdate","_onUpdateCallback","_lastUpdateAt","diff","updateThreshold","Array","isArray","merge","transformData","forEach","value","key","undefined","Object","defineProperty","v","clear","replace","_callback","isOk","Map"],"mappings":"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","sourcesContent":["import {\n  observable,\n  action,\n  computed,\n  toJS\n} from 'mobx'\n\nimport moment from 'moment';\n\nexport default class DataWrapper {\n\n  @observable attributes = new Map();\n  @observable items = new Array();\n\n  // _uriBase = '';\n  // _primaryKey = 'id';\n  _store = null;\n  _error = null;\n  _onUpdateCallback;\n\n  _type = 'object'; // object | array\n\n  @observable _lastUpdateAt;\n  @observable _status; // empty | first-load | busy | ok | error\n\n  constructor ( data, store ) {\n    this._store = store;\n    this._status = 'empty';\n\n    this.set(data);\n  }\n\n  /**\n   * DataWrapper shallow serialization \n   *\n   */\n  toJS () {\n    return toJS(this._type == 'object' ? this.attributes : this.items);\n  }\n\n  /**\n   * DataWrapper serialization for REST operations \n   *\n   */\n  toParams () {\n    return this.toJS();\n  }\n\n\n  isEmpty() {\n    return this._status == 'empty' || this._status == 'first-load';\n  }\n\n  isBusy() {\n    return this._status == 'busy' || this._status == 'first-load';\n  }\n\n  isOk() {\n    return this._status == 'ok';\n  }\n\n  isError() {\n    return this._status == 'error';\n  }\n\n  get (attribute) {\n    if (this.attributes.has(attribute)) {\n      return this.attributes.get(attribute);\n    }\n    \n    return null;\n  }  \n\n  @action\n  beginUpdate() {\n    this._status = this._status === 'empty' ? 'first-load' : 'busy';\n  }\n\n\n  @action\n  endUpdate(error) {\n    if ( error ) {\n      this._error  = error;\n      this._status = 'error'; \n    }\n    else {\n      this._status = 'ok';\n      this.modelDidUpdate();      \n\n    }\n\n    if ( this._onUpdateCallback ) {\n      this._onUpdateCallback(this, error);\n      this._onUpdateCallback = null;\n    }   \n\n    this._lastUpdateAt = moment();\n  }\n\n\n  needsUpdate() {\n    if ( this._status == 'busy' ) return false;\n\n    return this._status == 'empty' || moment().diff( this._lastUpdateAt, 'minutes' ) > this._store.updateThreshold; // this should be parametrized\n  }  \n\n\n  transformData(data) {\n    return data;\n  }\n\n\n  @action\n  set (data) {\n\n    this._lastUpdateAt = moment();\n\n    this._type = Array.isArray(data) ? 'array' : 'object';\n    \n    if ( this._type == 'object' ) {\n\n      this.attributes.merge(this.transformData(data));\n\n      this.attributes.forEach( (value, key) => { if( this[key] === undefined ) Object.defineProperty(this, key, { \n          set: (v) => this.attributes.set(key, v),\n          get: (v) => this.get(key),\n        })} );\n\n\n      this.items.clear();\n\n    }\n    else {\n      this.items.replace(this.transformData(data));\n      this.attributes.clear();\n    }\n\n  }\n\n\n  modelDidUpdate() {}\n\n\n  andThen( _callback ) {\n\n    if ( this.isOk() ) {\n      _callback && _callback(this);\n      return this;\n    }\n\n    this._onUpdateCallback = _callback;\n\n    return this;\n  }  \n\n\n}\n"]},"metadata":{},"sourceType":"module"}