{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/WorkingHoursSelector.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Columns, Column } from 'bloomer';\nimport { Checkbox } from '../../components/Checkbox';\nimport { Select, Text } from 'shipnow-mercurio';\nimport moment from 'moment';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nvar WorkingHoursSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkingHoursSelector, _Component);\n\n  function WorkingHoursSelector(props) {\n    var _this;\n\n    _classCallCheck(this, WorkingHoursSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkingHoursSelector).call(this, props));\n    _this.state = {\n      days: {},\n      disabled: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WorkingHoursSelector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.defaultProfessional) {\n        this.setState({\n          days: this.props.defaultProfessional.rawWorkingDays\n        });\n      }\n    } //1 hour intervals\n\n  }, {\n    key: \"hoursBetweenDates\",\n    value: function hoursBetweenDates(startDate, endDate) {\n      var hours = [];\n      var currDate = moment(startDate).startOf('minute').subtract(60, 'minutes');\n      var lastDate = moment(endDate).startOf('minute').add(60, 'minutes');\n\n      while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n        hours.push(currDate.clone().format('HH:mm'));\n      }\n\n      return hours;\n    }\n  }, {\n    key: \"handleDays\",\n    value: function handleDays(received) {\n      var dictClone = Object.assign(this.state.days);\n\n      if (received in dictClone) {\n        delete dictClone[received];\n      } else {\n        dictClone[received] = {};\n      }\n\n      this.setState({\n        days: dictClone\n      });\n      this.props.onChange(this.state.days);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      var dictClone = Object.assign(this.state.days);\n      var day = name.substring(0, name.length - 3);\n      name = name.slice(-3); //sta o fin\n\n      if (name == 'sta') {\n        dictClone[day]['sta'] = value;\n      } else if (name == 'fin') {\n        dictClone[day]['fin'] = value;\n      }\n\n      this.setState({\n        days: dictClone\n      });\n      this.props.onChange(this.state.days);\n    }\n  }, {\n    key: \"isDaySelected\",\n    value: function isDaySelected(day) {\n      return day in this.state.days;\n    }\n  }, {\n    key: \"getBeginHour\",\n    value: function getBeginHour(day) {\n      return this.state.days[day]['sta'];\n    }\n  }, {\n    key: \"getEndHour\",\n    value: function getEndHour(day) {\n      return this.state.days[day]['fin'];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var className = this.props.className;\n      var hourList = this.hoursBetweenDates(this.props.startingDate, this.props.finishingDate);\n      var daysList = this.props.days;\n      var translatedDays = {\n        'MONDAY': 'Lunes',\n        'TUESDAY': 'Martes',\n        'WEDNESDAY': 'Miércoles',\n        'THURSDAY': 'Jueves',\n        'FRIDAY': 'Viernes',\n        'SATURDAY': 'Sábado'\n      }; //style={{ maxHeight: '5vh', width: '300px' }}\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, daysList.map(function (day) {\n        return React.createElement(Columns, {\n          isGapless: true,\n          isMarginless: true,\n          isVCentered: true,\n          isCentered: true,\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          className: 'pt-2',\n          name: day,\n          onCheck: function onCheck() {\n            return _this2.handleDays(day);\n          },\n          checked: _this2.props.defaultProfessional && day in _this2.props.defaultProfessional.rawWorkingDays,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, translatedDays[day])), React.createElement(Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, _this2.isDaySelected(day) && React.createElement(Select, {\n          placeholder: \"Entrada\",\n          borderless: true,\n          icon: faChevronDown,\n          className: 'mt-2',\n          value: _this2.getBeginHour(day),\n          name: \"\".concat(day, \"sta\"),\n          onChange: _this2.handleChange,\n          options: hourList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })), React.createElement(Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, _this2.isDaySelected(day) && React.createElement(Select, {\n          placeholder: \"Salida\",\n          borderless: true,\n          icon: faChevronDown,\n          className: 'mt-2',\n          value: _this2.getEndHour(day),\n          name: \"\".concat(day, \"fin\"),\n          onChange: _this2.handleChange,\n          options: hourList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        })));\n      }));\n    }\n  }]);\n\n  return WorkingHoursSelector;\n}(Component);\n\nWorkingHoursSelector.PropTypes = {\n  className: PropTypes.string,\n  startingDate: PropTypes.object,\n  finishingDate: PropTypes.object,\n  defaultProfessional: PropTypes.object,\n  onChange: PropTypes.func,\n  validate: PropTypes.func\n};\nWorkingHoursSelector.defaultProps = {\n  className: PropTypes.string,\n  startingDate: null,\n  finishingDate: null,\n  defaultProfessional: null,\n  onChange: null,\n  validate: null\n};\nexport default WorkingHoursSelector;","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/WorkingHoursSelector.jsx"],"names":["React","Component","PropTypes","Columns","Column","Checkbox","Select","Text","moment","faChevronDown","WorkingHoursSelector","props","state","days","disabled","handleChange","bind","defaultProfessional","setState","rawWorkingDays","startDate","endDate","hours","currDate","startOf","subtract","lastDate","add","diff","push","clone","format","received","dictClone","Object","assign","onChange","sender","value","name","valid","day","substring","length","slice","className","hourList","hoursBetweenDates","startingDate","finishingDate","daysList","translatedDays","map","handleDays","isDaySelected","getBeginHour","getEndHour","string","object","func","validate","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Columns, Column\n} from 'bloomer';\n\nimport { Checkbox } from '../../components/Checkbox'\n\nimport {\n  Select,\n  Text\n} from 'shipnow-mercurio';\n\nimport moment from 'moment';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nclass WorkingHoursSelector extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      days: {},\n      disabled: true\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.defaultProfessional) {\n      this.setState({\n        days: this.props.defaultProfessional.rawWorkingDays\n      })\n    }\n  }\n\n  //1 hour intervals\n  hoursBetweenDates(startDate, endDate) {\n    let hours = [];\n    let currDate = moment(startDate).startOf('minute').subtract(60, 'minutes');\n    let lastDate = moment(endDate).startOf('minute').add(60, 'minutes');\n\n    while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n      hours.push(currDate.clone().format('HH:mm'));\n    }\n\n    return hours;\n  }\n\n  handleDays(received) {\n    let dictClone = Object.assign(this.state.days)\n    if (received in dictClone) {\n      delete dictClone[received]\n    } else {\n      dictClone[received] = {}\n    }\n    this.setState({\n      days: dictClone\n    });\n    this.props.onChange(this.state.days);\n  }\n\n  handleChange(sender, value, name, valid) {\n    let dictClone = Object.assign(this.state.days)\n    let day = name.substring(0, name.length -3)\n    name = name.slice(-3) //sta o fin\n\n    if (name == 'sta') {\n      dictClone[day]['sta'] = value \n    }\n    else if (name == 'fin') {\n      dictClone[day]['fin'] = value \n    }\n    this.setState({\n      days: dictClone\n    });\n    this.props.onChange(this.state.days);\n  }\n\n  isDaySelected(day){\n    return (day in this.state.days)\n  }\n\n  getBeginHour( day ){\n    return this.state.days[day]['sta']\n  }\n\n  getEndHour( day ){\n    return this.state.days[day]['fin']\n  }\n\n  render() {\n    const { className } = this.props;\n    let hourList = this.hoursBetweenDates(this.props.startingDate, this.props.finishingDate)\n    let daysList = this.props.days\n    const translatedDays = {\n      'MONDAY': 'Lunes',\n      'TUESDAY': 'Martes',\n      'WEDNESDAY': 'Miércoles',\n      'THURSDAY': 'Jueves',\n      'FRIDAY': 'Viernes',\n      'SATURDAY': 'Sábado',\n    }\n    //style={{ maxHeight: '5vh', width: '300px' }}\n    return (\n      <React.Fragment>\n      {daysList.map(day => (\n        <Columns isGapless isMarginless isVCentered isCentered className={ className }>\n          <Column>\n            <Checkbox className={'pt-2'} name={ day } onCheck={() => this.handleDays(day)} checked={this.props.defaultProfessional && day in this.props.defaultProfessional.rawWorkingDays} >{translatedDays[day]}</Checkbox>\n          </Column>\n          <Column>\n            {this.isDaySelected(day) && <Select placeholder=\"Entrada\"\n              borderless icon={faChevronDown} className={'mt-2'}\n              value={ this.getBeginHour(day) } \n              name={`${ day }sta`} onChange={this.handleChange} options={hourList} />}\n          </Column>\n          <Column>\n            {this.isDaySelected(day) && <Select placeholder=\"Salida\"\n              borderless icon={faChevronDown} className={'mt-2'}\n              value={ this.getEndHour(day) }\n              name={`${ day }fin`} onChange={this.handleChange} options={hourList} />}\n           </Column>\n        </Columns>\n      ))}\n      </React.Fragment>)\n  }\n}\n\nWorkingHoursSelector.PropTypes = {\n  className: PropTypes.string,\n  startingDate: PropTypes.object,\n  finishingDate: PropTypes.object,\n  defaultProfessional: PropTypes.object,\n  onChange: PropTypes.func,\n  validate: PropTypes.func\n}\n\nWorkingHoursSelector.defaultProps = {\n  className: PropTypes.string,\n  startingDate: null,\n  finishingDate: null,\n  defaultProfessional: null,\n  onChange: null,\n  validate: null\n}\n\nexport default WorkingHoursSelector;"]},"metadata":{},"sourceType":"module"}