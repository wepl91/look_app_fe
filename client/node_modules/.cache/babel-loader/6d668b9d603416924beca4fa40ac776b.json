{"ast":null,"code":"import _initializerDefineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3;\n\nimport { action, observable, computed } from 'mobx';\nimport { RESTClient, LocalStorageClient } from '../lib';\nimport { UIStore, UsersStore, RolesStore, ServicesStore, ProfessionalsStore, AppointmentsStore, ClientsStore, BranchesStore, ConfigsStore } from './';\nvar AppStore = (_class =\n/*#__PURE__*/\nfunction () {\n  function AppStore() {\n    var _this = this;\n\n    _classCallCheck(this, AppStore);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loggedInUser\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"serviceErrors\", _descriptor3, this);\n\n    this.api_token_key = \"la_\".concat(\"http://localhost:8080\", \"_token\");\n    this.logged_user_key = \"la_\".concat(\"http://localhost:8080\", \"_user\");\n    this.settings = {\n      refreshRate: 5 // in minutes\n\n    };\n    var storedToken = localStorage.getItem(this.api_token_key);\n    var storedUser = localStorage.getItem(this.logged_user_key); //Set by default when app is up in spanish\n    // create adapters\n\n    this.APIClient = new RESTClient(\"http://localhost:8080\", storedToken);\n    this.localStorageClient = new LocalStorageClient('la'); // initialize stores\n\n    this.stores = new Map(); // Domain stores\n\n    this.stores.set('users', new UsersStore(this.APIClient, this));\n    this.stores.set('roles', new RolesStore(this.APIClient, this));\n    this.stores.set('clients', new ClientsStore(this.APIClient, this));\n    this.stores.set('services', new ServicesStore(this.APIClient, this));\n    this.stores.set('branches', new BranchesStore(this.APIClient, this));\n    this.stores.set('configs', new ConfigsStore(this.APIClient, this));\n    this.stores.set('professionals', new ProfessionalsStore(this.APIClient, this));\n    this.stores.set('appointments', new AppointmentsStore(this.APIClient, this)); // UI stores\n\n    this.stores.set('ui', new UIStore(this.localStorageClient, this)); // create easy stores getters\n\n    this.stores.forEach(function (store, key) {\n      Object.defineProperty(_this, key, {\n        get: function get(v) {\n          return store;\n        }\n      });\n      store.updateThreshold = _this.settings.refreshRate;\n    }); // is already a session open?\n    //if ( storedToken && storedUser ) {\n\n    if (storedUser) {\n      this.isLoading = false;\n      this.users.get(storedUser).andThen(function (res, err) {\n        if (err) {\n          // something went terrible wrong.... \n          _this.signOut();\n\n          _this.isLoading = false;\n        } else {\n          _this.setCurrentUser(res);\n\n          _this.isLoading = false;\n        }\n      });\n    } else {\n      this.isLoading = false;\n    }\n  }\n\n  _createClass(AppStore, [{\n    key: \"signOut\",\n    value: function signOut() {\n      localStorage.removeItem(this.api_token_key);\n      localStorage.removeItem(this.logged_user_key);\n      this.APIClient.token = null;\n      this.loggedInUser = null;\n      this.stores.forEach(function (store, key) {\n        store.clear();\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(user, password) {\n      var _this2 = this;\n\n      return this.authenticate(user, password).then(function (res) {\n        _this2.saveInfo(res);\n      });\n    }\n  }, {\n    key: \"authenticate\",\n    value: function authenticate(user, password) {\n      return this.APIClient.authenticate(user, password);\n    }\n  }, {\n    key: \"saveInfo\",\n    value: function saveInfo(data) {\n      this.setCurrentUser(this.users.store(data)); // save the info in storage\n\n      localStorage.setItem(this.api_token_key, this.APIClient.token);\n      localStorage.setItem(this.logged_user_key, this.loggedInUser.id);\n      localStorage.setItem('language', 'Espa√±ol');\n    }\n  }, {\n    key: \"recoverPassword\",\n    value: function recoverPassword(email) {\n      return this.APIClient.password_recovery(email);\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(token, email) {\n      return this.APIClient.update_password(token, email);\n    }\n  }, {\n    key: \"setCurrentUser\",\n    value: function setCurrentUser(user) {\n      this.isLoading = false;\n      this.loggedInUser = user;\n    }\n  }, {\n    key: \"getCurrentTheme\",\n    value: function getCurrentTheme() {\n      var primaryColors = {\n        // brand colors\n        base: '#e30000',\n        dark: '#b51b1b',\n        darker: '#830d0d',\n        darkest: '#621818',\n        black: '#520000',\n        light: '#dd8989',\n        lighter: '#e5c4c4',\n        lightest: '#f0e2e2',\n        white: '#faf2f2'\n      };\n      var neutralColors = {\n        black: '#2E3A41',\n        gray0: '#4B555B',\n        gray1: '#666F74',\n        gray2: '#82898D',\n        gray3: '#9DA3A7',\n        gray4: '#B8BDBF',\n        gray5: '#D4D6D8',\n        gray6: '#E7E8EA',\n        gray7: '#F0F1F2',\n        gray8: '#F7F9F9',\n        gray9: '#FDFEFF',\n        white: '#FFFFFF'\n      };\n      var paletteColors = {\n        blue: '#209CEE',\n        blueLight: '#BBE1F9',\n        blueDark: '#2479B0',\n        green: '#23D160',\n        greenLight: '#BCF1CF',\n        greenDark: '#269B54',\n        yellow: '#FFDC00',\n        yellowLight: '#FFF4B2',\n        yellowDark: '#B4A217',\n        orange: '#FF9F1C',\n        orangeLight: '#FFE2BA',\n        orangeDark: '#B47B29',\n        red: '#FF3860',\n        redLight: '#FFC3CF',\n        redDark: '#B43854',\n        purple: '#B053E0',\n        purpleLight: '#E7CBF5',\n        purpleDark: '#814AA7',\n        blackDark: neutralColors.gray0,\n        black: neutralColors.gray1,\n        blackLight: neutralColors.gray2,\n        grayDark: neutralColors.gray3,\n        gray: neutralColors.gray4,\n        grayLight: neutralColors.gray5,\n        whiteDark: neutralColors.gray6,\n        white: neutralColors.gray7,\n        whiteLight: neutralColors.gray8\n      };\n      var actionColors = {\n        primary: primaryColors.dark,\n        secondary: primaryColors.light,\n        confirm: paletteColors.green,\n        warning: paletteColors.orange,\n        remove: paletteColors.red,\n        internal: paletteColors.purple,\n        primaryLight: primaryColors.light,\n        secondaryLight: primaryColors.lightest,\n        confirmLight: paletteColors.greenLight,\n        warningLight: paletteColors.orangeLight,\n        removeLight: paletteColors.redLight,\n        internalLight: paletteColors.purpleLight,\n        primaryDark: primaryColors.darkest,\n        secondaryDark: primaryColors.darker,\n        confirmDark: paletteColors.greenDark,\n        warningDark: paletteColors.orangeDark,\n        removeDark: paletteColors.redDark,\n        internalDark: paletteColors.purpleDark\n      };\n      var messageColors = {\n        information: paletteColors.blue,\n        success: paletteColors.green,\n        warning: paletteColors.orange,\n        error: paletteColors.red,\n        attention: paletteColors.purple,\n        informationLight: paletteColors.blueLight,\n        successLight: paletteColors.greenLight,\n        warningLight: paletteColors.orangeLight,\n        errorLight: paletteColors.redLight,\n        attentionLight: paletteColors.purpleLight,\n        informationDark: paletteColors.blueDark,\n        successDark: paletteColors.greenDark,\n        warningDark: paletteColors.orangeDark,\n        errorDark: paletteColors.redDark,\n        attentionDark: paletteColors.purpleDark\n      };\n      var statusColors = {\n        inProgress: paletteColors.blue,\n        done: paletteColors.green,\n        toDo: paletteColors.purple,\n        failed: paletteColors.red,\n        new: paletteColors.orange,\n        noStatus: neutralColors.gray5,\n        inProgressLight: paletteColors.blueLight,\n        doneLight: paletteColors.greenLight,\n        toDoLight: paletteColors.purpleLight,\n        failedLight: paletteColors.redLight,\n        newLight: paletteColors.orangeLight,\n        noStatusLight: neutralColors.gray7,\n        inProgressDark: paletteColors.blueDark,\n        doneDark: paletteColors.greenDark,\n        toDoDark: paletteColors.purpleDark,\n        failedDark: paletteColors.redDark,\n        newDark: paletteColors.orangeDark,\n        noStatusDark: neutralColors.gray3\n      };\n      var availabilityColors = {\n        unavailable: primaryColors.lighter,\n        available: paletteColors.green,\n        busy: paletteColors.red,\n        unavailableLight: primaryColors.lightest,\n        availableLight: paletteColors.greenLight,\n        busyLight: paletteColors.redLight,\n        unavailableDark: primaryColors.dark,\n        availableDark: paletteColors.greenDark,\n        busyDark: paletteColors.redDark\n      };\n      var priorityColors = {\n        trivial: primaryColors.lighter,\n        minor: paletteColors.green,\n        medium: paletteColors.orange,\n        critical: paletteColors.red,\n        trivialLight: primaryColors.lightest,\n        minorLight: paletteColors.greenLight,\n        mediumLight: paletteColors.orangeLight,\n        criticalLight: paletteColors.redLight,\n        trivialDark: primaryColors.dark,\n        minorDark: paletteColors.greenDark,\n        mediumDark: paletteColors.orangeDark,\n        criticalDark: paletteColors.redDark\n      };\n      var uiColors = {\n        text: neutralColors.black,\n        lightText: neutralColors.gray4,\n        background: neutralColors.gray8,\n        borders: neutralColors.gray6\n      };\n      var defaultIcons = {\n        'message': {\n          'information': 'info-circle',\n          'success': 'check-circle',\n          'warning': 'exclamation-triangle',\n          'error': 'times-circle',\n          'attention': 'exclamation-circle'\n        },\n        'ui': {\n          'help': 'question'\n        }\n      }; // build theme\n\n      return {\n        colors: {\n          primary: primaryColors,\n          palette: paletteColors,\n          neutral: neutralColors,\n          action: actionColors,\n          message: messageColors,\n          status: statusColors,\n          availability: availabilityColors,\n          priority: priorityColors,\n          ui: uiColors,\n          all: Object.assign({}, paletteColors, actionColors, messageColors, statusColors, availabilityColors, priorityColors, uiColors)\n        },\n        icons: defaultIcons\n      };\n    }\n  }, {\n    key: \"isLoggedIn\",\n    get: function get() {\n      var loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n\n      return this.APIClient.token != null && loggedInUser != null;\n    }\n  }, {\n    key: \"isLoggingIn\",\n    get: function get() {\n      var loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n\n      return this.APIClient.token != null && loggedInUser == null;\n    }\n  }, {\n    key: \"loggedInUserKey\",\n    get: function get() {\n      if (this.isLoggedIn) {\n        return this.loggedInUser.id;\n      }\n\n      return null;\n    }\n  }]);\n\n  return AppStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loggedInUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"serviceErrors\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"signOut\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"signOut\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"signIn\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"signIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"authenticate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"authenticate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"saveInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"saveInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"recoverPassword\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"recoverPassword\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"resetPassword\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"resetPassword\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setCurrentUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCurrentUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoggedIn\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoggedIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoggingIn\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoggingIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"loggedInUserKey\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"loggedInUserKey\"), _class.prototype)), _class);\nexport { AppStore as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/stores/AppStore.js"],"names":["action","observable","computed","RESTClient","LocalStorageClient","UIStore","UsersStore","RolesStore","ServicesStore","ProfessionalsStore","AppointmentsStore","ClientsStore","BranchesStore","ConfigsStore","AppStore","api_token_key","logged_user_key","settings","refreshRate","storedToken","localStorage","getItem","storedUser","APIClient","localStorageClient","stores","Map","set","forEach","store","key","Object","defineProperty","get","v","updateThreshold","isLoading","users","andThen","res","err","signOut","setCurrentUser","removeItem","token","loggedInUser","clear","user","password","authenticate","then","saveInfo","data","setItem","id","email","password_recovery","update_password","primaryColors","base","dark","darker","darkest","black","light","lighter","lightest","white","neutralColors","gray0","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","paletteColors","blue","blueLight","blueDark","green","greenLight","greenDark","yellow","yellowLight","yellowDark","orange","orangeLight","orangeDark","red","redLight","redDark","purple","purpleLight","purpleDark","blackDark","blackLight","grayDark","gray","grayLight","whiteDark","whiteLight","actionColors","primary","secondary","confirm","warning","remove","internal","primaryLight","secondaryLight","confirmLight","warningLight","removeLight","internalLight","primaryDark","secondaryDark","confirmDark","warningDark","removeDark","internalDark","messageColors","information","success","error","attention","informationLight","successLight","errorLight","attentionLight","informationDark","successDark","errorDark","attentionDark","statusColors","inProgress","done","toDo","failed","new","noStatus","inProgressLight","doneLight","toDoLight","failedLight","newLight","noStatusLight","inProgressDark","doneDark","toDoDark","failedDark","newDark","noStatusDark","availabilityColors","unavailable","available","busy","unavailableLight","availableLight","busyLight","unavailableDark","availableDark","busyDark","priorityColors","trivial","minor","medium","critical","trivialLight","minorLight","mediumLight","criticalLight","trivialDark","minorDark","mediumDark","criticalDark","uiColors","text","lightText","background","borders","defaultIcons","colors","palette","neutral","message","status","availability","priority","ui","all","assign","icons","isLoggedIn"],"mappings":"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","sourcesContent":["import { action, observable, computed } from 'mobx';\nimport { RESTClient, LocalStorageClient } from '../lib';\n\nimport { \n  UIStore, \n  UsersStore,\n  RolesStore,\n  ServicesStore,\n  ProfessionalsStore,\n  AppointmentsStore,\n  ClientsStore,\n  BranchesStore,\n  ConfigsStore\n} from './';\n\nexport default class AppStore {\n  @observable isLoading = true;\n  @observable loggedInUser = null;\n  @observable serviceErrors = []\n\n  api_token_key   = `la_${\"http://localhost:8080\"}_token`;\n  logged_user_key = `la_${\"http://localhost:8080\"}_user`;\n  settings = {\n    refreshRate: 5, // in minutes\n  };\n\n\n  constructor() {\n\n    const storedToken = localStorage.getItem(this.api_token_key);\n    const storedUser  = localStorage.getItem(this.logged_user_key);\n\n    //Set by default when app is up in spanish\n\n    \n    // create adapters\n    this.APIClient = new RESTClient(\"http://localhost:8080\", storedToken);\n                                                                                        \n    this.localStorageClient = new LocalStorageClient('la');\n\n    // initialize stores\n    this.stores = new Map();\n\n    // Domain stores\n    this.stores.set('users',         new UsersStore(this.APIClient, this));\n    this.stores.set('roles',         new RolesStore(this.APIClient, this));\n    this.stores.set('clients',       new ClientsStore(this.APIClient, this));\n    this.stores.set('services',      new ServicesStore(this.APIClient, this));\n    this.stores.set('branches',      new BranchesStore(this.APIClient, this));\n    this.stores.set('configs',       new ConfigsStore(this.APIClient, this));\n    this.stores.set('professionals', new ProfessionalsStore(this.APIClient, this));\n    this.stores.set('appointments',  new AppointmentsStore(this.APIClient, this));\n   \n    // UI stores\n    this.stores.set('ui', new UIStore(this.localStorageClient, this));\n\n    // create easy stores getters\n    this.stores.forEach( (store, key) => { \n      Object.defineProperty(this, key, { \n        get: (v) => store,\n        \n      });\n\n      store.updateThreshold = this.settings.refreshRate;\n    });\n\n\n    // is already a session open?\n    //if ( storedToken && storedUser ) {\n      if ( storedUser ) {\n      this.isLoading = false;\n      this.users.get(storedUser).andThen( ( res, err ) => {\n        if (err) {\n          // something went terrible wrong.... \n          this.signOut();\n          this.isLoading = false;\n        }\n        else {\n          this.setCurrentUser(res);\n          this.isLoading = false;\n        }\n\n      });\n\n    }\n    else {\n      this.isLoading = false;\n    }\n\n  }\n\n  @action\n  signOut() {\n    localStorage.removeItem(this.api_token_key);\n    localStorage.removeItem(this.logged_user_key);\n\n    this.APIClient.token = null;\n    this.loggedInUser = null;\n    this.stores.forEach( (store, key) => { store.clear() } );\n  }\n\n  @action\n  signIn( user, password ) {\n    return this.authenticate(user, password).then( res => {\n      this.saveInfo(res)\n    });\n  }\n\n  @action\n  authenticate( user, password ) {\n    return this.APIClient.authenticate(user, password)\n  }\n\n  @action\n  saveInfo( data ) {\n    this.setCurrentUser(this.users.store(data));\n\n    // save the info in storage\n    localStorage.setItem(this.api_token_key, this.APIClient.token);\n    localStorage.setItem(this.logged_user_key, this.loggedInUser.id);\n    localStorage.setItem('language', 'Espa√±ol');\n  }\n\n  @action\n  recoverPassword( email ) {\n    return this.APIClient.password_recovery(email)\n  }\n\n  @action resetPassword( token, email ) {\n    return this.APIClient.update_password(token, email);\n  }\n\n  @action\n  setCurrentUser( user ) {\n    this.isLoading = false;\n    this.loggedInUser = user;\n  }\n\n  @computed\n  get isLoggedIn() {\n    const loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n    return this.APIClient.token != null && loggedInUser != null;\n  }\n\n  @computed\n  get isLoggingIn() {\n    const loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n    return this.APIClient.token != null && loggedInUser == null;\n  }\n\n  @computed\n  get loggedInUserKey() {\n    if ( this.isLoggedIn ) {\n      return this.loggedInUser.id;\n    }\n\n    return null;\n  }\n  \n  getCurrentTheme() {\n    const primaryColors = { // brand colors\n      base             : '#e30000',\n      dark             : '#b51b1b',\n      darker           : '#830d0d',\n      darkest          : '#621818',\n      black            : '#520000',\n      light            : '#dd8989',\n      lighter          : '#e5c4c4',\n      lightest         : '#f0e2e2',\n      white            : '#faf2f2',\n    };\n    \n    const neutralColors = {\n      black            : '#2E3A41',\n      gray0            : '#4B555B',\n      gray1            : '#666F74',\n      gray2            : '#82898D',\n      gray3            : '#9DA3A7',\n      gray4            : '#B8BDBF',\n      gray5            : '#D4D6D8',\n      gray6            : '#E7E8EA',\n      gray7            : '#F0F1F2',\n      gray8            : '#F7F9F9',\n      gray9            : '#FDFEFF',\n      white            : '#FFFFFF',\n    };\n    \n    const paletteColors = {\n      blue             : '#209CEE',\n      blueLight        : '#BBE1F9',\n      blueDark         : '#2479B0',\n      green            : '#23D160',\n      greenLight       : '#BCF1CF',\n      greenDark        : '#269B54',\n      yellow           : '#FFDC00',\n      yellowLight      : '#FFF4B2',\n      yellowDark       : '#B4A217',\n      orange           : '#FF9F1C',\n      orangeLight      : '#FFE2BA',\n      orangeDark       : '#B47B29',\n      red              : '#FF3860',\n      redLight         : '#FFC3CF',\n      redDark          : '#B43854',\n      purple           : '#B053E0',\n      purpleLight      : '#E7CBF5',\n      purpleDark       : '#814AA7',\n    \n      blackDark        : neutralColors.gray0,\n      black            : neutralColors.gray1,\n      blackLight       : neutralColors.gray2,\n    \n      grayDark         : neutralColors.gray3,\n      gray             : neutralColors.gray4,\n      grayLight        : neutralColors.gray5,\n    \n      whiteDark        : neutralColors.gray6,\n      white            : neutralColors.gray7,\n      whiteLight       : neutralColors.gray8,\n    };\n    \n    const actionColors = {\n      primary          : primaryColors.dark,\n      secondary        : primaryColors.light,\n      confirm          : paletteColors.green,\n      warning          : paletteColors.orange,\n      remove           : paletteColors.red,\n      internal         : paletteColors.purple,\n    \n      primaryLight     : primaryColors.light,\n      secondaryLight   : primaryColors.lightest,\n      confirmLight     : paletteColors.greenLight,\n      warningLight     : paletteColors.orangeLight,\n      removeLight      : paletteColors.redLight,\n      internalLight    : paletteColors.purpleLight,\n    \n      primaryDark      : primaryColors.darkest,\n      secondaryDark    : primaryColors.darker,\n      confirmDark      : paletteColors.greenDark,\n      warningDark      : paletteColors.orangeDark,\n      removeDark       : paletteColors.redDark,\n      internalDark     : paletteColors.purpleDark,\n    };\n    \n    const messageColors = {\n      information      : paletteColors.blue,\n      success          : paletteColors.green,\n      warning          : paletteColors.orange,\n      error            : paletteColors.red,\n      attention        : paletteColors.purple,\n      informationLight : paletteColors.blueLight,\n      successLight     : paletteColors.greenLight,\n      warningLight     : paletteColors.orangeLight,\n      errorLight       : paletteColors.redLight,\n      attentionLight   : paletteColors.purpleLight,\n      informationDark  : paletteColors.blueDark,\n      successDark      : paletteColors.greenDark,\n      warningDark      : paletteColors.orangeDark,\n      errorDark        : paletteColors.redDark,\n      attentionDark    : paletteColors.purpleDark,\n    };\n    \n    const statusColors = {\n      inProgress       : paletteColors.blue,\n      done             : paletteColors.green,\n      toDo             : paletteColors.purple,\n      failed           : paletteColors.red,\n      new              : paletteColors.orange,\n      noStatus         : neutralColors.gray5,\n      inProgressLight  : paletteColors.blueLight,\n      doneLight        : paletteColors.greenLight,\n      toDoLight        : paletteColors.purpleLight,\n      failedLight      : paletteColors.redLight,\n      newLight         : paletteColors.orangeLight,\n      noStatusLight    : neutralColors.gray7,\n      inProgressDark   : paletteColors.blueDark,\n      doneDark         : paletteColors.greenDark,\n      toDoDark         : paletteColors.purpleDark,\n      failedDark       : paletteColors.redDark,\n      newDark          : paletteColors.orangeDark,\n      noStatusDark     : neutralColors.gray3,\n    };\n    \n    const availabilityColors = {\n      unavailable      : primaryColors.lighter,\n      available        : paletteColors.green,\n      busy             : paletteColors.red,\n      unavailableLight : primaryColors.lightest,\n      availableLight   : paletteColors.greenLight,\n      busyLight        : paletteColors.redLight,\n      unavailableDark  : primaryColors.dark,\n      availableDark    : paletteColors.greenDark,\n      busyDark         : paletteColors.redDark,\n    };\n    \n    const priorityColors = {\n      trivial          : primaryColors.lighter,\n      minor            : paletteColors.green,\n      medium           : paletteColors.orange,\n      critical         : paletteColors.red,\n      trivialLight     : primaryColors.lightest,\n      minorLight       : paletteColors.greenLight,\n      mediumLight      : paletteColors.orangeLight,\n      criticalLight    : paletteColors.redLight,\n      trivialDark      : primaryColors.dark,\n      minorDark        : paletteColors.greenDark,\n      mediumDark       : paletteColors.orangeDark,\n      criticalDark     : paletteColors.redDark,\n    };\n    \n    const uiColors = {\n      text       : neutralColors.black,\n      lightText  : neutralColors.gray4,\n      background : neutralColors.gray8,\n      borders    : neutralColors.gray6,\n    };\n    \n    const defaultIcons = {\n      'message': {\n        'information' : 'info-circle',\n        'success'     : 'check-circle',\n        'warning'     : 'exclamation-triangle',\n        'error'       : 'times-circle',\n        'attention'   : 'exclamation-circle',\n      },\n      'ui': {\n        'help'        : 'question', \n      },\n    };\n    \n    // build theme\n    return {\n      colors : {\n        primary          : primaryColors,\n        palette          : paletteColors,\n        neutral          : neutralColors,\n        action           : actionColors,\n        message          : messageColors,\n        status           : statusColors,\n        availability     : availabilityColors,\n        priority         : priorityColors,\n        ui               : uiColors,\n        all              : Object.assign(\n                            {},\n                            paletteColors, \n                            actionColors, \n                            messageColors, \n                            statusColors, \n                            availabilityColors, \n                            priorityColors,\n                            uiColors ),\n      },\n      icons              : defaultIcons,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}