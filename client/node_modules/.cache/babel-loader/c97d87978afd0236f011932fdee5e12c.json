{"ast":null,"code":"import _slicedToArray from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/ProfessionalsForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from '../../components/Checkbox';\nimport { Field, TextInput, Text, Panel, Select } from 'shipnow-mercurio';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { WorkingHoursSelector } from './';\nimport startCase from 'lodash/startCase';\nimport { withStore } from '../../hocs';\nimport moment from 'moment';\nimport { observer } from 'mobx-react';\nimport { nameRegex, mailRegex, phoneRegex } from '../../lib/Regex';\nimport _ from 'lodash';\nimport { translate } from '../../lib/Translator';\n\nvar ProfessionalsForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfessionalsForm, _Component);\n\n  function ProfessionalsForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProfessionalsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfessionalsForm).call(this, props));\n    _this.state = {\n      days: {},\n      services: null,\n      branches: null,\n      selectedServices: [],\n      validTimeRange: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHours = _this.handleHours.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleServices = _this.handleServices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProfessionalsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.professional && this.state.selectedServices.length == 0) {\n        this.setState({\n          selectedServices: this.props.professional.professionalServicesIds\n        });\n      }\n\n      this.setState({\n        services: this.props.store.services.search({}, 'services-professional-creation-view', true),\n        branches: this.props.store.branches.search({}, 'branches-professional-creation-view', true)\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      this.props.onChange && this.props.onChange(name, value, valid);\n    }\n  }, {\n    key: \"handleHours\",\n    value: function handleHours(received, valid, name) {\n      name = 'hours';\n      this.setState({\n        days: received\n      });\n      var ret = [];\n      valid = true;\n\n      if (Object.keys(received).length > 0) {\n        for (var _i = 0, _Object$entries = Object.entries(received); _i < _Object$entries.length; _i++) {\n          var _ref3 = _Object$entries[_i];\n\n          var _ref2 = _slicedToArray(_ref3, 2);\n\n          var day = _ref2[0];\n          var hours = _ref2[1];\n\n          if (hours['sta'] && hours['fin']) {\n            ret.push({\n              \"days\": day,\n              \"beginHour\": hours['sta'].substring(0, 2),\n              \"endHour\": hours['fin'].substring(0, 2)\n            });\n\n            if (!moment(hours['sta'], 'HH:mm').isBefore(moment(hours['fin'], 'HH:mm'))) {\n              valid = false;\n            }\n          } else {\n            valid = false;\n          }\n        }\n      } else {\n        valid = false;\n      }\n\n      this.setState({\n        validTimeRange: valid\n      });\n      this.props.onChange && this.props.onChange(name, ret, valid);\n    }\n  }, {\n    key: \"isValidHour\",\n    value: function isValidHour() {\n      if (Object.keys(this.state.days).length > 0) {\n        return this.state.validTimeRange;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"handleServices\",\n    value: function handleServices(value, checked) {\n      var newArray = Array.from(this.state.selectedServices);\n\n      if (!checked) {\n        newArray = newArray.filter(function (item) {\n          return item !== value.id;\n        });\n      } else {\n        newArray.push(value.id);\n      }\n\n      this.setState({\n        selectedServices: newArray\n      });\n      this.props.onChange && this.props.onChange('services', newArray, newArray.length !== 0);\n    }\n  }, {\n    key: \"renderSkeleton\",\n    value: function renderSkeleton() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: this.getText('Nombre'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"name\",\n        className: \"is-fullwidth\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: this.getText('Apellido'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"lastName\",\n        className: \"is-fullwidth\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: this.getText('Teléfono'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"phone\",\n        className: \"is-fullwidth\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: this.getText('Email'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"email\",\n        className: \"is-fullwidth\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: this.getText('Email'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Select, {\n        name: \"branch\",\n        className: \"is-fullwidth\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: this.getText('¿Qué servicios ofrece?'),\n        labelNote: this.getText('Seleccioná los servicios'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        className: \"pt-1\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"...\"), React.createElement(Checkbox, {\n        className: \"pt-1\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"...\"), React.createElement(Checkbox, {\n        className: \"pt-1\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"...\")));\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isServicesLoaded = this.state.services && this.state.services.isOk();\n      var isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n\n      if (!isServicesLoaded || !isBranchesLoaded) {\n        return this.renderSkeleton();\n      }\n\n      var professional = this.props.professional;\n      var services = this.state.services;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Field, {\n        className: \"pl-4 pr-4\",\n        label: this.getText('Nombre'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.name,\n        name: \"name\",\n        validate: function validate(value) {\n          return nameRegex.test(value);\n        },\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-4 pr-4\",\n        label: this.getText('Apellido'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.lastName,\n        name: \"lastName\",\n        validate: function validate(value) {\n          return nameRegex.test(value);\n        },\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-4 pr-4\",\n        label: this.getText('Teléfono'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.phone,\n        name: \"phone\",\n        validate: function validate(value) {\n          return phoneRegex.test(value);\n        },\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-4 pr-4\",\n        label: this.getText('Email'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.email,\n        name: \"email\",\n        validate: function validate(value) {\n          return mailRegex.test(value);\n        },\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: \"\\xBFEn qu\\xE9 sucursal va a atender?\",\n        labelNote: \"Seleccion\\xE1 una sucursal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"is-fullwidth\",\n        placeholder: \"Sucursales\",\n        borderless: true,\n        icon: faChevronDown,\n        options: this.state.branches.toArray().map(function (branch) {\n          return {\n            key: branch.name || branch.cookedAddress,\n            value: branch.id\n          };\n        }),\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-4 pr-4\",\n        label: this.getText('¿En qué días y horarios va a trabajar?'),\n        labelNote: this.getText('Seleccioná los horarios semanales'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(WorkingHoursSelector, {\n        name: \"hours\",\n        defaultProfessional: professional,\n        startingDate: moment('05-17-2018 09:00 AM', 'MM-DD-YYYY hh:mm A'),\n        finishingDate: moment('05-17-2018 06:00 PM', 'MM-DD-YYYY hh:mm A'),\n        days: ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'],\n        onChange: this.handleHours,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), !this.isValidHour() && React.createElement(Panel, {\n        className: \"mt-1\",\n        color: \"error\",\n        invert: true,\n        style: {\n          padding: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"has-text-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.getText('Los horarios y/o días ingresados son incorrectos')))), React.createElement(Field, {\n        className: \"pl-4 pr-4 pt-1\",\n        label: this.getText('¿Qué servicios ofrece?'),\n        labelNote: this.getText('Seleccioná los servicios'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, services.toArray().map(function (serv) {\n        return React.createElement(Checkbox, {\n          className: \"pt-2\",\n          checked: professional && professional.professionalServicesIds.includes(serv.id),\n          value: serv,\n          onCheck: _this2.handleServices,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, _this2.getText(startCase(serv.name)));\n      })));\n    }\n  }]);\n\n  return ProfessionalsForm;\n}(Component)) || _class;\n\nProfessionalsForm.PropTypes = {\n  onChange: PropTypes.func,\n  professional: PropTypes.object\n};\nProfessionalsForm.defaultProps = {\n  onChange: null,\n  professional: null\n};\nexport default withStore(ProfessionalsForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/ProfessionalsForm.jsx"],"names":["React","Component","PropTypes","Checkbox","Field","TextInput","Text","Panel","Select","faChevronDown","WorkingHoursSelector","startCase","withStore","moment","observer","nameRegex","mailRegex","phoneRegex","_","translate","ProfessionalsForm","props","state","days","services","branches","selectedServices","validTimeRange","handleChange","bind","handleHours","handleServices","professional","length","setState","professionalServicesIds","store","search","sender","value","name","valid","onChange","received","ret","Object","keys","entries","day","hours","push","substring","isBefore","checked","newArray","Array","from","filter","item","id","getText","text","ui","language","isServicesLoaded","isOk","isBranchesLoaded","renderSkeleton","test","lastName","phone","email","toArray","map","branch","key","cookedAddress","isValidHour","padding","serv","includes","func","object","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,SACEC,KADF,EAEEC,SAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,MALF,QAMO,kBANP;AAQA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,SAASC,oBAAT,QAAqC,IAArC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,UAA/B,QAAiD,iBAAjD;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,SAAT,QAA0B,sBAA1B;;IAGMC,iB,GADLN,Q;;;;;AAEC,6BAAYO,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,QAAQ,EAAE,IAHC;AAIXC,MAAAA,gBAAgB,EAAE,EAJP;AAKXC,MAAAA,cAAc,EAAE;AALL,KAAb;AAOA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,uDAAtB;AAZiB;AAalB;;;;wCAEmB;AAClB,UAAI,KAAKR,KAAL,CAAWW,YAAX,IAA2B,KAAKV,KAAL,CAAWI,gBAAX,CAA4BO,MAA5B,IAAsC,CAArE,EAAwE;AACtE,aAAKC,QAAL,CAAc;AACZR,UAAAA,gBAAgB,EAAE,KAAKL,KAAL,CAAWW,YAAX,CAAwBG;AAD9B,SAAd;AAGD;;AACD,WAAKD,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWe,KAAX,CAAiBZ,QAAjB,CAA0Ba,MAA1B,CAAiC,EAAjC,EAAqC,qCAArC,EAA4E,IAA5E,CADE;AAEZZ,QAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWe,KAAX,CAAiBX,QAAjB,CAA0BY,MAA1B,CAAiC,EAAjC,EAAqC,qCAArC,EAA4E,IAA5E;AAFE,OAAd;AAID;;;iCAEYC,M,EAAQC,K,EAAOC,I,EAAMC,K,EAAO;AACvC,WAAKpB,KAAL,CAAWqB,QAAX,IAAuB,KAAKrB,KAAL,CAAWqB,QAAX,CAAoBF,IAApB,EAA0BD,KAA1B,EAAiCE,KAAjC,CAAvB;AACD;;;gCAEWE,Q,EAAUF,K,EAAOD,I,EAAO;AAClCA,MAAAA,IAAI,GAAG,OAAP;AACA,WAAKN,QAAL,CAAc;AACZX,QAAAA,IAAI,EAAEoB;AADM,OAAd;AAGA,UAAIC,GAAG,GAAG,EAAV;AACAH,MAAAA,KAAK,GAAG,IAAR;;AACA,UAAGI,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBV,MAAtB,GAA+B,CAAlC,EAAoC;AAClC,2CAA2BY,MAAM,CAACE,OAAP,CAAeJ,QAAf,CAA3B,qCAAqD;AAAA;;AAAA;;AAAA,cAAzCK,GAAyC;AAAA,cAApCC,KAAoC;;AACnD,cAAGA,KAAK,CAAC,KAAD,CAAL,IAAgBA,KAAK,CAAC,KAAD,CAAxB,EAAgC;AAC9BL,YAAAA,GAAG,CAACM,IAAJ,CAAS;AACP,sBAAQF,GADD;AAEP,2BAAaC,KAAK,CAAC,KAAD,CAAL,CAAaE,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,CAFN;AAGP,yBAAWF,KAAK,CAAC,KAAD,CAAL,CAAaE,SAAb,CAAuB,CAAvB,EAA0B,CAA1B;AAHJ,aAAT;;AAKA,gBAAG,CAAEtC,MAAM,CAACoC,KAAK,CAAC,KAAD,CAAN,EAAc,OAAd,CAAN,CAA6BG,QAA7B,CAAsCvC,MAAM,CAACoC,KAAK,CAAC,KAAD,CAAN,EAAc,OAAd,CAA5C,CAAL,EAA0E;AACxER,cAAAA,KAAK,GAAG,KAAR;AACD;AACF,WATD,MASK;AACHA,YAAAA,KAAK,GAAG,KAAR;AACD;AACF;AACF,OAfD,MAeK;AACHA,QAAAA,KAAK,GAAG,KAAR;AACD;;AAED,WAAKP,QAAL,CAAc;AAACP,QAAAA,cAAc,EAAEc;AAAjB,OAAd;AACA,WAAKpB,KAAL,CAAWqB,QAAX,IAAuB,KAAKrB,KAAL,CAAWqB,QAAX,CAAoBF,IAApB,EAA0BI,GAA1B,EAA+BH,KAA/B,CAAvB;AACD;;;kCAEa;AACZ,UAAGI,MAAM,CAACC,IAAP,CAAY,KAAKxB,KAAL,CAAWC,IAAvB,EAA6BU,MAA7B,GAAsC,CAAzC,EAA2C;AACzC,eAAO,KAAKX,KAAL,CAAWK,cAAlB;AACD;;AACD,aAAO,IAAP;AACD;;;mCAEcY,K,EAAOc,O,EAAS;AAC7B,UAAIC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKlC,KAAL,CAAWI,gBAAtB,CAAf;;AACA,UAAI,CAAC2B,OAAL,EAAc;AACZC,QAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgB,UAAAC,IAAI;AAAA,iBAAIA,IAAI,KAAKnB,KAAK,CAACoB,EAAnB;AAAA,SAApB,CAAX;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACJ,IAAT,CAAcX,KAAK,CAACoB,EAApB;AACD;;AACD,WAAKzB,QAAL,CAAc;AACZR,QAAAA,gBAAgB,EAAE4B;AADN,OAAd;AAGA,WAAKjC,KAAL,CAAWqB,QAAX,IAAuB,KAAKrB,KAAL,CAAWqB,QAAX,CAAoB,UAApB,EAAgCY,QAAhC,EAA0CA,QAAQ,CAACrB,MAAT,KAAoB,CAA9D,CAAvB;AACD;;;qCAEgB;AACf,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAK2B,OAAL,CAAa,QAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAgD,QAAA,QAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,UAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,SAAS,EAAC,cAArC;AAAoD,QAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,UAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAUE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,OAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,OAAhB;AAAwB,QAAA,SAAS,EAAC,cAAlC;AAAiD,QAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,EAaE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,OAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAA+C,QAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,EAgBE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,wBAAb,CAArC;AAA8E,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,0BAAb,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAA2B,QAAA,OAAO,EAAG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAA2B,QAAA,OAAO,EAAG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAA2B,QAAA,OAAO,EAAG,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAhBF,CADF;AAuBD;;;4BAEQC,I,EAAO;AACd,aAAO1C,SAAS,CAAC0C,IAAD,EAAO,KAAKxC,KAAL,CAAWe,KAAX,CAAiB0B,EAAjB,CAAoBC,QAA3B,CAAhB;AACD;;;6BAEQ;AAAA;;AACP,UAAMC,gBAAgB,GAAG,KAAK1C,KAAL,CAAWE,QAAX,IAAuB,KAAKF,KAAL,CAAWE,QAAX,CAAoByC,IAApB,EAAhD;AACA,UAAMC,gBAAgB,GAAG,KAAK5C,KAAL,CAAWG,QAAX,IAAuB,KAAKH,KAAL,CAAWG,QAAX,CAAoBwC,IAApB,EAAhD;;AACA,UAAI,CAACD,gBAAD,IAAqB,CAACE,gBAA1B,EAA4C;AAC1C,eAAO,KAAKC,cAAL,EAAP;AACD;;AALM,UAMCnC,YAND,GAMkB,KAAKX,KANvB,CAMCW,YAND;AAAA,UAOCR,QAPD,GAOc,KAAKF,KAPnB,CAOCE,QAPD;AAQP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKoC,OAAL,CAAa,QAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG5B,YAAY,IAAIA,YAAY,CAACQ,IAAhD;AAAuD,QAAA,IAAI,EAAC,MAA5D;AAAmE,QAAA,QAAQ,EAAG,kBAACD,KAAD;AAAA,iBAAYxB,SAAS,CAACqD,IAAV,CAAe7B,KAAf,CAAZ;AAAA,SAA9E;AAAmH,QAAA,SAAS,EAAC,cAA7H;AAA4I,QAAA,QAAQ,EAAG,KAAKX,YAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADN,EAIM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKgC,OAAL,CAAa,UAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG5B,YAAY,IAAIA,YAAY,CAACqC,QAAhD;AAA2D,QAAA,IAAI,EAAC,UAAhE;AAA2E,QAAA,QAAQ,EAAG,kBAAC9B,KAAD;AAAA,iBAAYxB,SAAS,CAACqD,IAAV,CAAe7B,KAAf,CAAZ;AAAA,SAAtF;AAA2H,QAAA,SAAS,EAAC,cAArI;AAAoJ,QAAA,QAAQ,EAAG,KAAKX,YAApK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJN,EAOM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKgC,OAAL,CAAa,UAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG5B,YAAY,IAAIA,YAAY,CAACsC,KAAhD;AAAwD,QAAA,IAAI,EAAC,OAA7D;AAAqE,QAAA,QAAQ,EAAG,kBAAC/B,KAAD;AAAA,iBAAYtB,UAAU,CAACmD,IAAX,CAAgB7B,KAAhB,CAAZ;AAAA,SAAhF;AAAsH,QAAA,SAAS,EAAC,cAAhI;AAA+I,QAAA,QAAQ,EAAG,KAAKX,YAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPN,EAUM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKgC,OAAL,CAAa,OAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG5B,YAAY,IAAIA,YAAY,CAACuC,KAAhD;AAAwD,QAAA,IAAI,EAAC,OAA7D;AAAqE,QAAA,QAAQ,EAAG,kBAAChC,KAAD;AAAA,iBAAYvB,SAAS,CAACoD,IAAV,CAAe7B,KAAf,CAAZ;AAAA,SAAhF;AAAqH,QAAA,SAAS,EAAC,cAA/H;AAA8I,QAAA,QAAQ,EAAG,KAAKX,YAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVN,EAaM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAC,sCAAnC;AAAoE,QAAA,SAAS,EAAC,4BAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,WAAW,EAAC,YAA7C;AAA0D,QAAA,UAAU,MAApE;AAAqE,QAAA,IAAI,EAAGnB,aAA5E;AAA4F,QAAA,OAAO,EAAG,KAAKa,KAAL,CAAWG,QAAX,CAAoB+C,OAApB,GAA8BC,GAA9B,CAAkC,UAAAC,MAAM;AAAA,iBAAK;AAACC,YAAAA,GAAG,EAAED,MAAM,CAAClC,IAAP,IAAekC,MAAM,CAACE,aAA5B;AAA2CrC,YAAAA,KAAK,EAAEmC,MAAM,CAACf;AAAzD,WAAL;AAAA,SAAxC,CAAtG;AAAoN,QAAA,QAAQ,EAAG,KAAK/B,YAApO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbN,EAgBM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAG,KAAKgC,OAAL,CAAa,wCAAb,CAArC;AAA8F,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,mCAAb,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,oBAAD;AAAsB,QAAA,IAAI,EAAC,OAA3B;AAAmC,QAAA,mBAAmB,EAAE5B,YAAxD;AAAsE,QAAA,YAAY,EAAGnB,MAAM,CAAC,qBAAD,EAAwB,oBAAxB,CAA3F;AAA2I,QAAA,aAAa,EAAGA,MAAM,CAAC,qBAAD,EAAwB,oBAAxB,CAAjK;AAAiN,QAAA,IAAI,EAAE,CAAC,QAAD,EAAU,SAAV,EAAoB,WAApB,EAAgC,UAAhC,EAA2C,QAA3C,EAAoD,UAApD,CAAvN;AAAwR,QAAA,QAAQ,EAAG,KAAKiB,WAAxS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEI,CAAC,KAAK+C,WAAL,EAAD,IAAuB,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,KAAK,EAAC,OAA9B;AAAsC,QAAA,MAAM,MAA5C;AAA6C,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,KAAKlB,OAAL,CAAa,kDAAb,CAAtC,CAAtE,CAF3B,CAhBN,EAoBM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,gBAAjB;AAAkC,QAAA,KAAK,EAAG,KAAKA,OAAL,CAAa,wBAAb,CAA1C;AAAmF,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,0BAAb,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpC,QAAQ,CAACgD,OAAT,GAAmBC,GAAnB,CAAuB,UAAAM,IAAI;AAAA,eAC1B,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAA2B,UAAA,OAAO,EAAG/C,YAAY,IAAIA,YAAY,CAACG,uBAAb,CAAqC6C,QAArC,CAA8CD,IAAI,CAACpB,EAAnD,CAArD;AAA6G,UAAA,KAAK,EAAGoB,IAArH;AAA4H,UAAA,OAAO,EAAG,MAAI,CAAChD,cAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6J,MAAI,CAAC6B,OAAL,CAAajD,SAAS,CAACoE,IAAI,CAACvC,IAAN,CAAtB,CAA7J,CAD0B;AAAA,OAA3B,CADH,CApBN,CADF;AA2BD;;;;EAnJ6BvC,S;;AAsJhCmB,iBAAiB,CAAClB,SAAlB,GAA8B;AAC5BwC,EAAAA,QAAQ,EAAExC,SAAS,CAAC+E,IADQ;AAE5BjD,EAAAA,YAAY,EAAE9B,SAAS,CAACgF;AAFI,CAA9B;AAKA9D,iBAAiB,CAAC+D,YAAlB,GAAiC;AAC/BzC,EAAAA,QAAQ,EAAE,IADqB;AAE/BV,EAAAA,YAAY,EAAE;AAFiB,CAAjC;AAKA,eAAepB,SAAS,CAACQ,iBAAD,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Checkbox } from '../../components/Checkbox'\n\nimport {\n  Field,\n  TextInput,\n  Text,\n  Panel,\n  Select\n} from 'shipnow-mercurio';\n\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { WorkingHoursSelector } from './';\n\nimport startCase from 'lodash/startCase';\n\nimport { withStore } from '../../hocs';\n\nimport moment from 'moment';\n\nimport { observer } from 'mobx-react';\n\nimport { nameRegex, mailRegex, phoneRegex } from '../../lib/Regex';\n\nimport _ from 'lodash';\n\nimport { translate } from '../../lib/Translator';\n\n@observer\nclass ProfessionalsForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: {},\n      services: null,\n      branches: null,\n      selectedServices: [],\n      validTimeRange: true\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleHours = this.handleHours.bind(this);\n    this.handleServices = this.handleServices.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.professional && this.state.selectedServices.length == 0) {\n      this.setState({\n        selectedServices: this.props.professional.professionalServicesIds\n      })\n    }\n    this.setState({\n      services: this.props.store.services.search({}, 'services-professional-creation-view', true),\n      branches: this.props.store.branches.search({}, 'branches-professional-creation-view', true),\n    })\n  }\n\n  handleChange(sender, value, name, valid) {\n    this.props.onChange && this.props.onChange(name, value, valid);\n  }\n\n  handleHours(received, valid, name ) {\n    name = 'hours'\n    this.setState({\n      days: received,\n    }) \n    let ret = []\n    valid = true\n    if(Object.keys(received).length > 0){\n      for (const [day, hours] of Object.entries(received)) {\n        if(hours['sta'] && hours['fin']){ \n          ret.push({\n            \"days\": day,\n            \"beginHour\": hours['sta'].substring(0, 2),\n            \"endHour\": hours['fin'].substring(0, 2)\n          })\n          if(!(moment(hours['sta'],'HH:mm').isBefore(moment(hours['fin'],'HH:mm')))){\n            valid = false\n          }\n        }else{\n          valid = false\n        }\n      }\n    }else{\n      valid = false\n    }\n\n    this.setState({validTimeRange: valid})\n    this.props.onChange && this.props.onChange(name, ret, valid);\n  }\n\n  isValidHour() {\n    if(Object.keys(this.state.days).length > 0){\n      return this.state.validTimeRange\n    }\n    return true\n  }\n\n  handleServices(value, checked) {\n    let newArray = Array.from(this.state.selectedServices)\n    if (!checked) {\n      newArray = newArray.filter(item => item !== value.id)\n    } else {\n      newArray.push(value.id)\n    }\n    this.setState({\n      selectedServices: newArray,\n    });\n    this.props.onChange && this.props.onChange('services', newArray, newArray.length !== 0)\n  }\n\n  renderSkeleton() {\n    return (\n      <React.Fragment>\n        <Field className=\"pl-5 pr-5\" label={ this.getText('Nombre') }>\n          <TextInput name=\"name\" className=\"is-fullwidth\" disabled />\n        </Field>\n        <Field className=\"pl-5 pr-5\" label={ this.getText('Apellido') }>\n          <TextInput name=\"lastName\" className=\"is-fullwidth\" disabled />\n        </Field>\n        <Field className=\"pl-5 pr-5\" label={ this.getText('Teléfono') }>\n          <TextInput name=\"phone\" className=\"is-fullwidth\" disabled />\n        </Field>\n        <Field className=\"pl-5 pr-5\" label={ this.getText('Email') }>\n          <TextInput name=\"email\" className=\"is-fullwidth\" disabled />\n        </Field>\n        <Field className=\"pl-5 pr-5\" label={ this.getText('Email') }>\n          <Select name=\"branch\" className=\"is-fullwidth\" disabled />\n        </Field>\n        <Field className=\"pl-5 pr-5\" label={ this.getText('¿Qué servicios ofrece?') } labelNote={ this.getText('Seleccioná los servicios') }>\n          <Checkbox className=\"pt-1\" checked={ false } >...</Checkbox>\n          <Checkbox className=\"pt-1\" checked={ false } >...</Checkbox>\n          <Checkbox className=\"pt-1\" checked={ false } >...</Checkbox>\n        </Field>\n      </React.Fragment>)\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  render() {\n    const isServicesLoaded = this.state.services && this.state.services.isOk();\n    const isBranchesLoaded = this.state.branches && this.state.branches.isOk()\n    if (!isServicesLoaded || !isBranchesLoaded) {\n      return this.renderSkeleton()\n    }\n    const { professional } = this.props;\n    const { services } = this.state;\n    return (\n      <React.Fragment>\n            <Field className=\"pl-4 pr-4\" label={ this.getText('Nombre') }>\n              <TextInput value={ professional && professional.name } name=\"name\" validate={ (value) => (nameRegex.test(value)) } className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-4 pr-4\" label={ this.getText('Apellido') }>\n              <TextInput value={ professional && professional.lastName } name=\"lastName\" validate={ (value) => (nameRegex.test(value)) } className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-4 pr-4\" label={ this.getText('Teléfono') }>\n              <TextInput value={ professional && professional.phone } name=\"phone\" validate={ (value) => (phoneRegex.test(value)) } className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-4 pr-4\" label={ this.getText('Email') }>\n              <TextInput value={ professional && professional.email } name=\"email\" validate={ (value) => (mailRegex.test(value)) } className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-5 pr-5\" label=\"¿En qué sucursal va a atender?\" labelNote=\"Seleccioná una sucursal\">\n              <Select className=\"is-fullwidth\" placeholder=\"Sucursales\" borderless icon={ faChevronDown } options={ this.state.branches.toArray().map(branch => ({key: branch.name || branch.cookedAddress, value: branch.id})) } onChange={ this.handleChange } />\n            </Field> \n            <Field className=\"pl-4 pr-4\" label={ this.getText('¿En qué días y horarios va a trabajar?') } labelNote={ this.getText('Seleccioná los horarios semanales') }>\n              <WorkingHoursSelector name=\"hours\" defaultProfessional={professional} startingDate={ moment('05-17-2018 09:00 AM', 'MM-DD-YYYY hh:mm A') } finishingDate={ moment('05-17-2018 06:00 PM', 'MM-DD-YYYY hh:mm A') } days={['MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY']} onChange={ this.handleHours } />\n              { !this.isValidHour() && <Panel className=\"mt-1\" color=\"error\" invert style={{padding: '2px'}}><Text className=\"has-text-centered\">{ this.getText('Los horarios y/o días ingresados son incorrectos') }</Text></Panel> }\n            </Field>\n            <Field className=\"pl-4 pr-4 pt-1\" label={ this.getText('¿Qué servicios ofrece?') } labelNote={ this.getText('Seleccioná los servicios') }>\n              {services.toArray().map(serv => (\n                <Checkbox className=\"pt-2\" checked={ professional && professional.professionalServicesIds.includes(serv.id)} value={ serv } onCheck={ this.handleServices }>{this.getText(startCase(serv.name))}</Checkbox>\n              ))}\n            </Field>\n      </React.Fragment> )\n  }\n}\n\nProfessionalsForm.PropTypes = {\n  onChange: PropTypes.func,\n  professional: PropTypes.object,\n}\n\nProfessionalsForm.defaultProps = {\n  onChange: null,\n  professional: null,\n}\n\nexport default withStore(ProfessionalsForm);"]},"metadata":{},"sourceType":"module"}