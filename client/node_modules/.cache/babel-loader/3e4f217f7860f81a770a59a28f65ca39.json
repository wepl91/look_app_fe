{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Reports/ProfessionalsReport/ProfessionalsReportView.jsx\";\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Bar } from 'react-chartjs-2';\nimport withStore from '../../../hocs/withStore';\nimport { observer } from 'mobx-react';\nimport { translate } from '../../../lib/Translator';\nimport { Column, Columns, Level, LevelLeft } from 'bloomer';\nimport { Title, Select, Field, DateTimePicker } from 'shipnow-mercurio';\n\nvar ProfessionalsReportView = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfessionalsReportView, _Component);\n\n  function ProfessionalsReportView(props) {\n    var _this;\n\n    _classCallCheck(this, ProfessionalsReportView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfessionalsReportView).call(this, props));\n    _this.state = {\n      data: null,\n      branches: null\n    };\n    return _this;\n  }\n\n  _createClass(ProfessionalsReportView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.store.reports.getProfessionalsReport(),\n        branches: this.props.store.branches.search({}, 'branches-list', true)\n      });\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      return {\n        labels: this.state.data.items.map(function (item) {\n          return item.professional.name;\n        }),\n        datasets: [{\n          label: 'Ingresos',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: this.state.data.items.map(function (item) {\n            return parseFloat(item.totalAmount);\n          })\n        }]\n      };\n    }\n  }, {\n    key: \"getChartConfig\",\n    value: function getChartConfig() {\n      return {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: this.getText('Ingresos por profesionales'),\n          fontSize: '18'\n        },\n        legend: {\n          display: false\n        },\n        tooltips: {\n          callbacks: {\n            label: function label(tooltipItem) {\n              return \"Total facturado: $\".concat(tooltipItem.yLabel);\n            },\n            title: function title(tooltipItem) {\n              return \"Ingresos generados por \".concat(tooltipItem[0].xLabel);\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isReportDataLoaded = this.state.data && this.state.data.isOk();\n\n      if (isReportDataLoaded) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(Level, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(LevelLeft, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, this.getText('Reporte de profesionales')))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(Columns, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Column, {\n          isSize: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: this.getText('¿Querés filtrar y ver ingresos por sucursal?'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Select, {\n          className: \"is-fullwidth\",\n          borderless: true,\n          placeholder: this.getText('Sucursal'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }))), React.createElement(Column, {\n          isSize: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: this.getText('Desde'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(DateTimePicker, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }))), React.createElement(Column, {\n          isSize: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Field, {\n          label: this.getText('Hasta'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(DateTimePicker, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        })))), React.createElement(Columns, {\n          className: \"pt-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Bar, {\n          data: this.getChartData(),\n          width: 100,\n          height: 450,\n          options: this.getChartConfig(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        })));\n      }\n\n      return null;\n    }\n  }]);\n\n  return ProfessionalsReportView;\n}(Component)) || _class;\n\nexport default withStore(withRouter(ProfessionalsReportView));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Reports/ProfessionalsReport/ProfessionalsReportView.jsx"],"names":["React","Component","withRouter","Bar","withStore","observer","translate","Column","Columns","Level","LevelLeft","Title","Select","Field","DateTimePicker","ProfessionalsReportView","props","state","data","branches","setState","store","reports","getProfessionalsReport","search","text","ui","language","labels","items","map","item","professional","name","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","parseFloat","totalAmount","maintainAspectRatio","title","display","getText","fontSize","legend","tooltips","callbacks","tooltipItem","yLabel","xLabel","isReportDataLoaded","isOk","getChartData","getChartConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport {Bar} from 'react-chartjs-2';\n\nimport withStore from '../../../hocs/withStore';\n\nimport { observer } from 'mobx-react';\n\nimport { translate } from '../../../lib/Translator'; \n\nimport {\n  Column,\n  Columns,\n  Level,\n  LevelLeft\n} from 'bloomer';\n\nimport {\n  Title,\n  Select,\n  Field,\n  DateTimePicker,\n} from 'shipnow-mercurio';\n\n@observer\nclass ProfessionalsReportView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: null,\n      branches: null,\n    }\n  }\n\n  \n  componentDidMount() {\n    this.setState({\n      data: this.props.store.reports.getProfessionalsReport(),\n      branches: this.props.store.branches.search({}, 'branches-list', true),\n    })\n  }\n  \n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  getChartData() {\n    return {\n      labels: this.state.data.items.map(item => (item.professional.name)),\n      datasets: [\n        {\n          label: 'Ingresos',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: this.state.data.items.map(item => (parseFloat(item.totalAmount))),\n        }\n      ]\n    };\n  }\n\n  getChartConfig() {\n    return {\n      maintainAspectRatio: false,\n      title: {\n        display: true,\n        text: this.getText('Ingresos por profesionales'),\n        fontSize: '18',\n      },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        callbacks: {\n          label: function(tooltipItem) {\n            return `Total facturado: $${tooltipItem.yLabel}`\n          },\n          title: function(tooltipItem) {\n            return `Ingresos generados por ${tooltipItem[0].xLabel}`\n          } \n        }\n      }\n    }\n  }\n  render() {\n    const isReportDataLoaded = this.state.data && this.state.data.isOk();\n    if (isReportDataLoaded) {\n      return(\n        <React.Fragment>\n          <Level>\n            <LevelLeft>\n              <Title>{ this.getText('Reporte de profesionales') }</Title>\n            </LevelLeft>\n          </Level>\n          <hr/>\n            <Columns>\n              <Column isSize={ 3 }>\n                <Field label={ this.getText('¿Querés filtrar y ver ingresos por sucursal?') }>\n                  <Select \n                    className=\"is-fullwidth\"\n                    borderless\n                    placeholder={this.getText('Sucursal')}/>\n                </Field>\n              </Column>\n              <Column isSize={ 3 }>\n                <Field label={ this.getText('Desde') }>\n                  <DateTimePicker />\n                </Field>\n              </Column>\n              <Column isSize={ 3 }>\n                <Field label={ this.getText('Hasta') }>\n                  <DateTimePicker />\n                </Field>\n              </Column>\n            </Columns>\n          <Columns className=\"pt-5\">\n          <Bar\n            data={this.getChartData()}\n            width={100}\n            height={450}\n            options={this.getChartConfig()}\n        />\n          </Columns>\n        </React.Fragment> );\n    }\n    return null\n  }\n}\n\nexport default withStore(withRouter(ProfessionalsReportView));"]},"metadata":{},"sourceType":"module"}