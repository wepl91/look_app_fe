{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { Model } from '../lib';\nimport { computed, action } from 'mobx';\nimport startCase from 'lodash/startCase';\nimport moment from 'moment';\nimport { Service, Branch } from '../models';\nimport { ServicesStore, BranchesStore } from '../stores';\nvar Professional = (_class =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Professional, _Model);\n\n  function Professional(attributes, store) {\n    _classCallCheck(this, Professional);\n\n    var defaultAttributes = {\n      name: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      status: '',\n      services: '',\n      workingHours: '',\n      branch: 1\n    };\n    var attrs = Object.assign(defaultAttributes, attributes);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Professional).call(this, attrs, store));\n  }\n\n  _createClass(Professional, [{\n    key: \"afterSetData\",\n    value: function afterSetData() {\n      if (this.services) {\n        var modeledServices = [];\n        this.services.forEach(function (service) {\n          modeledServices.push(new Service(service, ServicesStore));\n        });\n        this.services = modeledServices;\n      }\n\n      if (this.branch) {\n        this.branch = new Branch(this.branch, BranchesStore);\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.status = 'ACTIVE';\n      return this.clean().save();\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.status = 'INACTIVE';\n      return this.clean().save();\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var cleanServices = [];\n      this.services.forEach(function (service) {\n        if (service instanceof Object) {\n          cleanServices.push(service.id);\n        } else {\n          cleanServices.push(service);\n        }\n      });\n      this.services = cleanServices;\n\n      if (this.branch instanceof Object) {\n        this.branch = this.branch.id;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fullName\",\n    get: function get() {\n      return \"\".concat(startCase(this.name) || '', \" \").concat(startCase(this.lastName) || '');\n    }\n  }, {\n    key: \"professionalStatus\",\n    get: function get() {\n      return this.status.name;\n    }\n  }, {\n    key: \"professionalServices\",\n    get: function get() {\n      var ret = [];\n      this.services.map(function (service) {\n        return ret.push(startCase(service.name));\n      });\n      return ret;\n    }\n  }, {\n    key: \"professionalServicesIds\",\n    get: function get() {\n      var ret = [];\n      this.services.map(function (service) {\n        return ret.push(service.id);\n      });\n      return ret;\n    }\n  }, {\n    key: \"cookedBranchId\",\n    get: function get() {\n      return this.branch instanceof Object ? this.branch.id : this.branch;\n    }\n  }, {\n    key: \"rawWorkingDays\",\n    get: function get() {\n      var ret = {};\n      this.workingHours.map(function (day) {\n        ret[day.days.name] = {};\n        ret[day.days.name]['sta'] = moment(day.beginHour.toString(), \"LT\").format(\"HH:mm\");\n        ret[day.days.name]['fin'] = moment(day.endHour.toString(), \"LT\").format(\"HH:mm\");\n      });\n      return ret;\n    }\n  }, {\n    key: \"cookedWorkingDays\",\n    get: function get() {\n      var ret = [];\n      var cookedDays = {\n        'MONDAY': 'Lunes',\n        'TUESDAY': 'Martes',\n        'WEDNESDAY': 'Miércoles',\n        'THURSDAY': 'Jueves',\n        'FRIDAY': 'Viernes',\n        'SATURDAY': 'Sábado'\n      };\n      var sorter = {\n        \"lunes\": 1,\n        \"martes\": 2,\n        \"miércoles\": 3,\n        \"jueves\": 4,\n        \"viernes\": 5,\n        \"sábado\": 6\n      };\n      this.workingHours.map(function (day) {\n        return ret.push({\n          day: cookedDays[day.days.name],\n          begin: moment(day.beginHour.toString(), \"LT\").format(\"HH:mm\"),\n          end: moment(day.endHour.toString(), \"LT\").format(\"HH:mm\")\n        });\n      });\n      ret.sort(function sortByDay(a, b) {\n        var day1 = a.day.toLowerCase();\n        var day2 = b.day.toLowerCase();\n        return sorter[day1] - sorter[day2];\n      });\n      return ret;\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.status.name == 'ACTIVE';\n    }\n  }]);\n\n  return Professional;\n}(Model), (_applyDecoratedDescriptor(_class.prototype, \"fullName\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"fullName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"professionalStatus\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"professionalStatus\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"professionalServices\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"professionalServices\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"professionalServicesIds\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"professionalServicesIds\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"cookedBranchId\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cookedBranchId\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"rawWorkingDays\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"rawWorkingDays\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"cookedWorkingDays\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cookedWorkingDays\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isActive\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isActive\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"activate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"activate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deactivate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"deactivate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clean\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clean\"), _class.prototype)), _class);\nexport { Professional as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/src/models/Professional.js"],"names":["Model","computed","action","startCase","moment","Service","Branch","ServicesStore","BranchesStore","Professional","attributes","store","defaultAttributes","name","lastName","phone","email","status","services","workingHours","branch","attrs","Object","assign","modeledServices","forEach","service","push","clean","save","cleanServices","id","ret","map","day","days","beginHour","toString","format","endHour","cookedDays","sorter","begin","end","sort","sortByDay","a","b","day1","toLowerCase","day2"],"mappings":"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","sourcesContent":["import { Model } from '../lib';\n\nimport {\n  computed,\n  action\n} from 'mobx'\n\nimport startCase from 'lodash/startCase';\nimport moment from 'moment';\n\n\nimport { Service, Branch } from '../models';\nimport { ServicesStore, BranchesStore } from '../stores';\n\nexport default class Professional extends Model {\n  constructor( attributes, store ) {\n\n    let defaultAttributes = {\n      name: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      status: '',\n      services: '',\n      workingHours: '',\n      branch: 1,\n    };\n\n    let attrs = Object.assign( defaultAttributes, attributes );\n\n    super(attrs, store);\n  }\n\n  afterSetData() {\n    if (this.services) {\n      const modeledServices = [];\n      this.services.forEach( service => {\n        modeledServices.push(new Service(service, ServicesStore));\n      });\n      this.services = modeledServices;\n    }\n    if (this.branch) {\n      this.branch = new Branch(this.branch, BranchesStore);\n    }\n  }\n\n  @computed\n  get fullName() {\n    return `${ startCase(this.name) || '' } ${ startCase(this.lastName) || '' }`;\n  }\n\n  @computed\n  get professionalStatus() {\n    return this.status.name;\n  }\n\n  @computed\n  get professionalServices() {\n    const ret = [];\n    this.services.map( service => (ret.push(startCase(service.name))))\n    return ret;\n  }\n\n  @computed\n  get professionalServicesIds() {\n    const ret = [];\n    this.services.map( service => (ret.push(service.id)))\n    return ret;\n  }\n\n  @computed\n  get cookedBranchId() {\n    return this.branch instanceof Object ? this.branch.id : this.branch;\n  }\n\n  @computed\n  get rawWorkingDays() {\n    let ret = {}\n    this.workingHours.map( day => {\n      ret[day.days.name] = {}\n      ret[day.days.name]['sta'] = moment(day.beginHour.toString(),\"LT\").format(\"HH:mm\")\n      ret[day.days.name]['fin'] = moment(day.endHour.toString(),\"LT\").format(\"HH:mm\")\n    })\n    return ret\n  }\n\n  @computed\n  get cookedWorkingDays() {\n    const ret = [];\n    const cookedDays = {\n      'MONDAY': 'Lunes',\n      'TUESDAY': 'Martes',\n      'WEDNESDAY': 'Miércoles',\n      'THURSDAY': 'Jueves',\n      'FRIDAY': 'Viernes',\n      'SATURDAY': 'Sábado',\n    }\n    const sorter = {\n      \"lunes\": 1,\n      \"martes\": 2,\n      \"miércoles\": 3,\n      \"jueves\": 4,\n      \"viernes\": 5,\n      \"sábado\": 6,\n    }\n    this.workingHours.map( day => (ret.push({day: cookedDays[day.days.name], begin: moment(day.beginHour.toString(),\"LT\").format(\"HH:mm\"), end: moment(day.endHour.toString(),\"LT\").format(\"HH:mm\")})))\n    ret.sort(function sortByDay(a, b) {\n      let day1 = a.day.toLowerCase();\n      let day2 = b.day.toLowerCase();\n      return sorter[day1] - sorter[day2];\n    });\n    return ret;\n  }\n\n  @computed\n  get isActive() {\n    return this.status.name == 'ACTIVE';\n  }\n\n  @action\n  activate() {\n    this.status = 'ACTIVE';\n    return this.clean().save();\n  }\n\n  @action\n  deactivate() {\n    this.status = 'INACTIVE';\n    return this.clean().save();\n  }\n\n  @action\n  clean() {\n    const cleanServices = [];\n    this.services.forEach( service => {\n      if (service instanceof Object) {\n        cleanServices.push(service.id);\n      }\n      else {\n        cleanServices.push(service);\n      }\n    });\n    this.services = cleanServices;\n\n    if (this.branch instanceof Object) {\n      this.branch = this.branch.id;\n    }\n    return this;\n  }\n}"]},"metadata":{},"sourceType":"module"}