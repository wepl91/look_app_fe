{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Payments/PaymentModal.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { withToastManager } from 'react-toast-notifications';\nimport { Modal, ModalHeader, ModalContent, ModalFooter, Title, Button, Text } from 'shipnow-mercurio';\nimport { Level, LevelLeft, LevelRight, Columns, Column } from 'bloomer';\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { PaymentForm } from './';\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport { withStore } from '../../hocs';\nimport { ConfirmationModal } from '../ConfirmationModal';\nimport { observer } from 'mobx-react';\nimport { translate } from '../../lib/Translator';\nimport { ReactComponent as SvgDraw } from \"@svgr/webpack?-prettier,-svgo!../../assets/undraw_Savings_dwkw.svg\";\n\nvar PaymentsModal = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentsModal, _Component);\n\n  function PaymentsModal(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentsModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentsModal).call(this, props));\n    _this.state = {\n      confirmation: false,\n      appointment: _this.props.appointment,\n      paymentType: '',\n      cash: 0,\n      points: 0,\n      validCash: false,\n      validPoints: false,\n      confirmationData: {\n        accept: null,\n        cancel: null,\n        title: null,\n        content: null\n      }\n    };\n    _this.handleConfirm = _this.handleConfirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCancelConfirm = _this.handleCancelConfirm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePay = _this.handlePay.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePaymentData = _this.handlePaymentData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PaymentsModal, [{\n    key: \"handlePay\",\n    value: function handlePay(name) {\n      if (name == 'cancelled') {\n        this.props.onPay && this.props.onPay('cancelled');\n      } else {//realizar el pago correspondiente y mandar la response de vuelta al appointment modal\n        // ver el state: si el paymenttype es cash, hacerlo en efectivo. si es points en puntos. si es cashAndPoints hacerlo con los dos, si es fiado hacer la request correspondiente\n        // fijarse ademas si lo que estoy enviando suma el total del pago a realizar o si es parcial\n        // this.state.appointment.pay().then( response =>{ this.props.onPay && this.props.onPay('paid', response) });\n      }\n    }\n  }, {\n    key: \"handlePaymentData\",\n    value: function handlePaymentData(sender, value, name, valid) {\n      if (name == 'cash') {\n        valid.type == 'success' ? this.setState({\n          cash: value,\n          paymentType: 'cash',\n          validCash: true\n        }) : this.setState({\n          validCash: false\n        });\n      }\n\n      if (name == 'points') {\n        valid.type == 'success' ? this.setState({\n          points: value,\n          paymentType: 'points',\n          validPoints: true\n        }) : this.setState({\n          validPoints: false\n        });\n      }\n\n      if (name == 'cashHalf') {\n        valid.type == 'success' ? this.setState({\n          cash: value,\n          paymentType: 'cashAndPoints',\n          validCash: true\n        }) : this.setState({\n          validCash: false\n        });\n      }\n\n      if (name == 'pointsHalf') {\n        valid.type == 'success' ? this.setState({\n          points: value,\n          paymentType: 'cashAndPoints',\n          validPoints: true\n        }) : this.setState({\n          validPoints: false\n        });\n      }\n    }\n  }, {\n    key: \"handleCancelConfirm\",\n    value: function handleCancelConfirm() {\n      this.setState({\n        confirmation: false\n      });\n    }\n  }, {\n    key: \"handleConfirm\",\n    value: function handleConfirm() {\n      var data = {};\n      data['title'] = 'Abonar turno';\n      data['accept'] = this.handlePay;\n      data['cancel'] = this.handleCancelConfirm;\n      data['content'] = 'Estás por efectuar el pago. ¿Estás seguro?';\n      this.setState({\n        confirmation: true,\n        confirmationData: data\n      });\n    }\n  }, {\n    key: \"renderConfirmationModal\",\n    value: function renderConfirmationModal() {\n      var confirmationData = this.state.confirmationData;\n      return React.createElement(ConfirmationModal, {\n        title: confirmationData.title,\n        content: confirmationData.content,\n        onAccept: confirmationData.accept,\n        onCancel: confirmationData.cancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"getDisabled\",\n    value: function getDisabled() {\n      if (this.state.paymentType == 'cash') {\n        return !this.state.validCash;\n      }\n\n      if (this.state.paymentType == 'points') {\n        return !this.state.validPoints;\n      }\n\n      if (this.state.paymentType == 'cashAndPoints') {\n        return !(this.state.validCash && this.state.validPoints);\n      }\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var date = this.props.date;\n      var appointment = this.state.appointment;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        width: \"70%\",\n        height: \"90%\",\n        show: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"\".concat(moment(date).format('LL')))), React.createElement(LevelRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"plus\",\n        name: \"cancelled\",\n        kind: \"link\",\n        size: \"xl\",\n        onClick: function onClick() {\n          return _this2.handlePay('cancelled');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))))), React.createElement(ModalContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Title, {\n        size: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"\".concat(this.getText('Total a abonar: $'), \" \").concat(appointment.totalPrice)), React.createElement(PaymentForm, {\n        totalAmount: appointment.totalPrice,\n        clientPoints: appointment.clientPoints,\n        onChange: this.handlePaymentData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(Column, {\n        className: \"has-text-centered\",\n        isSize: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(SvgDraw, {\n        style: {\n          height: '450px',\n          width: '450px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Button, {\n        kind: \"outline\",\n        name: \"paid\",\n        onClick: this.handleConfirm,\n        disabled: this.getDisabled(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Efectuar pago\"))))), this.state.confirmation && this.renderConfirmationModal());\n    }\n  }]);\n\n  return PaymentsModal;\n}(Component)) || _class;\n\nPaymentsModal.PropTypes = {\n  date: PropTypes.object,\n  onPay: PropTypes.func,\n  appointment: PropTypes.object\n};\nPaymentsModal.defaultProps = {\n  date: null,\n  onPay: null,\n  appointment: null\n};\nexport default withToastManager(withStore(PaymentsModal));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Payments/PaymentModal.jsx"],"names":["React","Component","PropTypes","moment","withToastManager","Modal","ModalHeader","ModalContent","ModalFooter","Title","Button","Text","Level","LevelLeft","LevelRight","Columns","Column","faTimes","PaymentForm","FontAwesomeIcon","withStore","ConfirmationModal","observer","translate","PaymentsModal","props","state","confirmation","appointment","paymentType","cash","points","validCash","validPoints","confirmationData","accept","cancel","title","content","handleConfirm","bind","handleCancelConfirm","handlePay","handlePaymentData","name","onPay","sender","value","valid","type","setState","data","text","store","ui","language","date","format","getText","totalPrice","clientPoints","height","width","getDisabled","renderConfirmationModal","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport moment from 'moment';\n\nimport { withToastManager } from 'react-toast-notifications';\n\nimport {\n  Modal,\n  ModalHeader,\n  ModalContent,\n  ModalFooter,\n  Title,\n  Button,\n  Text\n} from 'shipnow-mercurio';\n\nimport {\n  Level,\n  LevelLeft,\n  LevelRight,\n  Columns,\n  Column\n} from 'bloomer';\n\nimport { \n  faTimes, \n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { PaymentForm } from './';\n\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\n\nimport { withStore } from '../../hocs';\n\nimport { ConfirmationModal } from '../ConfirmationModal';\n\nimport { observer } from 'mobx-react';\n\nimport { translate } from '../../lib/Translator';\n\nimport { ReactComponent as SvgDraw } from '../../assets/undraw_Savings_dwkw.svg';\n\n@observer\nclass PaymentsModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmation: false,\n      appointment: this.props.appointment,\n      paymentType: '',\n      cash: 0,\n      points: 0,\n      validCash: false,\n      validPoints: false,\n      confirmationData: {\n        accept: null,\n        cancel: null,\n        title: null,\n        content: null,\n      }\n    }\n\n    this.handleConfirm         = this.handleConfirm.bind(this);\n    this.handleCancelConfirm = this.handleCancelConfirm.bind(this);\n    this.handlePay         = this.handlePay.bind(this);\n    this.handlePaymentData         = this.handlePaymentData.bind(this);\n  }\n\n  handlePay( name ) {\n    if( name=='cancelled' ){\n      this.props.onPay && this.props.onPay('cancelled')\n    }else{\n      //realizar el pago correspondiente y mandar la response de vuelta al appointment modal\n      // ver el state: si el paymenttype es cash, hacerlo en efectivo. si es points en puntos. si es cashAndPoints hacerlo con los dos, si es fiado hacer la request correspondiente\n      // fijarse ademas si lo que estoy enviando suma el total del pago a realizar o si es parcial\n      // this.state.appointment.pay().then( response =>{ this.props.onPay && this.props.onPay('paid', response) });\n    }\n  }\n\n  handlePaymentData(sender, value, name, valid) {\n    if(name == 'cash'){\n      valid.type == 'success' ? this.setState({cash: value, paymentType: 'cash', validCash: true}) : this.setState({ validCash: false })\n    }\n    if(name == 'points'){\n      valid.type == 'success' ? this.setState({points: value, paymentType: 'points', validPoints: true}) : this.setState({ validPoints: false })\n    }\n    if(name == 'cashHalf'){\n      valid.type == 'success' ? this.setState({cash: value, paymentType: 'cashAndPoints', validCash: true}) : this.setState({ validCash: false })\n    }\n    if(name == 'pointsHalf'){\n      valid.type == 'success' ? this.setState({points: value, paymentType: 'cashAndPoints', validPoints: true}) : this.setState({ validPoints: false })\n    }\n  }\n\n  handleCancelConfirm() {\n    this.setState({\n      confirmation: false,\n    })\n  }\n\n  handleConfirm( ) {\n    let data = {};\n\n    data['title']   = 'Abonar turno';\n    data['accept']  = this.handlePay;\n    data['cancel']  = this.handleCancelConfirm;\n    data['content'] = 'Estás por efectuar el pago. ¿Estás seguro?';\n\n    this.setState({\n      confirmation:true,\n      confirmationData: data,\n    });\n  }\n\n  renderConfirmationModal() {\n    const { confirmationData } = this.state;\n    return (<ConfirmationModal \n              title=   { confirmationData.title   }\n              content= { confirmationData.content } \n              onAccept={ confirmationData.accept  } \n              onCancel={ confirmationData.cancel  } />)\n  }\n\n  getDisabled() {\n    if(this.state.paymentType == 'cash'){\n      return !this.state.validCash\n    }\n    if(this.state.paymentType == 'points'){\n      return !this.state.validPoints\n    }\n    if(this.state.paymentType == 'cashAndPoints'){\n      return !(this.state.validCash && this.state.validPoints)\n    }\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  render() {\n    const { date } = this.props\n    const { appointment } = this.state\n    return(\n      <React.Fragment>\n        <Modal width=\"70%\" height=\"90%\" show>\n          <ModalHeader>\n            <Level>\n              <LevelLeft>\n                <Title>{ `${ moment(date).format('LL') }` }</Title>\n              </LevelLeft>\n              <LevelRight>\n              <Button icon=\"plus\" name=\"cancelled\" kind=\"link\" size=\"xl\" onClick={() => this.handlePay('cancelled') }>\n                <FontAwesomeIcon icon={ faTimes }/>\n              </Button>\n              </LevelRight>\n              </Level>\n          </ModalHeader>\n          <ModalContent>\n              <Columns>\n                <Column isSize={ 5 }>\n                  <Title size=\"md\">{ `${ this.getText('Total a abonar: $') } ${appointment.totalPrice}` }</Title>\n                  <PaymentForm totalAmount={ appointment.totalPrice } clientPoints={ appointment.clientPoints } onChange={ this.handlePaymentData }></PaymentForm>\n                </Column>\n                <Column className=\"has-text-centered\" isSize={ 7 }>\n                  <SvgDraw style={{ height: '450px', width: '450px' }}/>\n                </Column>\n              </Columns>\n            </ModalContent>\n          <ModalFooter>\n            <Level>\n              <LevelLeft>\n                  <Button kind=\"outline\" name=\"paid\" onClick={ this.handleConfirm } disabled={ this.getDisabled() }>Efectuar pago</Button>\n              </LevelLeft>\n            </Level>\n          </ModalFooter>\n        </Modal>\n        { this.state.confirmation && this.renderConfirmationModal() }\n      </React.Fragment>)\n  }\n}\nPaymentsModal.PropTypes = {\n  date: PropTypes.object,\n  onPay: PropTypes.func,\n  appointment: PropTypes.object\n}\n\nPaymentsModal.defaultProps = {\n  date: null,\n  onPay: null,\n  appointment: null\n}\n\nexport default withToastManager(withStore(PaymentsModal));"]},"metadata":{},"sourceType":"module"}