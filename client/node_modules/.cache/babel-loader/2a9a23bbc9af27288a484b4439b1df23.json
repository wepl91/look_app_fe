{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/src/components/Clients/ClientsForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { observer } from 'mobx-react';\nimport { withStore } from '../../hocs';\nimport { nameRegex, dniRegex, phoneRegex, mailRegex } from '../../lib/Regex';\nimport { Columns, Column } from 'bloomer';\nimport { Text, TextInput, Field } from 'shipnow-mercurio';\nimport { translate } from '../../lib/Translator';\n\nvar ClientsForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ClientsForm, _Component);\n\n  function ClientsForm(props) {\n    var _this;\n\n    _classCallCheck(this, ClientsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClientsForm).call(this, props));\n    _this.state = {\n      clientCategory: _this.props.client.status.name || _this.props.client.status\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ClientsForm, [{\n    key: \"handleCategory\",\n    value: function handleCategory(category) {\n      this.props.onChange && this.props.onChange('status', category, true);\n      this.setState({\n        clientCategory: category\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      if (name == 'primaryPhone' && value == '' || name == 'secondPhone' && value == '') {\n        valid.type = 'success';\n      }\n\n      this.props.onChange && this.props.onChange(name, value, valid);\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var client = this.props.client;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Nombre y Apellido'),\n        labelNote: this.getText('¿Cómo se llama el nuevo cliente?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        placeholder: this.getText('Nombre'),\n        onChange: this.handleChange,\n        validate: function validate(value) {\n          return nameRegex.test(value);\n        },\n        name: \"name\",\n        value: client.name,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        placeholder: this.getText('Apellido'),\n        onChange: this.handleChange,\n        validate: function validate(value) {\n          return nameRegex.test(value);\n        },\n        name: \"lastName\",\n        value: client.lastName,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })))), React.createElement(Field, {\n        label: this.getText('Documento'),\n        labelNote: this.getText('¿Cuál es el dni del nuevo cliente?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        placeholder: \"11.111.111\",\n        onChange: this.handleChange,\n        name: \"DNI\",\n        validate: function validate(value) {\n          return dniRegex.test(value);\n        },\n        value: client.DNI,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"Email\",\n        labelNote: this.getText('¿Cuál es el email del nuevo cliente?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"email\",\n        placeholder: \"cliente@gmail.com\",\n        onChange: this.handleChange,\n        validate: function validate(value) {\n          return mailRegex.test(value);\n        },\n        value: client.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: this.getText('Teléfono principal'),\n        labelNote: this.getText('¿Cuál es el nro de teléfono del cliente?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        onChange: this.handleChange,\n        name: \"primaryPhone\",\n        validate: function validate(value) {\n          return phoneRegex.test(value);\n        },\n        value: client.primaryPhone,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: this.getText('Teléfono secundario'),\n        labelNote: this.getText('Es necesario una segunda opción de comunicación'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        onChange: this.handleChange,\n        name: \"secondPhone\",\n        validate: function validate(value) {\n          return phoneRegex.test(value);\n        },\n        value: client.secondPhone,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: this.getText('Categoría'),\n        labelNote: this.getText('¿Dentro de qué categoría se encuentra el cliente?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"ml-1\",\n        size: \"md\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"NORMAL\",\n        onChange: function onChange() {\n          return _this2.handleCategory('NORMAL');\n        },\n        checked: client.status.name ? client.status.name == 'NORMAL' : client.status == 'NORMAL',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), this.getText('Normal')), React.createElement(Text, {\n        className: \"ml-1 mt-1 mb-1\",\n        size: \"md\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"MOROSO\",\n        onChange: function onChange() {\n          return _this2.handleCategory('MOROSO');\n        },\n        checked: client.status.name ? client.status.name == 'MOROSO' : client.status == 'MOROSO',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.getText('Moroso')), React.createElement(Text, {\n        className: \"ml-1\",\n        size: \"md\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"VIP\",\n        onChange: function onChange() {\n          return _this2.handleCategory('VIP');\n        },\n        checked: client.status.name ? client.status.name == 'VIP' : client.status == 'VIP',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), this.getText('VIP'))));\n    }\n  }]);\n\n  return ClientsForm;\n}(Component)) || _class;\n\nClientsForm.PropTypes = {\n  client: PropTypes.object,\n  onChange: PropTypes.func\n};\nClientsForm.defaultProps = {\n  client: null,\n  onChange: null\n};\nexport default withStore(ClientsForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/client/src/components/Clients/ClientsForm.jsx"],"names":["React","Component","PropTypes","observer","withStore","nameRegex","dniRegex","phoneRegex","mailRegex","Columns","Column","Text","TextInput","Field","translate","ClientsForm","props","state","clientCategory","client","status","name","handleChange","bind","category","onChange","setState","sender","value","valid","type","text","store","ui","language","getText","test","lastName","DNI","email","primaryPhone","secondPhone","handleCategory","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { observer } from 'mobx-react';\n\nimport { withStore } from '../../hocs';\n\nimport { nameRegex, dniRegex, phoneRegex, mailRegex } from '../../lib/Regex'\n\nimport {\n  Columns,\n  Column\n} from 'bloomer';\n\nimport {\n  Text,\n  TextInput,\n  Field\n} from 'shipnow-mercurio';\n\nimport { translate } from '../../lib/Translator';\n\n@observer\nclass ClientsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientCategory: this.props.client.status.name || this.props.client.status,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleCategory( category ) {\n    this.props.onChange && this.props.onChange('status', category, true);\n    this.setState({\n      clientCategory: category\n    })\n  }\n\n  handleChange( sender, value, name, valid) {\n    if(name=='primaryPhone' && value=='' || name=='secondPhone' && value==''){\n      valid.type = 'success'\n    }\n    this.props.onChange && this.props.onChange(name, value, valid)\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  render() {\n    const { client } = this.props\n    return(\n      <React.Fragment>\n        <Field label={ this.getText('Nombre y Apellido') } labelNote={ this.getText('¿Cómo se llama el nuevo cliente?') }>\n          <Columns>\n            <Column>\n              <TextInput placeholder={ this.getText('Nombre') } onChange={ this.handleChange } validate={ (value) => (nameRegex.test(value)) } name=\"name\" value={ client.name } className=\"is-fullwidth\" />\n            </Column>\n            <Column>\n              <TextInput placeholder={ this.getText('Apellido') } onChange={ this.handleChange } validate={ (value) => (nameRegex.test(value)) } name=\"lastName\" value={ client.lastName } className=\"is-fullwidth\" />\n            </Column>\n          </Columns>\n        </Field>\n        <Field label={ this.getText('Documento') } labelNote={  this.getText('¿Cuál es el dni del nuevo cliente?') }>\n          <TextInput placeholder=\"11.111.111\" onChange={ this.handleChange } name=\"DNI\" validate={ (value) => (dniRegex.test(value)) } value={ client.DNI } className=\"is-fullwidth\" />\n        </Field>\n        <Field label=\"Email\" labelNote={ this.getText('¿Cuál es el email del nuevo cliente?') }>\n          <TextInput name=\"email\" placeholder=\"cliente@gmail.com\" onChange={ this.handleChange } validate={ (value) => (mailRegex.test(value))} value={ client.email }/>\n        </Field>\n        <Field label={ this.getText('Teléfono principal') } labelNote={ this.getText('¿Cuál es el nro de teléfono del cliente?') }>\n          <TextInput onChange={ this.handleChange } name=\"primaryPhone\" validate={ (value) => (phoneRegex.test(value)) } value={ client.primaryPhone } className=\"is-fullwidth\" />\n        </Field>\n        <Field label={ this.getText('Teléfono secundario') } labelNote={ this.getText('Es necesario una segunda opción de comunicación') }>\n          <TextInput onChange={ this.handleChange } name=\"secondPhone\" validate={ (value) => (phoneRegex.test(value)) } value={ client.secondPhone } className=\"is-fullwidth\" />\n        </Field>\n        <Field label={ this.getText('Categoría') } labelNote={ this.getText('¿Dentro de qué categoría se encuentra el cliente?') }>\n          <Text className=\"ml-1\" size=\"md\" weight=\"medium\">\n            <input \n              className=\"ml-1 mr-1\" \n              type=\"radio\" \n              value=\"NORMAL\" \n              onChange={ () => (this.handleCategory('NORMAL')) }\n              checked={ client.status.name ? client.status.name == 'NORMAL' : client.status == 'NORMAL' } />\n            { this.getText('Normal') }\n          </Text>\n          <Text className=\"ml-1 mt-1 mb-1\" size=\"md\" weight=\"medium\">\n            <input \n              className=\"ml-1 mr-1\" \n              type=\"radio\" \n              value=\"MOROSO\" \n              onChange={ () => (this.handleCategory('MOROSO')) }\n              checked={ client.status.name ? client.status.name == 'MOROSO' : client.status == 'MOROSO' } />\n            { this.getText('Moroso') }\n          </Text>\n          <Text className=\"ml-1\" size=\"md\" weight=\"medium\">\n            <input \n              className=\"ml-1 mr-1\" \n              type=\"radio\" \n              value=\"VIP\"\n              onChange={ () => (this.handleCategory('VIP')) }\n              checked={ client.status.name ? client.status.name == 'VIP' : client.status == 'VIP' } />\n            { this.getText('VIP') }\n          </Text>\n        </Field>\n      </React.Fragment> );\n  }\n}\n\nClientsForm.PropTypes = {\n  client: PropTypes.object,\n  onChange: PropTypes.func,\n}\n\nClientsForm.defaultProps = {\n  client: null,\n  onChange: null,\n}\n\nexport default withStore(ClientsForm);"]},"metadata":{},"sourceType":"module"}