{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar classNames = require(\"classnames\");\n\nvar React = require(\"react\");\n\nvar helpers_1 = require(\"./helpers\");\n\nexports.isMobile = helpers_1.is({\n  mobile: true\n});\nexports.isTablet = helpers_1.is({\n  tablet: true\n});\nexports.isTouch = helpers_1.is({\n  touch: true\n});\nexports.isDesktop = helpers_1.is({\n  desktop: true\n});\nexports.isWidescreen = helpers_1.is({\n  widescreen: true\n});\nexports.isFullHD = helpers_1.is({\n  fullhd: true\n});\nvar isTabletOnly = helpers_1.is({\n  'tablet-only': true\n});\nvar isDesktopOnly = helpers_1.is({\n  'desktop-only': true\n});\nexports.isLeft = helpers_1.is({\n  left: true\n});\nexports.isRight = helpers_1.is({\n  right: true\n});\nexports.isCentered = helpers_1.is({\n  centered: true\n});\nexports.isCenter = helpers_1.is({\n  center: true\n});\nexports.isFullWidth = helpers_1.is({\n  fullwidth: true\n});\nvar isSmall = helpers_1.is({\n  small: true\n});\nvar isMedium = helpers_1.is({\n  medium: true\n});\nvar isLarge = helpers_1.is({\n  large: true\n});\nvar isAllPlatforms = helpers_1.isOption(exports.isMobile, exports.isTablet, exports.isDesktop, exports.isTouch, exports.isWidescreen, isTabletOnly, isDesktopOnly);\nvar isAlign = helpers_1.isOption(exports.isLeft, exports.isCentered, exports.isRight);\nvar isSize = helpers_1.isOption(isSmall, isMedium, isLarge);\n\nfunction getAlignmentModifiers(_a) {\n  var align = _a.isAlign;\n\n  var _b;\n\n  return isAlign(align) ? (_b = {}, _b[\"is-\" + align] = true, _b) : {};\n}\n\nexports.getAlignmentModifiers = getAlignmentModifiers;\n\nfunction removeAlignmentProps(props) {\n  var isAlign = props.isAlign,\n      rest = tslib_1.__rest(props, [\"isAlign\"]);\n\n  return rest;\n}\n\nexports.removeAlignmentProps = removeAlignmentProps;\n\nfunction getSizeModifiers(_a) {\n  var size = _a.isSize;\n\n  var _b;\n\n  return isSize(size) ? (_b = {}, _b[\"is-\" + size] = true, _b) : {};\n}\n\nexports.getSizeModifiers = getSizeModifiers;\n\nfunction removeSizeProps(props) {\n  var isSize = props.isSize,\n      rest = tslib_1.__rest(props, [\"isSize\"]);\n\n  return rest;\n}\n\nexports.removeSizeProps = removeSizeProps;\n\nfunction getFullWidthModifiers(props) {\n  return {\n    'is-fullwidth': props.isFullWidth\n  };\n}\n\nfunction removeFullWidthProps(props) {\n  var isFullWidth = props.isFullWidth,\n      rest = tslib_1.__rest(props, [\"isFullWidth\"]);\n\n  return rest;\n}\n\nfunction getActiveModifiers(props) {\n  return {\n    'is-active': props.isActive\n  };\n}\n\nexports.getActiveModifiers = getActiveModifiers;\n\nfunction removeActiveModifiers(props) {\n  var isActive = props.isActive,\n      rest = tslib_1.__rest(props, [\"isActive\"]);\n\n  return rest;\n}\n\nexports.removeActiveModifiers = removeActiveModifiers;\n\nfunction getFocusedModifiers(props) {\n  return {\n    'is-focused': props.isFocused\n  };\n}\n\nexports.getFocusedModifiers = getFocusedModifiers;\n\nfunction removeFocusedModifiers(props) {\n  var isFocused = props.isFocused,\n      rest = tslib_1.__rest(props, [\"isFocused\"]);\n\n  return rest;\n}\n\nexports.removeFocusedModifiers = removeFocusedModifiers;\n\nfunction getHoveredModifiers(props) {\n  return {\n    'is-hovered': props.isHovered\n  };\n}\n\nexports.getHoveredModifiers = getHoveredModifiers;\n\nfunction removeHoveredModifiers(props) {\n  var isHovered = props.isHovered,\n      rest = tslib_1.__rest(props, [\"isHovered\"]);\n\n  return rest;\n}\n\nexports.removeHoveredModifiers = removeHoveredModifiers;\n\nfunction getStateModifiers(props) {\n  return tslib_1.__assign({}, getActiveModifiers(props), getFocusedModifiers(props), getHoveredModifiers(props));\n}\n\nexports.getStateModifiers = getStateModifiers;\n\nfunction removeStateProps(props) {\n  var isActive = props.isActive,\n      isFocused = props.isFocused,\n      isHovered = props.isHovered,\n      rest = tslib_1.__rest(props, [\"isActive\", \"isFocused\", \"isHovered\"]);\n\n  return rest;\n}\n\nexports.removeStateProps = removeStateProps;\n\nfunction getLoadingModifiers(props) {\n  return {\n    'is-loading': props.isLoading\n  };\n}\n\nexports.getLoadingModifiers = getLoadingModifiers;\n\nfunction removeLoadingProps(props) {\n  var isLoading = props.isLoading,\n      rest = tslib_1.__rest(props, [\"isLoading\"]);\n\n  return rest;\n}\n\nexports.removeLoadingProps = removeLoadingProps;\n\nfunction getColorModifiers(_a) {\n  var color = _a.isColor;\n\n  var _b;\n\n  return color ? (_b = {}, _b[\"is-\" + color] = true, _b) : {};\n}\n\nexports.getColorModifiers = getColorModifiers;\n\nfunction removeColorProps(props) {\n  var isColor = props.isColor,\n      rest = tslib_1.__rest(props, [\"isColor\"]);\n\n  return rest;\n}\n\nexports.removeColorProps = removeColorProps;\nvar isValidHeading = helpers_1.isBetween(1, 6);\n\nfunction getHeadingModifiers(_a) {\n  var isSpaced = _a.isSpaced,\n      size = _a.isSize;\n\n  var _b;\n\n  var isSize = isValidHeading(size) ? (_b = {}, _b[\"is-\" + size] = true, _b) : {};\n  return tslib_1.__assign({}, isSize, {\n    'is-spaced': isSpaced\n  });\n}\n\nexports.getHeadingModifiers = getHeadingModifiers;\n\nfunction removeHeadingProps(props) {\n  var isSize = props.isSize,\n      isSpaced = props.isSpaced,\n      rest = tslib_1.__rest(props, [\"isSize\", \"isSpaced\"]);\n\n  return rest;\n}\n\nexports.removeHeadingProps = removeHeadingProps;\nvar isFlex = helpers_1.is({\n  flex: true\n});\nvar isBlock = helpers_1.is({\n  block: true\n});\nvar isInline = helpers_1.is({\n  inline: true\n});\nvar isInlineBlock = helpers_1.is({\n  'inline-block': true\n});\nvar isInlineFlex = helpers_1.is({\n  'inline-flex': true\n});\nvar isDisplay = helpers_1.isOption(isFlex, isBlock, isInline, isInlineBlock, isInlineFlex);\n\nvar getShowModifiers = function getShowModifiers(display) {\n  var _a;\n\n  var isDefault = function isDefault(str) {\n    return str === 'default' ? true : false;\n  };\n\n  if (typeof display === 'string') return _a = {}, _a[\"is-\" + display] = true, _a;\n  if (Array.isArray(display)) return display.reduce(function (acc, display) {\n    var _a;\n\n    return tslib_1.__assign({}, acc, (_a = {}, _a[\"is-\" + display] = true, _a));\n  }, {});\n\n  if (typeof display === 'object') {\n    return Object.keys(display).reduce(function (acc, key) {\n      var _a, _b;\n\n      if (Array.isArray(display[key])) {\n        return display[key].reduce(function (acc, display) {\n          var _a, _b;\n\n          if (isDefault(display)) return tslib_1.__assign({}, acc, (_a = {}, _a[\"is-\" + key] = true, _a));\n          return tslib_1.__assign({}, acc, (_b = {}, _b[\"is-\" + key + \"-\" + display] = true, _b));\n        }, acc);\n      }\n\n      if (isDefault(display[key])) return tslib_1.__assign({}, acc, (_a = {}, _a[\"is-\" + key] = true, _a));\n      return isDisplay(key) && isAllPlatforms(display[key]) ? tslib_1.__assign({}, acc, (_b = {}, _b[\"is-\" + key + \"-\" + display[key]] = true, _b)) : acc;\n    }, {});\n  }\n\n  return {};\n};\n\nvar getHideModifiers = function getHideModifiers(platform) {\n  var _a;\n\n  if (typeof platform === 'boolean') return platform ? {\n    'is-hidden': true\n  } : {};\n  if (typeof platform === 'string') return isAllPlatforms(platform) ? (_a = {}, _a[\"is-hidden-\" + platform] = true, _a) : {};\n\n  if (Array.isArray(platform)) {\n    return platform.reduce(function (acc, platform) {\n      var _a;\n\n      return isAllPlatforms(platform) ? tslib_1.__assign({}, acc, (_a = {}, _a[\"is-hidden-\" + platform] = true, _a)) : acc;\n    }, {});\n  }\n\n  return {};\n};\n\nvar getAlignModifier = function getAlignModifier(modifier, helper) {\n  var _a;\n\n  return isAlign(modifier) ? (_a = {}, _a[helper + \"-\" + modifier] = true, _a) : {};\n};\n\nvar getColorModifier = function getColorModifier(modifier) {\n  var _a;\n\n  return modifier ? (_a = {}, _a[\"has-text-\" + modifier] = true, _a) : {};\n};\n\nfunction getHelpersModifiers(_a) {\n  var isDisplay = _a.isDisplay,\n      isHidden = _a.isHidden,\n      isPulled = _a.isPulled,\n      isClearfix = _a.isClearfix,\n      isOverlay = _a.isOverlay,\n      isMarginless = _a.isMarginless,\n      isPaddingless = _a.isPaddingless,\n      isUnselectable = _a.isUnselectable,\n      hasTextAlign = _a.hasTextAlign,\n      hasTextColor = _a.hasTextColor;\n  return tslib_1.__assign({}, getShowModifiers(isDisplay), getHideModifiers(isHidden), getAlignModifier(isPulled, 'is-pulled'), getAlignModifier(hasTextAlign, 'has-text'), getColorModifier(hasTextColor), {\n    'is-clearfix': isClearfix,\n    'is-marginless': isMarginless,\n    'is-overlay': isOverlay,\n    'is-paddingless': isPaddingless,\n    'is-unselectable': isUnselectable\n  });\n}\n\nfunction removeHelpersProps(props) {\n  var isDisplay = props.isDisplay,\n      isHidden = props.isHidden,\n      isClearfix = props.isClearfix,\n      isPulled = props.isPulled,\n      isOverlay = props.isOverlay,\n      isMarginless = props.isMarginless,\n      isPaddingless = props.isPaddingless,\n      isUnselectable = props.isUnselectable,\n      hasTextAlign = props.hasTextAlign,\n      hasTextColor = props.hasTextColor,\n      rest = tslib_1.__rest(props, [\"isDisplay\", \"isHidden\", \"isClearfix\", \"isPulled\", \"isOverlay\", \"isMarginless\", \"isPaddingless\", \"isUnselectable\", \"hasTextAlign\", \"hasTextColor\"]);\n\n  return rest;\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name;\n}\n\nfunction withHelpersModifiers(Component) {\n  var SFC = function SFC(props) {\n    var className = classNames(tslib_1.__assign({}, helpers_1.combineModifiers(props, getHelpersModifiers, getFullWidthModifiers)), props.className);\n    var rest = helpers_1.getHTMLProps(props, removeHelpersProps, removeFullWidthProps);\n    return className ? React.createElement(Component, tslib_1.__assign({}, rest, {\n      className: className\n    })) : React.createElement(Component, tslib_1.__assign({}, rest));\n  };\n\n  SFC.displayName = \"withHelpersModifiers(\" + getDisplayName(Component) + \")\";\n  return SFC;\n}\n\nexports.withHelpersModifiers = withHelpersModifiers;","map":null,"metadata":{},"sourceType":"script"}