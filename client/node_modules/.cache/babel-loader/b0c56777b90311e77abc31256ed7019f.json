{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Payments/PaymentForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { Field, Text, TextInput } from 'shipnow-mercurio';\nimport { Columns, Column } from 'bloomer';\nimport { withStore } from '../../hocs';\nimport { observer } from 'mobx-react';\nimport { translate } from '../../lib/Translator';\nimport { priceRegex } from '../../lib/Regex';\nimport { faCoins, faMoneyBill } from \"@fortawesome/free-solid-svg-icons\";\n\nvar PaymentForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentForm, _Component);\n\n  function PaymentForm(props) {\n    var _this;\n\n    _classCallCheck(this, PaymentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentForm).call(this, props));\n    _this.state = {\n      paymentType: '',\n      cashHalf: 0,\n      pointsHalf: 0,\n      points: 0,\n      validSplitPayment: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PaymentForm, [{\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"handlePaymentType\",\n    value: function handlePaymentType(type) {\n      this.setState({\n        paymentType: type,\n        cashHalf: 0,\n        pointsHalf: 0,\n        points: 0\n      });\n\n      if (type == 'cashAndPoints') {\n        this.props.onChange && this.props.onChange(null, null, 'cashHalf', null, this.getText('Los campos están vacíos'));\n      } else {\n        this.props.onChange && this.props.onChange(null, null, type, null, this.getText('El campo está vacío'));\n      }\n    }\n  }, {\n    key: \"validateCashPayment\",\n    value: function validateCashPayment(value) {\n      return priceRegex.test(value) && value <= this.props.totalAmount;\n    }\n  }, {\n    key: \"validatePointsPayment\",\n    value: function validatePointsPayment(value) {\n      return priceRegex.test(value) && value <= this.props.clientPoints && this.getConvertedPoints(value) <= this.props.totalAmount;\n    }\n  }, {\n    key: \"getConvertedPoints\",\n    value: function getConvertedPoints(points) {\n      return this.props.store.ui.getChange('changePurchase').convertPoints(points);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      var message = '';\n\n      if (name == 'pointsHalf' || name == 'cashHalf') {\n        if (this.state.cashHalf == 0 || this.state.pointsHalf == 0) {\n          message = this.getText('Los campos están vacíos');\n        }\n      }\n\n      if (name == 'cashHalf') {\n        this.setState({\n          cashHalf: value\n        });\n        var validCash = this.validateCashPayment(value);\n        var validPoints = this.validatePointsPayment(this.state.pointsHalf);\n        var doesNotExceedTotal = value * 1.0 + this.getConvertedPoints(this.state.pointsHalf) <= this.props.totalAmount;\n\n        if (!validCash) {\n          message = this.getText('El monto en efectivo ingresado no es válido');\n        }\n\n        if (!validPoints) {\n          message = this.getText('Los puntos ingresados no son válidos');\n        }\n\n        if (this.state.pointsHalf > this.props.clientPoints) {\n          message = this.getText('El cliente no cuenta con puntos suficientes');\n        }\n\n        if (validCash && validPoints && !doesNotExceedTotal) {\n          message = this.getText('El monto excede el total a pagar');\n        }\n\n        valid = validCash && validPoints && doesNotExceedTotal;\n      }\n\n      if (name == 'pointsHalf') {\n        this.setState({\n          pointsHalf: value\n        });\n\n        var _validCash = this.validateCashPayment(this.state.cashHalf);\n\n        var _validPoints = this.validatePointsPayment(value);\n\n        var _doesNotExceedTotal = this.state.cashHalf * 1.0 + this.getConvertedPoints(value) <= this.props.totalAmount;\n\n        if (!_validCash) {\n          message = this.getText('El monto en efectivo ingresado no es válido');\n        }\n\n        if (!_validPoints) {\n          message = this.getText('Los puntos ingresados no son válidos');\n        }\n\n        if (value > this.props.clientPoints) {\n          message = this.getText('El cliente no cuenta con puntos suficientes');\n        }\n\n        if (_validCash && _validPoints && !_doesNotExceedTotal) {\n          message = this.getText('El monto excede el total a pagar');\n        }\n\n        valid = _validCash && _validPoints && _doesNotExceedTotal;\n      }\n\n      if (name == 'points') {\n        this.setState({\n          points: value\n        });\n\n        if (value > this.props.clientPoints) {\n          message = this.getText('El cliente no cuenta con puntos suficientes');\n        }\n\n        if (this.getConvertedPoints(value) > this.props.totalAmount) {\n          message = this.getText('El monto excede el total a pagar');\n        }\n\n        if (!priceRegex.test(value)) {\n          message = this.getText('El monto ingresado no es válido');\n        }\n\n        if (value == '') {\n          message = this.getText('El campo está vacío');\n        }\n      }\n\n      if (name == 'cash') {\n        if (value > this.props.totalAmount) {\n          message = this.getText('El monto excede el total a pagar');\n        }\n\n        if (!priceRegex.test(value)) {\n          message = this.getText('El monto ingresado no es válido');\n        }\n\n        if (value == '') {\n          message = this.getText('El campo está vacío');\n        }\n      }\n\n      this.props.onChange && this.props.onChange(sender, value, name, valid, message);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var client = this.props.client;\n      console.log(this.props.clientPoints);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Tipo de pago'),\n        labelNote: this.getText('¿De qué manera desea realizar el pago?'),\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, client.canPayMixed && React.createElement(Text, {\n        className: \"ml-1 mt-2\",\n        weight: \"medium\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"loaned\",\n        onChange: function onChange() {\n          return _this2.handlePaymentType('loaned');\n        },\n        checked: this.state.paymentType == 'loaned',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), this.getText('Fiar')), React.createElement(Text, {\n        className: \"ml-1 mt-2\",\n        size: \"lg\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"cash\",\n        onChange: function onChange() {\n          return _this2.handlePaymentType('cash');\n        },\n        checked: this.state.paymentType == 'cash',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), this.getText('Efectivo')), React.createElement(Text, {\n        className: \"ml-1 mt-2\",\n        size: \"lg\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"points\",\n        onChange: function onChange() {\n          return _this2.handlePaymentType('points');\n        },\n        checked: this.state.paymentType == 'points',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), this.getText('Puntos')), client.canPayMixed && React.createElement(Text, {\n        className: \"ml-1 mt-2\",\n        size: \"lg\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"cashAndPoints\",\n        onChange: function onChange() {\n          return _this2.handlePaymentType('cashAndPoints');\n        },\n        checked: this.state.paymentType == 'cashAndPoints',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), this.getText('Efectivo y puntos'))), this.state.paymentType != '' && this.state.paymentType != 'loaned' && React.createElement(Field, {\n        className: \"mt-4\",\n        label: this.getText('Ingrese los montos'),\n        labelNote: this.getText('¿Cuánto va abonar?'),\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, this.state.paymentType == 'cash' && React.createElement(TextInput, {\n        className: \"is-fullwidth\",\n        icon: faMoneyBill,\n        name: \"cash\",\n        validate: function validate(value) {\n          return _this2.validateCashPayment(value);\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), this.state.paymentType == 'points' && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        className: \"is-fullwidth\",\n        icon: faCoins,\n        name: \"points\",\n        validate: function validate(value) {\n          return _this2.validatePointsPayment(value);\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(Text, {\n        className: \"has-text-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"\".concat(this.getText('(Equivale a: $'), \" \").concat(this.getConvertedPoints(this.state.points), \")\"))), this.state.paymentType == 'cashAndPoints' && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        isGapless: true,\n        isMarginless: true,\n        isVCentered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        className: \"is-fullwidth\",\n        icon: faMoneyBill,\n        validate: function validate(value) {\n          return _this2.validateCashPayment(value);\n        },\n        name: \"cashHalf\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(Column, {\n        isSize: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"has-text-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"+\")), React.createElement(Column, {\n        isSize: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        className: \"mt-2 is-fullwidth\",\n        icon: faCoins,\n        validate: function validate(value) {\n          return _this2.validatePointsPayment(value);\n        },\n        name: \"pointsHalf\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(Text, {\n        className: \"has-text-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"\".concat(this.getText('(Equivale a: $'), \" \").concat(this.getConvertedPoints(this.state.pointsHalf), \")\")))), React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"ml-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \" =  $ \".concat(this.getConvertedPoints(this.state.pointsHalf) + this.state.cashHalf * 1.0)))))));\n    }\n  }]);\n\n  return PaymentForm;\n}(Component)) || _class;\n\nPaymentForm.PropTypes = {\n  totalAmount: PropTypes.number,\n  clientPoints: PropTypes.number,\n  onChange: PropTypes.func,\n  client: PropTypes.object\n};\nPaymentForm.defaultProps = {\n  totalAmount: 0,\n  clientPoints: 0,\n  onChange: null,\n  client: null\n};\nexport default withStore(PaymentForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Payments/PaymentForm.jsx"],"names":["React","Component","PropTypes","Field","Text","TextInput","Columns","Column","withStore","observer","translate","priceRegex","faCoins","faMoneyBill","PaymentForm","props","state","paymentType","cashHalf","pointsHalf","points","validSplitPayment","handleChange","bind","text","store","ui","language","type","setState","onChange","getText","value","test","totalAmount","clientPoints","getConvertedPoints","getChange","convertPoints","sender","name","valid","message","validCash","validateCashPayment","validPoints","validatePointsPayment","doesNotExceedTotal","client","console","log","canPayMixed","handlePaymentType","number","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css'\n\nimport {\n  Field,\n  Text,\n  TextInput\n} from 'shipnow-mercurio';\n\nimport {\n  Columns,\n  Column\n} from 'bloomer';\n\nimport { withStore } from '../../hocs';\n\nimport { observer } from 'mobx-react';\n\nimport { translate } from '../../lib/Translator';\n\nimport { priceRegex } from '../../lib/Regex'\n\nimport { \n  faCoins,\n  faMoneyBill\n} from \"@fortawesome/free-solid-svg-icons\";\n\n@observer\nclass PaymentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentType: '',\n      cashHalf: 0,\n      pointsHalf: 0,\n      points: 0,\n      validSplitPayment: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  handlePaymentType( type ){\n    this.setState({\n      paymentType: type,\n      cashHalf: 0,\n      pointsHalf: 0,\n      points: 0,\n    })\n    if(type == 'cashAndPoints'){\n      this.props.onChange && this.props.onChange( null, null, 'cashHalf', null, this.getText('Los campos están vacíos') )    \n    }else{\n      this.props.onChange && this.props.onChange( null, null, type, null, this.getText('El campo está vacío') )    \n    }\n  }\n\n  validateCashPayment( value ){\n    return priceRegex.test(value) && value <= this.props.totalAmount\n  }\n\n  validatePointsPayment( value ){\n    return priceRegex.test(value) && value <= this.props.clientPoints && this.getConvertedPoints(value) <= this.props.totalAmount\n  }\n\n  getConvertedPoints(points){\n    return this.props.store.ui.getChange('changePurchase').convertPoints(points)\n  }\n\n  handleChange(sender, value, name, valid){\n    let message = ''\n    if(name =='pointsHalf' || name =='cashHalf'){\n      if(this.state.cashHalf == 0 || this.state.pointsHalf == 0){\n        message = this.getText('Los campos están vacíos')\n      }\n    }\n    if(name =='cashHalf'){\n      this.setState({\n        cashHalf: value\n      })\n      let validCash = this.validateCashPayment( value )\n      let validPoints = this.validatePointsPayment( this.state.pointsHalf )\n      let doesNotExceedTotal = (value*1.0 + this.getConvertedPoints(this.state.pointsHalf)) <= this.props.totalAmount\n\n      if(!validCash){\n        message = this.getText('El monto en efectivo ingresado no es válido')\n      }\n      if(!validPoints){\n        message = this.getText('Los puntos ingresados no son válidos')\n      }\n      if (this.state.pointsHalf > this.props.clientPoints){\n        message = this.getText('El cliente no cuenta con puntos suficientes')\n      }\n      if(validCash && validPoints && !doesNotExceedTotal){\n        message = this.getText('El monto excede el total a pagar')\n      }\n\n      valid = validCash && validPoints && doesNotExceedTotal\n    }\n    if(name =='pointsHalf'){\n      this.setState({\n        pointsHalf: value\n      })\n      let validCash = this.validateCashPayment( this.state.cashHalf )\n      let validPoints = this.validatePointsPayment( value )\n      let doesNotExceedTotal = (this.state.cashHalf*1.0 + this.getConvertedPoints(value)) <= this.props.totalAmount\n      if(!validCash){\n        message = this.getText('El monto en efectivo ingresado no es válido')\n      }\n      if(!validPoints){\n        message = this.getText('Los puntos ingresados no son válidos')\n      }\n      if (value > this.props.clientPoints){\n        message = this.getText('El cliente no cuenta con puntos suficientes')\n      }\n      if(validCash && validPoints && !doesNotExceedTotal){\n        message = this.getText('El monto excede el total a pagar')\n      }\n      valid = validCash && validPoints  && doesNotExceedTotal\n    }\n    if(name == 'points'){\n      this.setState({\n        points: value\n      })\n      if(value > this.props.clientPoints){\n        message = this.getText('El cliente no cuenta con puntos suficientes')\n      }\n      if(this.getConvertedPoints(value) > this.props.totalAmount){\n        message = this.getText('El monto excede el total a pagar')\n      }\n      if(!priceRegex.test(value)){\n        message = this.getText('El monto ingresado no es válido')\n      }\n      if(value == ''){\n        message = this.getText('El campo está vacío')\n      }\n    }\n    if(name == 'cash'){\n      if(value > this.props.totalAmount){\n        message = this.getText('El monto excede el total a pagar')\n      }\n      if(!priceRegex.test(value)){\n        message = this.getText('El monto ingresado no es válido')\n      }\n      if(value == ''){\n        message = this.getText('El campo está vacío')\n      }\n    }\n\n\n\n\n\n    this.props.onChange && this.props.onChange(sender, value, name, valid, message)\n\n  }\n\n  render() {\n    const { client } = this.props;\n    console.log(this.props.clientPoints)\n    return(\n      <React.Fragment>\n        <Field label={ this.getText('Tipo de pago') } labelNote={ this.getText('¿De qué manera desea realizar el pago?') } size=\"lg\">\n          { client.canPayMixed && \n            <Text className=\"ml-1 mt-2\" weight=\"medium\" size=\"lg\">\n              <input \n                className=\"ml-1 mr-1\" \n                type=\"radio\" \n                value=\"loaned\" \n                onChange={ () => (this.handlePaymentType('loaned')) }\n                checked={ this.state.paymentType == 'loaned'}/>\n              { this.getText('Fiar') }\n            </Text>}\n          <Text className=\"ml-1 mt-2\" size=\"lg\" weight=\"medium\">\n              <input \n                className=\"ml-1 mr-1\" \n                type=\"radio\" \n                value=\"cash\" \n                onChange={ () => (this.handlePaymentType('cash')) }\n                checked={ this.state.paymentType == 'cash'} />\n              { this.getText('Efectivo') }\n          </Text>\n          <Text className=\"ml-1 mt-2\" size=\"lg\" weight=\"medium\">\n              <input \n                className=\"ml-1 mr-1\" \n                type=\"radio\" \n                value=\"points\" \n                onChange={ () => (this.handlePaymentType('points')) }\n                checked={ this.state.paymentType == 'points'} />\n              { this.getText('Puntos') }\n          </Text>\n          { client.canPayMixed &&\n            <Text className=\"ml-1 mt-2\" size=\"lg\" weight=\"medium\">\n              <input \n                className=\"ml-1 mr-1\" \n                type=\"radio\" \n                value=\"cashAndPoints\" \n                onChange={ () => (this.handlePaymentType('cashAndPoints')) }\n                checked={ this.state.paymentType == 'cashAndPoints'}/>\n\n              { this.getText('Efectivo y puntos') }\n            </Text>}\n        </Field>\n        {this.state.paymentType != '' && this.state.paymentType != 'loaned' &&\n        <Field className=\"mt-4\" label={ this.getText('Ingrese los montos') } labelNote={ this.getText('¿Cuánto va abonar?') } size=\"lg\">\n\n         {this.state.paymentType == 'cash' && \n         <TextInput className=\"is-fullwidth\" icon={ faMoneyBill } name=\"cash\" validate={ (value) => this.validateCashPayment(value) } onChange={ this.handleChange }/>}\n\n         {this.state.paymentType == 'points' && \n         <React.Fragment>\n          <TextInput className=\"is-fullwidth\" icon={ faCoins } name=\"points\" validate={ (value) => this.validatePointsPayment(value) } onChange={ this.handleChange }/>\n          <Text className=\"has-text-centered\" >{ `${ this.getText('(Equivale a: $') } ${this.getConvertedPoints(this.state.points)})` }</Text>\n         </React.Fragment>}\n         \n         {this.state.paymentType == 'cashAndPoints' && \n          <React.Fragment>\n            <Columns isGapless isMarginless isVCentered>\n              <Column isSize={ 5 }>\n                <TextInput className=\"is-fullwidth\" icon={ faMoneyBill } validate={ (value) => this.validateCashPayment(value) } name=\"cashHalf\" onChange={ this.handleChange }/>\n              </Column>\n              <Column isSize={ 1 }>\n                <Text className=\"has-text-centered\">+</Text>\n              </Column>\n              <Column isSize={ 5 }>\n              <React.Fragment>\n                <TextInput className=\"mt-2 is-fullwidth\" icon={ faCoins } validate={ (value) => this.validatePointsPayment(value) } name=\"pointsHalf\" onChange={ this.handleChange }/>\n                <Text className=\"has-text-centered\" >{ `${ this.getText('(Equivale a: $') } ${this.getConvertedPoints(this.state.pointsHalf)})` }</Text>\n              </React.Fragment>\n              </Column>\n              <Column>\n                <Text className=\"ml-1\">{ ` =  $ ${this.getConvertedPoints(this.state.pointsHalf) + this.state.cashHalf*1.0}` }</Text>\n              </Column>\n            </Columns>\n          </React.Fragment>}\n        </Field>}\n      </React.Fragment> )\n  }\n}\n\nPaymentForm.PropTypes = {\n  totalAmount: PropTypes.number,\n  clientPoints: PropTypes.number,\n  onChange: PropTypes.func,\n  client: PropTypes.object,\n}\n\nPaymentForm.defaultProps = {\n  totalAmount: 0,\n  clientPoints: 0,\n  onChange: null,\n  client: null,\n}\n\nexport default withStore(PaymentForm);"]},"metadata":{},"sourceType":"module"}