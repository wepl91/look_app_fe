{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Appointments/AppointmentsForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nimport { Field, Select, SelectItem, DateTimePicker, Text, Panel } from 'shipnow-mercurio';\nimport { Checkbox } from '../../components/Checkbox';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStore } from '../../hocs';\nimport { observer } from 'mobx-react';\nimport startCase from 'lodash/startCase';\nimport { horarios } from '../../lib/Mocks';\nimport moment from 'moment';\nimport { translate } from '../../lib/Translator';\nimport { ClientSuggest, ProfessionalSuggest } from '../../components/Suggest';\n\nvar AppointmentsForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentsForm, _Component);\n\n  function AppointmentsForm(props) {\n    var _this;\n\n    _classCallCheck(this, AppointmentsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppointmentsForm).call(this, props));\n    _this.handleProfessional = _this.handleProfessional.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleServices = _this.handleServices.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClient = _this.handleClient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBranch = _this.handleBranch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate = _this.handleDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHour = _this.handleHour.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      branch: _this.props.appointment ? _this.props.appointment.branch : null,\n      professional: _this.props.appointment ? _this.props.appointment.professional : 'null',\n      professionals: _this.props.appointment ? _this.props.appointment.branch : null,\n      clients: null,\n      client: _this.props.appointment ? _this.props.appointment.client : 'null',\n      date: _this.props.appointment ? _this.props.appointment.dayHour : moment(),\n      selectedServices: _this.props.appointment ? _this.props.appointment.servicesIds : [],\n      subtotal: _this.props.appointment ? _this.props.appointment.totalPrice : 0\n    };\n    return _this;\n  }\n\n  _createClass(AppointmentsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        branches: this.props.store.branches.search({}, 'branches-appointment-list-view'),\n        clients: !this.props.edit ? this.props.store.clients.search({}, 'clients-appointment-list-view', true) : null\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.selectedServices !== prevState.selectedServices) {\n        this.setState({\n          subtotal: this.getSubtotal()\n        });\n      }\n\n      if (this.state.professional !== prevState.professional) {\n        this.setState({\n          selectedServices: []\n        });\n      }\n    }\n  }, {\n    key: \"handleClient\",\n    value: function handleClient(value) {\n      if (value != 'null') {\n        this.props.onChange && this.props.onChange('client', value.id);\n      }\n    }\n  }, {\n    key: \"handleHour\",\n    value: function handleHour(sender, value, name) {\n      this.props.onChange && this.props.onChange('hour', value);\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(sender, value, name) {\n      this.setState({\n        date: value\n      });\n      this.props.onChange && this.props.onChange('date', value);\n    }\n  }, {\n    key: \"handleBranch\",\n    value: function handleBranch(sender, value, name) {\n      var branch = this.state.branches.toArray().find(function (branch) {\n        return branch.id == value;\n      });\n      this.setState({\n        professional: null,\n        professionals: branch.professionals,\n        branch: branch\n      });\n      this.props.onChange && this.props.onChange('branch', value);\n    }\n  }, {\n    key: \"handleProfessional\",\n    value: function handleProfessional(value) {\n      var appointment = this.props.appointment;\n\n      if (appointment.professional && value != appointment.professional.id) {\n        this.props.appointment.services = [];\n      }\n\n      if (value == 'null' || !value) {\n        this.setState({\n          professional: null\n        });\n        this.props.onChange && this.props.onChange('professional', null);\n      } else {\n        this.setState({\n          professional: value\n        });\n        this.props.onChange && this.props.onChange('professional', value.id);\n      }\n    }\n  }, {\n    key: \"handleServices\",\n    value: function handleServices(serviceId, servicePrice) {\n      var newArray = Array.from(this.state.selectedServices);\n\n      if (newArray.includes(serviceId)) {\n        newArray = newArray.filter(function (item) {\n          return item !== serviceId;\n        });\n      } else {\n        newArray.push(serviceId);\n      }\n\n      this.setState({\n        selectedServices: newArray\n      });\n      this.props.onChange && this.props.onChange('services', newArray);\n    }\n  }, {\n    key: \"getSubtotal\",\n    value: function getSubtotal() {\n      var _this2 = this;\n\n      var ret = 0;\n      this.state.branch.allServices.forEach(function (service) {\n        if (_this2.state.selectedServices.includes(service.id)) {\n          ret = ret + service.price;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"getBranchesList\",\n    value: function getBranchesList() {\n      var list = [];\n      this.state.branches.toArray().forEach(function (branch) {\n        list.push(React.createElement(SelectItem, {\n          value: branch.id,\n          key: branch.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"\".concat(startCase(branch.name) || branch.cookedAddress)));\n      });\n      return list;\n    }\n  }, {\n    key: \"isServiceInAppointment\",\n    value: function isServiceInAppointment(serviceID) {\n      var appointment = this.props.appointment;\n      var ret = false;\n\n      if (!appointment) {\n        return ret;\n      }\n\n      appointment.services.forEach(function (service) {\n        if (service.id == serviceID) {\n          ret = true;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"hashString\",\n    value: function hashString(received) {\n      var hash = 0,\n          i,\n          chr;\n      if (received.length === 0) return hash;\n\n      for (i = 0; i < received.length; i++) {\n        chr = received.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return hash;\n    }\n  }, {\n    key: \"renderServices\",\n    value: function renderServices() {\n      var _this3 = this;\n\n      // El randomizer lo que hace es cambiar la key para que React vea que ocurrió un cambio en el checkbox. No usé Math.Random() por que rompía el Checkbox\n      var professional = this.state.professional;\n      var services = professional && professional != 'null' ? professional.services : this.state.branch && this.state.branch.allServices;\n      var randomizer = professional && professional != 'null' ? this.hashString(professional.name) : 1000;\n      if (!services) return null;\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Cuál de nuestros servicios requerís?'),\n        labelNote: this.getText('Seleccioná un servicio'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, services.length > 0 ? services.map(function (service) {\n        return React.createElement(Checkbox, {\n          key: service.id + randomizer,\n          className: \"mt-2\",\n          checked: _this3.isServiceInAppointment(service.id),\n          onCheck: function onCheck() {\n            return _this3.handleServices(service.id, service.price);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, \"\".concat(startCase(service.name), \" - $\").concat(service.price));\n      }) : React.createElement(Text, {\n        size: \"md\",\n        weight: \"medium\",\n        className: \"ml-2 mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.getText('No hay servicios existentes para ofrecer.')), React.createElement(Text, {\n        className: \"has-text-centered ml-2\",\n        weight: \"medium\",\n        color: \"primaryDark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        id: \"subtotalLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), \"Subtotal: $\", this.state.subtotal));\n    }\n  }, {\n    key: \"renderProfessionals\",\n    value: function renderProfessionals() {\n      var isDisabled = !this.state.branch;\n      var canNotEdit = this.props.canNotEdit;\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Por quién querés ser atendido?'),\n        labelNote: this.getText('Seleccioná un profesional'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(ProfessionalSuggest, {\n        key: this.state.branch,\n        disabled: isDisabled || canNotEdit,\n        onChange: this.handleProfessional,\n        professionals: this.state.branch ? this.state.branch.professionals : null,\n        value: this.state.professional,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderClients\",\n    value: function renderClients() {\n      var _this$props = this.props,\n          appointment = _this$props.appointment,\n          edit = _this$props.edit,\n          canNotEdit = _this$props.canNotEdit;\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Quién quiere ser atendido?'),\n        labelNote: this.getText('Seleccioná un cliente'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(ClientSuggest, {\n        disabled: edit || canNotEdit,\n        value: appointment ? appointment.client : null,\n        onChange: this.handleClient,\n        clients: this.state.clients && this.state.clients.toArray(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderBranches\",\n    value: function renderBranches() {\n      var canNotEdit = this.props.canNotEdit;\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿A cual de nuestras sucursales querés venir?'),\n        labelNote: this.getText('Seleccioná una sucursal'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(Select, {\n        disabled: canNotEdit,\n        key: this.state.branches,\n        placeholder: this.getText('Sucursales'),\n        borderless: true,\n        icon: faChevronDown,\n        onChange: this.handleBranch,\n        value: this.state.branch ? this.state.branch.id : null,\n        options: this.getBranchesList(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderDatePicker\",\n    value: function renderDatePicker() {\n      if (!this.props.withDate) return null;\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Que día querés venir?'),\n        labelNote: this.getText('Seleccioná una fecha'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        className: \"is-fullwidth\",\n        key: this.state.date,\n        value: this.state.date,\n        onChange: this.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), this.state.date.isoWeekday() == 7 && this.renderAdvise());\n    }\n  }, {\n    key: \"renderHourPicker\",\n    value: function renderHourPicker() {\n      var _this$props2 = this.props,\n          appointment = _this$props2.appointment,\n          canNotEdit = _this$props2.canNotEdit;\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿A que hora querés venir?'),\n        labelNote: this.getText('Seleccioná un horario'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Select, {\n        disabled: canNotEdit,\n        key: this.state,\n        maxHeight: \"120px\",\n        placeholder: this.getText('Horarios'),\n        borderless: true,\n        icon: faChevronDown,\n        onChange: this.handleHour,\n        value: appointment && appointment.beginningTime,\n        options: horarios(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderAdvise\",\n    value: function renderAdvise() {\n      return React.createElement(Panel, {\n        className: \"has-text-centered mr-3 mt-1\",\n        invert: true,\n        color: \"error\",\n        style: {\n          padding: '2px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(Text, {\n        size: \"sm\",\n        weight: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.getText('La fecha seleccionada es un día no laboral.')));\n    }\n  }, {\n    key: \"renderSkeleton\",\n    value: function renderSkeleton() {\n      var _React$createElement;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.props.withDate && React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Que día querés venir?'),\n        labelNote: this.getText('Seleccioná uva fecha'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        className: \"is-fullwidth\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Quién quiere ser atendido?'),\n        labelNote: this.getText('Seleccioná un cliente'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Select, {\n        disabled: true,\n        placeholder: this.getText('Clientes'),\n        borderless: true,\n        icon: faChevronDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿A cual de nuestras sucursales querés venir?'),\n        labelNote: this.getText('Seleccioná una sucursal'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Select, (_React$createElement = {\n        disabled: true,\n        placeholder: this.getText('Sucursales'),\n        borderless: true,\n        icon: faChevronDown\n      }, _defineProperty(_React$createElement, \"disabled\", true), _defineProperty(_React$createElement, \"loading\", true), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Por quién querés ser atendido?'),\n        labelNote: this.getText('Seleccioná un profesional'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Profesionales\",\n        borderless: true,\n        icon: faChevronDown,\n        disabled: true,\n        loading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), this.props.edit && React.createElement(Field, {\n        className: \"ml-5\",\n        label: this.getText('¿Cual de nuestros servicios requeris?'),\n        labelNote: this.getText('Seleccioná un servicio'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        className: \"pt-1\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"...\"), React.createElement(Checkbox, {\n        className: \"pt-1\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"...\"), React.createElement(Checkbox, {\n        className: \"pt-1\",\n        checked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"...\")), React.createElement(Field, {\n        className: \"ml-5 mt-2\",\n        label: this.getText('¿A que hora querés venir?'),\n        labelNote: this.getText('Seleccioná un horario'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Select, {\n        maxHeight: \"120px\",\n        placeholder: this.getText('Horarios'),\n        borderless: true,\n        icon: faChevronDown,\n        disabled: true,\n        loading: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n      var clientsLoaded = !this.props.edit ? this.state.clients && this.state.clients.isOk() : true;\n\n      if (!isBranchesLoaded || !clientsLoaded) {\n        return this.renderSkeleton();\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, this.renderDatePicker(), this.renderClients(), this.renderBranches(), this.renderProfessionals(), this.renderServices(), this.renderHourPicker());\n    }\n  }]);\n\n  return AppointmentsForm;\n}(Component)) || _class;\n\nAppointmentsForm.PropTypes = {\n  withDate: PropTypes.bool,\n  appointment: PropTypes.object,\n  edit: PropTypes.bool,\n  canNotEdit: PropTypes.bool\n};\nAppointmentsForm.defaultProps = {\n  withDate: false,\n  appointment: null,\n  edit: false,\n  canNotEdit: false\n};\nexport default withStore(AppointmentsForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Appointments/AppointmentsForm.jsx"],"names":["React","Component","PropTypes","Field","Select","SelectItem","DateTimePicker","Text","Panel","Checkbox","faChevronDown","withStore","observer","startCase","horarios","moment","translate","ClientSuggest","ProfessionalSuggest","AppointmentsForm","props","handleProfessional","bind","handleServices","handleClient","handleBranch","handleDate","handleHour","state","branch","appointment","professional","professionals","clients","client","date","dayHour","selectedServices","servicesIds","subtotal","totalPrice","setState","branches","store","search","edit","prevProps","prevState","getSubtotal","value","onChange","id","sender","name","toArray","find","services","serviceId","servicePrice","newArray","Array","from","includes","filter","item","push","ret","allServices","forEach","service","price","list","cookedAddress","serviceID","received","hash","i","chr","length","charCodeAt","randomizer","hashString","getText","map","isServiceInAppointment","isDisabled","canNotEdit","getBranchesList","withDate","isoWeekday","renderAdvise","beginningTime","padding","text","ui","language","isBranchesLoaded","isOk","clientsLoaded","renderSkeleton","renderDatePicker","renderClients","renderBranches","renderProfessionals","renderServices","renderHourPicker","bool","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css'\n\nimport {\n  Field,\n  Select,\n  SelectItem,\n  DateTimePicker,\n  Text,\n  Panel,\n} from 'shipnow-mercurio';\n\nimport { Checkbox } from '../../components/Checkbox'\n\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { withStore } from '../../hocs';\n\nimport { observer } from 'mobx-react';\n\nimport startCase from 'lodash/startCase';\n\nimport { horarios } from '../../lib/Mocks';\n\nimport moment from 'moment';\n\nimport { translate } from '../../lib/Translator';\n\nimport { ClientSuggest, ProfessionalSuggest } from '../../components/Suggest';\n\n@observer\nclass AppointmentsForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleProfessional = this.handleProfessional.bind(this);\n    this.handleServices     = this.handleServices.bind(this);\n    this.handleClient       = this.handleClient.bind(this);\n    this.handleBranch       = this.handleBranch.bind(this); \n    this.handleDate         = this.handleDate.bind(this);\n    this.handleHour         = this.handleHour.bind(this);\n\n    this.state = {\n      branch: this.props.appointment ? this.props.appointment.branch : null,\n      professional: this.props.appointment ? this.props.appointment.professional : 'null',\n      professionals: this.props.appointment ? this.props.appointment.branch : null,\n      clients: null,\n      client: this.props.appointment ? this.props.appointment.client : 'null',\n      date: this.props.appointment ? this.props.appointment.dayHour : moment(),\n      selectedServices: this.props.appointment ? this.props.appointment.servicesIds : [],\n      subtotal: this.props.appointment ? this.props.appointment.totalPrice : 0,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      branches: this.props.store.branches.search({}, 'branches-appointment-list-view'),\n      clients: !this.props.edit ? this.props.store.clients.search({}, 'clients-appointment-list-view', true) : null,\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.selectedServices !== prevState.selectedServices) {\n      this.setState({subtotal: this.getSubtotal()})\n    }\n    if (this.state.professional !== prevState.professional) {\n      this.setState({selectedServices: []})\n    }\n  }\n\n  handleClient( value ) {\n    if (value != 'null') {\n      this.props.onChange && this.props.onChange('client', value.id);\n    }\n  } \n\n  handleHour( sender, value, name ) {\n    this.props.onChange && this.props.onChange('hour', value);\n  }\n\n  handleDate( sender, value, name ) {\n    this.setState({\n      date: value\n    })\n    this.props.onChange && this.props.onChange('date', value);\n  }\n\n  handleBranch( sender, value, name ) {\n    const branch = this.state.branches.toArray().find( branch => {\n      return branch.id == value;\n    });\n    this.setState({\n      professional: null,\n      professionals: branch.professionals,\n      branch: branch,\n    });\n    this.props.onChange && this.props.onChange('branch', value);\n  }\n\n  handleProfessional( value ) {\n    const { appointment } = this.props;\n    if( appointment.professional && value != appointment.professional.id){\n        this.props.appointment.services = []\n    }\n    if (value == 'null' || !value) {\n      this.setState({\n        professional: null,\n      });\n      this.props.onChange && this.props.onChange('professional', null);\n    }\n    else {\n      this.setState({\n        professional: value,\n      });\n      this.props.onChange && this.props.onChange('professional', value.id);\n    }\n  }\n\n  handleServices( serviceId, servicePrice ) {\n    let newArray = Array.from(this.state.selectedServices)\n    if(newArray.includes(serviceId)){\n      newArray = newArray.filter(item => item !== serviceId)\n    }else{\n      newArray.push(serviceId)\n    }\n    this.setState({\n      selectedServices: newArray,\n    });\n    this.props.onChange && this.props.onChange('services', newArray)\n  }\n\n  getSubtotal() {\n    let ret = 0;\n    this.state.branch.allServices.forEach( service => {\n      if (this.state.selectedServices.includes(service.id)) {\n        ret = ret + service.price\n      }\n    });\n    return ret;\n  }\n\n  getBranchesList() {\n    const list = [];\n    this.state.branches.toArray().forEach( branch => {\n      list.push(\n        <SelectItem value={ branch.id } key={ branch.id }>\n          { `${ startCase(branch.name) || branch.cookedAddress }` }\n        </SelectItem>);\n    });\n\n    return list;\n  }\n\n  isServiceInAppointment( serviceID ) {\n    const { appointment } = this.props;\n    let ret = false;\n    if (!appointment) {\n      return ret;\n    }\n    appointment.services.forEach( service => {\n      if (service.id == serviceID) {\n        ret = true;\n      }\n    });\n    return ret;\n  }\n\n  hashString( received ){\n    var hash = 0, i, chr;\n    if (received.length === 0) return hash;\n    for (i = 0; i < received.length; i++) {\n      chr   = received.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  }\n  \n  renderServices() {\n    // El randomizer lo que hace es cambiar la key para que React vea que ocurrió un cambio en el checkbox. No usé Math.Random() por que rompía el Checkbox\n    const { professional } = this.state;\n    const services = professional && professional != 'null' ?  professional.services : this.state.branch && this.state.branch.allServices;\n    let randomizer = professional && professional != 'null' ?  this.hashString(professional.name) : 1000;\n\n    if (!services) return null;\n\n    return(\n      <Field className=\"ml-5\" label={ this.getText('¿Cuál de nuestros servicios requerís?') } labelNote={ this.getText('Seleccioná un servicio') }>\n        { services.length > 0 ? \n            services.map( service => ( \n              <Checkbox \n                key={ service.id + randomizer } \n                className=\"mt-2\" checked={ this.isServiceInAppointment(service.id) } \n                onCheck={() => this.handleServices(service.id, service.price)}>\n                {`${ startCase(service.name) } - $${ service.price }`}\n              </Checkbox> )) : \n          <Text size=\"md\" weight=\"medium\" className=\"ml-2 mt-1\">{ this.getText('No hay servicios existentes para ofrecer.') }</Text> }\n        <Text className=\"has-text-centered ml-2\" weight=\"medium\" color=\"primaryDark\"><hr id=\"subtotalLine\"/>Subtotal: ${this.state.subtotal}</Text>\n      </Field> )   \n  }\n\n  renderProfessionals() {\n    const isDisabled = !this.state.branch;\n    const { canNotEdit } = this.props;\n    return(\n      <Field className=\"ml-5\" label={ this.getText('¿Por quién querés ser atendido?') } labelNote={ this.getText('Seleccioná un profesional') }>\n          <ProfessionalSuggest \n            key={ this.state.branch } \n            disabled={ isDisabled || canNotEdit} \n            onChange={ this.handleProfessional }\n            professionals={ this.state.branch ? this.state.branch.professionals : null} \n            value={ this.state.professional } />\n      </Field>)\n  }\n\n  renderClients() {\n    const { appointment, edit, canNotEdit } = this.props;\n    return(\n      <Field className=\"ml-5\" label={ this.getText('¿Quién quiere ser atendido?') } labelNote={ this.getText('Seleccioná un cliente') }>\n        <ClientSuggest \n          disabled={ edit || canNotEdit } \n          value={ appointment ? appointment.client : null } \n          onChange={ this.handleClient } \n          clients={ this.state.clients && this.state.clients.toArray() }/>\n      </Field>);\n  }\n\n  renderBranches() {\n    const {  canNotEdit } = this.props;\n    return(\n      <Field className=\"ml-5\" label={ this.getText('¿A cual de nuestras sucursales querés venir?') } labelNote={ this.getText('Seleccioná una sucursal') }>\n        <Select\n          disabled={ canNotEdit }\n          key={ this.state.branches }\n          placeholder={ this.getText('Sucursales') } \n          borderless \n          icon={ faChevronDown } \n          onChange={ this.handleBranch }\n          value={ this.state.branch ? this.state.branch.id : null }\n          options={ this.getBranchesList() } />\n      </Field>)\n  }\n\n  renderDatePicker() {\n    if (!this.props.withDate) return null;\n    return(\n      <Field className=\"ml-5\" label={ this.getText('¿Que día querés venir?') } labelNote={ this.getText('Seleccioná una fecha') }>\n        <DateTimePicker \n          className=\"is-fullwidth\"\n          key={ this.state.date } \n          value={ this.state.date } \n          onChange={ this.handleDate }/>\n        { this.state.date.isoWeekday() == 7 && this.renderAdvise() }\n      </Field>)\n  }\n\n  renderHourPicker() {\n    const { appointment, canNotEdit } = this.props;\n    return(\n      <Field className=\"ml-5\" label={ this.getText('¿A que hora querés venir?') } labelNote={ this.getText('Seleccioná un horario') }>\n        <Select \n          disabled={ canNotEdit }\n          key={ this.state }\n          maxHeight=\"120px\" \n          placeholder={ this.getText('Horarios') } \n          borderless \n          icon={ faChevronDown }\n          onChange={ this.handleHour } \n          value={ appointment && appointment.beginningTime }\n          options={ horarios() }/>\n      </Field>)\n  }\n\n  renderAdvise() {\n    return(\n      <Panel className=\"has-text-centered mr-3 mt-1\" invert color=\"error\" style={{ padding: '2px' }}>\n        <Text size=\"sm\" weight=\"medium\">{ this.getText('La fecha seleccionada es un día no laboral.') }</Text>\n      </Panel> )\n  }\n\n  renderSkeleton() {\n    return(\n    <React.Fragment>\n      { this.props.withDate &&\n        <Field className=\"ml-5\" label={ this.getText('¿Que día querés venir?') } labelNote={ this.getText('Seleccioná uva fecha') }>\n          <DateTimePicker className=\"is-fullwidth\" disabled/>\n        </Field> }\n      <Field className=\"ml-5\" label={ this.getText('¿Quién quiere ser atendido?') } labelNote={ this.getText('Seleccioná un cliente') }>\n        <Select \n          disabled\n          placeholder={ this.getText('Clientes') } \n          borderless \n          icon={ faChevronDown } />\n      </Field>\n      <Field className=\"ml-5\" label={ this.getText('¿A cual de nuestras sucursales querés venir?') } labelNote={ this.getText('Seleccioná una sucursal') }>\n        <Select \n          disabled\n          placeholder={ this.getText('Sucursales') } \n          borderless \n          icon={ faChevronDown } \n          disabled\n          loading />\n      </Field>\n      <Field className=\"ml-5\" label={ this.getText('¿Por quién querés ser atendido?') } labelNote={ this.getText('Seleccioná un profesional') }>\n        <Select \n          placeholder=\"Profesionales\" \n          borderless \n          icon={ faChevronDown } \n          disabled\n          loading />\n      </Field>\n      { this.props.edit && \n        <Field className=\"ml-5\" label={ this.getText('¿Cual de nuestros servicios requeris?') } labelNote={ this.getText('Seleccioná un servicio') }>\n          <Checkbox className=\"pt-1\" checked={ false } >...</Checkbox>\n          <Checkbox className=\"pt-1\" checked={ false } >...</Checkbox>\n          <Checkbox className=\"pt-1\" checked={ false } >...</Checkbox>\n        </Field> }\n      <Field className=\"ml-5 mt-2\" label={ this.getText('¿A que hora querés venir?') } labelNote={ this.getText('Seleccioná un horario') }>\n        <Select \n          maxHeight=\"120px\" \n          placeholder={ this.getText('Horarios') } \n          borderless \n          icon={ faChevronDown }\n          disabled\n          loading/>\n      </Field>\n    </React.Fragment>)\n  }\n\n  getText(text) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  render() {\n    const isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n    const clientsLoaded = !this.props.edit ? this.state.clients && this.state.clients.isOk() : true;\n    \n    if (!isBranchesLoaded || !clientsLoaded) {\n      return this.renderSkeleton();\n    }\n    \n    return(\n      <React.Fragment>\n        { this.renderDatePicker()    }\n        { this.renderClients()       }\n        { this.renderBranches()      }\n        { this.renderProfessionals() }\n        { this.renderServices()      } \n        { this.renderHourPicker()    }\n      </React.Fragment> )\n  }\n}\n\nAppointmentsForm.PropTypes = {\n  withDate: PropTypes.bool,\n  appointment: PropTypes.object,\n  edit: PropTypes.bool,\n  canNotEdit: PropTypes.bool,\n}\n\nAppointmentsForm.defaultProps = {\n  withDate: false,\n  appointment: null,\n  edit: false,\n  canNotEdit: false,\n}\n\nexport default withStore(AppointmentsForm);"]},"metadata":{},"sourceType":"module"}