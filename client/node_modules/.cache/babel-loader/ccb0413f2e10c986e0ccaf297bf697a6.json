{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { Model } from '../lib';\nimport { action, computed } from 'mobx';\nimport startCase from 'lodash/startCase';\nimport uniq from 'lodash/uniq';\nimport moment from 'moment';\nimport { Service, User, Professional } from '../models';\nimport { ServicesStore, UsersStore, ProfessionalsStore } from '../stores';\nvar Branch = (_class =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Branch, _Model);\n\n  function Branch(attributes, store) {\n    _classCallCheck(this, Branch);\n\n    var defaultAttributes = {\n      'location': '',\n      'street_number': '',\n      'street_name': '',\n      'name': '',\n      'status': 'ACTIVE',\n      'professionals': [],\n      'users': []\n    };\n    var attrs = Object.assign(defaultAttributes, attributes);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Branch).call(this, attrs, store));\n  }\n\n  _createClass(Branch, [{\n    key: \"afterSetData\",\n    value: function afterSetData() {\n      if (this.professionals) {\n        var modeledProfessionals = [];\n        this.professionals.forEach(function (professional) {\n          modeledProfessionals.push(new Professional(professional, ProfessionalsStore));\n        });\n        this.professionals = modeledProfessionals;\n      }\n\n      if (this.users) {\n        var modeledUsers = [];\n        this.users.forEach(function (user) {\n          modeledUsers.push(new User(user, UsersStore));\n        });\n        this.users = modeledUsers;\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.status = 'ACTIVE';\n      return this.clean().save();\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.status = 'INACTIVE';\n      return this.clean().save();\n    }\n  }, {\n    key: \"filterProfessionals\",\n    value: function filterProfessionals(day) {\n      var ret = [];\n      this.professionals.map(function (professional) {\n        if (day.toUpperCase() in professional.rawWorkingDays) {\n          ret.push(professional);\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"openHours\",\n    value: function openHours(day) {\n      if (this.professionals.length == 0) {\n        return null;\n      }\n\n      var ret = [];\n      var earliest = [];\n      var latest = [];\n      this.professionals.map(function (professional) {\n        if (day.toUpperCase() in professional.rawWorkingDays) {\n          var hours = professional.filteredWorkingHours(day);\n          earliest.push(hours[0]);\n          latest.push(hours[hours.length - 1]);\n        }\n      });\n      var earliestMoments = earliest.map(function (d) {\n        return moment(d.toString(), \"LT\");\n      });\n      var latestMoments = latest.map(function (d) {\n        return moment(d.toString(), \"LT\");\n      });\n      var currDate = moment.min(earliestMoments).startOf('minute').subtract(60, 'minutes');\n      var lastDate = moment.max(latestMoments).startOf('minute').add(60, 'minutes');\n\n      while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n        ret.push(currDate.clone().format('HH:mm'));\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var cleanedProfessional = [];\n      var cleanedUsers = [];\n      this.professionals.forEach(function (professional) {\n        if (professional instanceof Object) {\n          cleanedProfessional.push({\n            id: professional.id\n          });\n        } else {\n          cleanedProfessional.push({\n            id: professional\n          });\n        }\n      });\n      this.users.forEach(function (user) {\n        if (user instanceof Object) {\n          cleanedUsers.push({\n            id: user.id\n          });\n        } else {\n          cleanedUsers.push({\n            id: user\n          });\n        }\n      });\n      this.professionals = cleanedProfessional;\n      this.users = cleanedUsers;\n      return this;\n    }\n  }, {\n    key: \"cookedStatus\",\n    get: function get() {\n      var statuses = {\n        'ACTIVE': 'Activo',\n        'INACTIVE': 'Inactivo'\n      };\n      return statuses[this.status.name || this.status];\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.status.name == 'ACTIVE' || this.status == 'ACTIVE';\n    }\n  }, {\n    key: \"cookedAddress\",\n    get: function get() {\n      return \"\".concat(startCase(this.street_name), \" \").concat(this.street_number, \", \").concat(startCase(this.location));\n    }\n  }, {\n    key: \"allServices\",\n    get: function get() {\n      var services = [];\n      this.professionals.forEach(function (professional) {\n        if (professional.isActive) {\n          professional.services.forEach(function (service) {\n            if (!services.includes(service)) {\n              services.push(new Service(service, ServicesStore));\n            }\n          });\n        }\n      });\n      return Object.values(services.reduce(function (acc, cur) {\n        return Object.assign(acc, _defineProperty({}, cur.id, cur));\n      }, {}));\n    }\n  }]);\n\n  return Branch;\n}(Model), (_applyDecoratedDescriptor(_class.prototype, \"cookedStatus\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cookedStatus\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"activate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"activate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deactivate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"deactivate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"filterProfessionals\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"filterProfessionals\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"openHours\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"openHours\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isActive\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isActive\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"cookedAddress\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cookedAddress\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"allServices\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"allServices\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clean\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clean\"), _class.prototype)), _class);\nexport { Branch as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/models/Branch.js"],"names":["Model","action","computed","startCase","uniq","moment","Service","User","Professional","ServicesStore","UsersStore","ProfessionalsStore","Branch","attributes","store","defaultAttributes","attrs","Object","assign","professionals","modeledProfessionals","forEach","professional","push","users","modeledUsers","user","status","clean","save","day","ret","map","toUpperCase","rawWorkingDays","length","earliest","latest","hours","filteredWorkingHours","earliestMoments","d","toString","latestMoments","currDate","min","startOf","subtract","lastDate","max","add","diff","clone","format","cleanedProfessional","cleanedUsers","id","statuses","name","street_name","street_number","location","services","isActive","service","includes","values","reduce","acc","cur"],"mappings":"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","sourcesContent":["import { Model } from '../lib';\nimport {\n  action,\n  computed,\n} from 'mobx'\n\nimport startCase from 'lodash/startCase';\nimport uniq from 'lodash/uniq'\nimport moment from 'moment';\nimport { Service, User, Professional } from '../models';\nimport { ServicesStore, UsersStore, ProfessionalsStore } from '../stores';\n\nexport default class Branch extends Model {\n  constructor( attributes, store ) {\n\n    let defaultAttributes = {\n      'location': '',\n      'street_number': '',\n      'street_name': '',\n      'name': '',\n      'status': 'ACTIVE',\n      'professionals': [],\n      'users': [],\n    };\n\n    let attrs = Object.assign( defaultAttributes, attributes );\n\n    super(attrs, store);\n  }\n\n  afterSetData() {\n    if (this.professionals) {\n      const modeledProfessionals = [];\n      this.professionals.forEach( professional => {\n        modeledProfessionals.push(new Professional(professional, ProfessionalsStore))\n      });\n      this.professionals = modeledProfessionals;\n    }\n    if (this.users) {\n      const modeledUsers = [];\n      this.users.forEach( user => {\n        modeledUsers.push(new User(user, UsersStore));\n      });\n      this.users = modeledUsers;\n    }\n  }\n\n  @computed\n  get cookedStatus() {\n    const statuses = {\n      'ACTIVE': 'Activo',\n      'INACTIVE': 'Inactivo'\n    }\n    return statuses[this.status.name || this.status];\n  }\n\n  @action\n  activate() {\n    this.status = 'ACTIVE';\n    return this.clean().save();\n  }\n\n  @action\n  deactivate() {\n    this.status = 'INACTIVE';\n    return this.clean().save();\n  }\n\n  @action\n  filterProfessionals( day ) {\n    let ret = []\n    this.professionals.map(professional => {\n      if(day.toUpperCase() in professional.rawWorkingDays){\n        ret.push(professional)\n      } \n    })\n    return ret\n  }\n\n  @action\n  openHours( day ) {\n    if(this.professionals.length == 0){\n      return null\n    }\n    let ret = []\n    let earliest = []\n    let latest = []\n    this.professionals.map(professional => {\n      if(day.toUpperCase() in professional.rawWorkingDays){\n        let hours = professional.filteredWorkingHours(day)\n        earliest.push(hours[0])\n        latest.push(hours[hours.length -1])\n      } \n    })\n    let earliestMoments = earliest.map( d => moment(d.toString(),\"LT\"))\n    let latestMoments = latest.map( d => moment(d.toString(),\"LT\"))\n\n    let currDate = moment.min(earliestMoments).startOf('minute').subtract(60, 'minutes');\n    let lastDate = moment.max(latestMoments).startOf('minute').add(60, 'minutes');\n\n    while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n      ret.push(currDate.clone().format('HH:mm'));\n    }\n    return ret\n  }\n\n  @computed\n  get isActive() {\n    return this.status.name == 'ACTIVE' || this.status == 'ACTIVE';\n  }\n\n  @computed\n  get cookedAddress() {\n    return `${ startCase(this.street_name) } ${ this.street_number }, ${ startCase(this.location) }`\n  }\n\n  @computed\n  get allServices() {\n    const services = [];\n    this.professionals.forEach( professional => {\n      if (professional.isActive) {\n        professional.services.forEach( service => {\n          if (!services.includes(service)) {\n            services.push(new Service(service, ServicesStore));\n          }\n        });\n      }\n    });\n    return Object.values(services.reduce((acc,cur) => Object.assign(acc,{[cur.id]:cur}),{}));\n  }\n\n  @action\n  clean() {\n    const cleanedProfessional = [];\n    const cleanedUsers = [];\n    this.professionals.forEach( professional => {\n      if (professional instanceof Object) {\n        cleanedProfessional.push({id: professional.id});\n      }\n      else {\n        cleanedProfessional.push({id: professional});\n      }\n    });\n    this.users.forEach( user => {\n      if (user instanceof Object) {\n        cleanedUsers.push({id: user.id});\n      }\n      else {\n        cleanedUsers.push({id: user});\n      }\n    });\n    this.professionals = cleanedProfessional;\n    this.users = cleanedUsers;\n\n    return this;\n  }\n}"]},"metadata":{},"sourceType":"module"}