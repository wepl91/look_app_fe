{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Branches/BranchesList.jsx\";\n\nimport React, { Component } from 'react';\nimport withStore from '../../hocs/withStore';\nimport { withToastManager } from 'react-toast-notifications';\nimport { observer } from 'mobx-react';\nimport startCase from 'lodash/startCase';\nimport { Loader, Title, Text, Table, Button, SelectableIcon } from 'shipnow-mercurio';\nimport { Level, LevelLeft, LevelRight } from 'bloomer';\nimport { translate } from '../../lib/Translator';\nimport { faSpinner, faStoreAlt, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nvar BranchesList = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BranchesList, _Component);\n\n  function BranchesList(props) {\n    var _this;\n\n    _classCallCheck(this, BranchesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BranchesList).call(this, props));\n    _this.state = {\n      branches: null,\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(BranchesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        branches: this.props.store.branches.search({}, 'branches-list', true)\n      });\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"handleShowModal\",\n    value: function handleShowModal(branch) {}\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this2 = this;\n\n      var data = this.state.branches.toArray();\n      var columns = [{\n        label: '',\n        content: function content(data) {\n          return React.createElement(SelectableIcon, {\n            className: \"ml-2\",\n            icon: faStoreAlt,\n            readOnly: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n        },\n        size: 'is-1'\n      }, {\n        label: this.getText('Nombre'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, startCase(data.name) || '- sin nombre -');\n        },\n        size: 'is-3'\n      }, {\n        label: this.getText('Dirección'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, data.cookedAddress || '- sin dirección -');\n        },\n        size: 'is-4'\n      }, {\n        label: this.getText('Estado'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"\".concat(_this2.getText(data.cookedStatus)));\n        },\n        size: 'is-3',\n        align: 'center'\n      }, {\n        label: '',\n        content: function content(data) {\n          return React.createElement(Button, {\n            icon: faPencilAlt,\n            kind: \"link\",\n            onClick: function onClick() {\n              return _this2.handleShowModal(data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        },\n        size: 'is-1',\n        align: 'center'\n      }];\n      return React.createElement(Table, {\n        columns: columns,\n        data: data,\n        striped: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal() {\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n\n      if (!isBranchesLoaded) {\n        return React.createElement(Loader, {\n          icon: faSpinner,\n          label: this.getText('Cargando las sucursales..'),\n          className: \"fullscreen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.getText('Listado de sucursales')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), this.renderTable(), this.state.showModal && this.renderModal());\n    }\n  }]);\n\n  return BranchesList;\n}(Component)) || _class;\n\nexport default withToastManager(withStore(BranchesList));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Branches/BranchesList.jsx"],"names":["React","Component","withStore","withToastManager","observer","startCase","Loader","Title","Text","Table","Button","SelectableIcon","Level","LevelLeft","LevelRight","translate","faSpinner","faStoreAlt","faPencilAlt","BranchesList","props","state","branches","showModal","setState","store","search","text","ui","language","branch","data","toArray","columns","label","content","size","getText","name","cookedAddress","cookedStatus","align","handleShowModal","isBranchesLoaded","isOk","renderTable","renderModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport withStore from '../../hocs/withStore';\nimport { withToastManager } from 'react-toast-notifications';\n\nimport { observer } from 'mobx-react';\n\nimport startCase from 'lodash/startCase';\n\nimport {\n  Loader,\n  Title,\n  Text,\n  Table,\n  Button,\n  SelectableIcon,\n} from 'shipnow-mercurio';\n\nimport {\n  Level,\n  LevelLeft,\n  LevelRight\n} from 'bloomer';\n\nimport { translate } from '../../lib/Translator';\n\nimport { faSpinner, faStoreAlt, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n@observer\nclass BranchesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      branches: null,\n      showModal: false,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      branches: this.props.store.branches.search({}, 'branches-list', true),\n    })\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  handleShowModal( branch ) {\n    \n  }\n\n  renderTable() {\n    const data = this.state.branches.toArray();\n\n    const columns = [\n      {\n        label: '',\n        content: (data) => (<SelectableIcon  className=\"ml-2\" icon={ faStoreAlt } readOnly/>),\n        size: 'is-1',\n      },\n      {\n        label: this.getText('Nombre'),\n        content: (data) => (<Text>{ startCase( data.name) || '- sin nombre -' }</Text>),\n        size: 'is-3'\n      },\n      {\n        label: this.getText('Dirección'),\n        content: (data) => (<Text>{ data.cookedAddress || '- sin dirección -' }</Text>),\n        size: 'is-4'\n      },\n      {\n        label: this.getText('Estado'),\n        content: (data) => (<Text>{ `${ this.getText(data.cookedStatus) }` }</Text>),\n        size: 'is-3',\n        align: 'center'\n      },\n      {\n        label: '',\n        content: (data) => (<Button icon={ faPencilAlt } kind=\"link\" onClick={ () => (this.handleShowModal(data)) } />),\n        size: 'is-1',\n        align: 'center'\n      },\n    ]\n\n    return <Table columns={ columns } data={ data } striped={ false }/>\n  }\n\n  renderModal() {\n    return null;\n  }\n\n  render() {\n    const isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n    if (!isBranchesLoaded) {\n      return <Loader icon={ faSpinner } label={ this.getText('Cargando las sucursales..') } className=\"fullscreen\" />\n    }\n    return(\n      <React.Fragment>\n        <Level>\n          <LevelLeft>\n            <Title>{ this.getText('Listado de sucursales') }</Title>\n          </LevelLeft>\n        </Level>\n        <hr/>\n        { this.renderTable() }\n        { this.state.showModal && this.renderModal() }\n      </React.Fragment> )\n  }\n}\n\nexport default withToastManager(withStore(BranchesList));"]},"metadata":{},"sourceType":"module"}