{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Appointments/AppointmentsForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Select, DateTimePicker, Text } from 'shipnow-mercurio';\nimport { Checkbox } from 'bloomer';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { withStore } from '../../hocs';\nimport { observer } from 'mobx-react';\nimport startCase from 'lodash/startCase';\nimport { horarios } from '../../lib/Mocks';\nimport moment from 'moment';\n\nvar AppointmentsForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AppointmentsForm, _Component);\n\n  function AppointmentsForm(props) {\n    var _this;\n\n    _classCallCheck(this, AppointmentsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppointmentsForm).call(this, props));\n    _this.handleProfessional = _this.handleProfessional.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleService = _this.handleService.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate = _this.handleDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHour = _this.handleHour.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      professionals: null,\n      professional: _this.props.appointment ? _this.props.appointment.professional : 'null',\n      services: null,\n      date: moment()\n    };\n    return _this;\n  }\n\n  _createClass(AppointmentsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        professionals: this.props.store.professionals.getAll(),\n        services: this.props.store.services.getAll()\n      });\n    }\n  }, {\n    key: \"handleHour\",\n    value: function handleHour(sender, value, name) {\n      this.props.onChange && this.props.onChange('hour', value);\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(sender, value, name) {\n      this.setState({\n        date: value\n      });\n      this.props.onChange && this.props.onChange('date', value);\n    }\n  }, {\n    key: \"handleProfessional\",\n    value: function handleProfessional(sender, value, name) {\n      if (value == 'null') {\n        this.setState({\n          professional: null\n        });\n        this.props.onChange && this.props.onChange('professional', null);\n      } else {\n        var professional = this.state.professionals.toArray().find(function (professional) {\n          return professional.id == value;\n        });\n        this.setState({\n          professional: professional\n        });\n        debugger;\n        this.props.onChange && this.props.onChange('professional', value);\n      }\n    }\n  }, {\n    key: \"handleService\",\n    value: function handleService(service) {\n      this.setState({\n        service: service\n      });\n      this.props.onChange && this.props.onChange('services', service.id);\n    }\n  }, {\n    key: \"getProfessionalList\",\n    value: function getProfessionalList() {\n      var prof = [];\n      prof.push({\n        key: '- Ninguno -',\n        value: 'null'\n      });\n      this.state.professionals.toArray().forEach(function (element) {\n        prof.push({\n          key: \"\".concat(startCase(element.name), \" \").concat(startCase(element.lastName)),\n          value: element.id\n        });\n      });\n      return prof;\n    }\n  }, {\n    key: \"isServiceInAppointment\",\n    value: function isServiceInAppointment(serviceID) {\n      var appointment = this.props.appointment;\n      var ret = false;\n\n      if (!appointment) {\n        return ret;\n      }\n\n      appointment.services.forEach(function (service) {\n        if (service.id == serviceID) {\n          ret = true;\n        }\n      });\n      return ret;\n    }\n  }, {\n    key: \"renderServices\",\n    value: function renderServices() {\n      var _this2 = this;\n\n      var professional = this.state.professional;\n      var services = professional && professional != 'null' ? professional.services : this.state.services.toArray();\n      return React.createElement(Field, {\n        className: \"ml-5\",\n        label: \"\\xBFCual de nuestros servicios requeris?\",\n        labelNote: \"Seleccion\\xE1 un servicio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, services.length > 0 ? services.map(function (service) {\n        return React.createElement(Checkbox, {\n          key: service.id,\n          onClick: function onClick() {\n            return _this2.handleService(service);\n          },\n          className: \"mt-1\",\n          isFullWidth: true,\n          defaultChecked: _this2.isServiceInAppointment(service.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(Text, {\n          className: \"ml-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"\".concat(startCase(service.name), \" - $\").concat(service.price)));\n      }) : React.createElement(Text, {\n        size: \"md\",\n        weight: \"medium\",\n        className: \"ml-2 mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"No hay servicios existentes para ofrecer.\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var professionalsLoaded = this.state.professionals && this.state.professionals.isOk();\n      var servicesLoaded = this.state.services && this.state.services.isOk();\n\n      if (!professionalsLoaded || !servicesLoaded) {\n        return null;\n      }\n\n      var appointment = this.props.appointment;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, !this.props.withDate && React.createElement(Field, {\n        className: \"ml-5\",\n        label: \"\\xBFQue d\\xEDa quer\\xE9s venir?\",\n        labelNote: \"Seleccion\\xE1 ua fecha\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        key: this.state.date,\n        value: this.state.date,\n        onChange: this.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"ml-5\",\n        label: \"\\xBFA cual de nuestras sucursales quer\\xE9s venir?\",\n        labelNote: \"Seleccion\\xE1 una sucursal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Select, {\n        disabled: true,\n        placeholder: \"Sucursales\",\n        borderless: true,\n        icon: faChevronDown,\n        options: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"ml-5\",\n        label: \"\\xBFPor qui\\xE9n quer\\xE9s ser atendido?\",\n        labelNote: \"Seleccion\\xE1 un profesional\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Select, {\n        key: this.state.professional,\n        value: this.state.professional ? this.state.professional.id : 'null',\n        placeholder: \"Profesionales\",\n        borderless: true,\n        icon: faChevronDown,\n        onChange: this.handleProfessional,\n        options: this.getProfessionalList(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), this.renderServices(), React.createElement(Field, {\n        className: \"ml-5\",\n        label: \"\\xBFA que hora quer\\xE9s venir?\",\n        labelNote: \"Seleccion\\xE1 un horario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Select, {\n        maxHeight: \"120px\",\n        placeholder: \"Horarios\",\n        borderless: true,\n        icon: faChevronDown,\n        onChange: this.handleHour,\n        options: horarios(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AppointmentsForm;\n}(Component)) || _class;\n\nAppointmentsForm.PropTypes = {\n  withDate: PropTypes.bool,\n  appointment: PropTypes.object\n};\nAppointmentsForm.defaultProps = {\n  withDate: false,\n  appointment: null\n};\nexport default withStore(AppointmentsForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Appointments/AppointmentsForm.jsx"],"names":["React","Component","PropTypes","Field","Select","DateTimePicker","Text","Checkbox","faChevronDown","withStore","observer","startCase","horarios","moment","AppointmentsForm","props","handleProfessional","bind","handleService","handleDate","handleHour","state","professionals","professional","appointment","services","date","setState","store","getAll","sender","value","name","onChange","toArray","find","id","service","prof","push","key","forEach","element","lastName","serviceID","ret","length","map","isServiceInAppointment","price","professionalsLoaded","isOk","servicesLoaded","withDate","getProfessionalList","renderServices","bool","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Field,\n  Select,\n  DateTimePicker,\n  Text\n} from 'shipnow-mercurio';\n\nimport {\n  Checkbox\n} from 'bloomer';\n\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { withStore } from '../../hocs';\n\nimport { observer } from 'mobx-react';\n\nimport startCase from 'lodash/startCase';\n\nimport { horarios } from '../../lib/Mocks';\n\nimport moment from 'moment';\n\n@observer\nclass AppointmentsForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleProfessional = this.handleProfessional.bind(this);\n    this.handleService      = this.handleService.bind(this);\n    this.handleDate         = this.handleDate.bind(this);\n    this.handleHour         = this.handleHour.bind(this);\n\n    this.state = {\n      professionals: null,\n      professional: this.props.appointment ? this.props.appointment.professional : 'null',\n      services: null,\n      date: moment()\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      professionals: this.props.store.professionals.getAll(),\n      services: this.props.store.services.getAll(),\n    })\n  }\n\n  handleHour( sender, value, name ) {\n    this.props.onChange && this.props.onChange('hour', value);\n  }\n\n  handleDate( sender, value, name ) {\n    this.setState({\n      date: value\n    })\n    this.props.onChange && this.props.onChange('date', value);\n  }\n\n  handleProfessional( sender, value, name ) {\n    if (value == 'null') {\n      this.setState({\n        professional: null,\n      });\n      this.props.onChange && this.props.onChange('professional', null);\n    }\n    else {\n      const professional = this.state.professionals.toArray().find( professional => {\n        return professional.id == value;\n      })\n      this.setState({\n        professional: professional,\n      });\n      debugger\n      this.props.onChange && this.props.onChange('professional', value);\n    }\n  }\n\n  handleService( service ) {\n    this.setState({\n      service: service,\n    });\n    this.props.onChange && this.props.onChange('services', service.id);\n  }\n\n  getProfessionalList() {\n    const prof = [];\n    prof.push({key: '- Ninguno -', value: 'null'});\n\n    this.state.professionals.toArray().forEach(element => {\n      prof.push({ key: `${ startCase(element.name) } ${ startCase(element.lastName) }`, value: element.id })\n    });\n\n    return prof\n  }\n\n  isServiceInAppointment( serviceID ) {\n    const { appointment } = this.props;\n    let ret = false;\n    if (!appointment) {\n      return ret;\n    }\n    appointment.services.forEach( service => {\n      if (service.id == serviceID) {\n        ret = true;\n      }\n    });\n    return ret;\n  }\n\n  renderServices() {\n    const { professional } = this.state;\n    const services = professional && professional != 'null' ?  professional.services : this.state.services.toArray();\n    return(\n      <Field className=\"ml-5\" label=\"¿Cual de nuestros servicios requeris?\" labelNote=\"Seleccioná un servicio\">\n        { services.length > 0 ? \n          services.map( service => ( <Checkbox key={ service.id } onClick={ () => ( this.handleService(service) )}className=\"mt-1\" isFullWidth defaultChecked={ this.isServiceInAppointment(service.id) } >\n                                      <Text className=\"ml-1\">{`${ startCase(service.name) } - $${ service.price }`}</Text>\n                                    </Checkbox> )) : \n          <Text size=\"md\" weight=\"medium\" className=\"ml-2 mt-1\">No hay servicios existentes para ofrecer.</Text> }\n      </Field> )\n  }\n\n  render() {\n    const professionalsLoaded = this.state.professionals && this.state.professionals.isOk();\n    const servicesLoaded = this.state.services && this.state.services.isOk()\n    if (!professionalsLoaded || !servicesLoaded) {\n      return null;\n    }\n\n    const { appointment } = this.props;\n    return(\n      <React.Fragment>\n        { !this.props.withDate &&\n          <Field className=\"ml-5\" label=\"¿Que día querés venir?\" labelNote=\"Seleccioná ua fecha\">\n            <DateTimePicker key={ this.state.date } value={ this.state.date } onChange={ this.handleDate }/>\n          </Field> }\n        <Field className=\"ml-5\" label=\"¿A cual de nuestras sucursales querés venir?\" labelNote=\"Seleccioná una sucursal\">\n          <Select \n            disabled\n            placeholder=\"Sucursales\" \n            borderless \n            icon={ faChevronDown } \n            options={ [] } />\n        </Field>\n        <Field className=\"ml-5\" label=\"¿Por quién querés ser atendido?\" labelNote=\"Seleccioná un profesional\">\n          <Select \n            key={ this.state.professional }\n            value={ this.state.professional ? this.state.professional.id : 'null' }\n            placeholder=\"Profesionales\" \n            borderless \n            icon={ faChevronDown } \n            onChange={ this.handleProfessional }\n            options={ this.getProfessionalList() } />\n        </Field>\n        { this.renderServices() } \n        <Field className=\"ml-5\" label=\"¿A que hora querés venir?\" labelNote=\"Seleccioná un horario\">\n          <Select \n            maxHeight=\"120px\" \n            placeholder=\"Horarios\" \n            borderless \n            icon={ faChevronDown }\n            onChange={ this.handleHour } \n            options={ horarios() }/>\n        </Field>\n      </React.Fragment> )\n  }\n}\n\nAppointmentsForm.PropTypes = {\n  withDate: PropTypes.bool,\n  appointment: PropTypes.object,\n}\n\nAppointmentsForm.defaultProps = {\n  withDate: false,\n  appointment: null,\n}\n\nexport default withStore(AppointmentsForm);"]},"metadata":{},"sourceType":"module"}