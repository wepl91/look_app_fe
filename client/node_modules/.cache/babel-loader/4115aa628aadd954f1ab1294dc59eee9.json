{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { Model } from '../lib';\nimport { action, computed } from 'mobx';\nimport startCase from 'lodash/startCase';\nimport uniq from 'lodash/uniq';\nimport { Service, User, Professional } from '../models';\nimport { ServicesStore, UsersStore, ProfessionalsStore } from '../stores';\nvar Branch = (_class =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Branch, _Model);\n\n  function Branch(attributes, store) {\n    _classCallCheck(this, Branch);\n\n    var defaultAttributes = {\n      'location': '',\n      'street_number': '',\n      'street_name': '',\n      'name': '',\n      'status': 'ACTIVE',\n      'professionals': [],\n      'users': []\n    };\n    var attrs = Object.assign(defaultAttributes, attributes);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Branch).call(this, attrs, store));\n  }\n\n  _createClass(Branch, [{\n    key: \"afterSetData\",\n    value: function afterSetData() {\n      if (this.professionals) {\n        var modeledProfessionals = [];\n        this.professionals.forEach(function (professional) {\n          modeledProfessionals.push(new Professional(professional, ProfessionalsStore));\n        });\n        this.professionals = modeledProfessionals;\n      }\n\n      if (this.users) {\n        var modeledUsers = [];\n        this.users.forEach(function (user) {\n          modeledUsers.push(new User(user, UsersStore));\n        });\n        this.users = modeledUsers;\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.status = 'ACTIVE';\n      return this.clean().save();\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.status = 'INACTIVE';\n      return this.clean().save();\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var cleanProfessionals = [];\n      var cleanUsers = [];\n      this.professionals.forEach(function (professional) {\n        if (professional instanceof Object) {\n          cleanProfessionals.push(professional.id);\n        } else {\n          cleanProfessionals.push(professional);\n        }\n      });\n      this.users.forEach(function (user) {\n        if (user instanceof Object) {\n          cleanUsers.push(user.id);\n        } else {\n          cleanUsers.push(user);\n        }\n      });\n      this.users = cleanUsers;\n      this.professionals = cleanProfessionals;\n      return this;\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.status.name == 'ACTIVE';\n    }\n  }, {\n    key: \"cookedStatus\",\n    get: function get() {\n      var statuses = {\n        'ACTIVE': 'Activo',\n        'INACTIVE': 'Inactivo'\n      };\n      return statuses[this.status.name || this.status];\n    }\n  }, {\n    key: \"cookedAddress\",\n    get: function get() {\n      return \"\".concat(startCase(this.street_name), \" \").concat(this.street_number, \", \").concat(startCase(this.location));\n    }\n  }, {\n    key: \"allServices\",\n    get: function get() {\n      var services = [];\n      this.professionals.forEach(function (professional) {\n        if (professional.isActive) {\n          professional.services.forEach(function (service) {\n            if (!services.includes(service)) {\n              services.push(new Service(service, ServicesStore));\n            }\n          });\n        }\n      });\n      return Object.values(services.reduce(function (acc, cur) {\n        return Object.assign(acc, _defineProperty({}, cur.id, cur));\n      }, {}));\n    }\n  }]);\n\n  return Branch;\n}(Model), (_applyDecoratedDescriptor(_class.prototype, \"activate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"activate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"deactivate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"deactivate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isActive\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isActive\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"cookedStatus\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cookedStatus\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"cookedAddress\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"cookedAddress\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clean\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"clean\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"allServices\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"allServices\"), _class.prototype)), _class);\nexport { Branch as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/models/Branch.js"],"names":["Model","action","computed","startCase","uniq","Service","User","Professional","ServicesStore","UsersStore","ProfessionalsStore","Branch","attributes","store","defaultAttributes","attrs","Object","assign","professionals","modeledProfessionals","forEach","professional","push","users","modeledUsers","user","status","clean","save","cleanProfessionals","cleanUsers","id","name","statuses","street_name","street_number","location","services","isActive","service","includes","values","reduce","acc","cur"],"mappings":"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","sourcesContent":["import { Model } from '../lib';\nimport {\n  action,\n  computed,\n} from 'mobx'\n\nimport startCase from 'lodash/startCase';\nimport uniq from 'lodash/uniq'\n\nimport { Service, User, Professional } from '../models';\nimport { ServicesStore, UsersStore, ProfessionalsStore } from '../stores';\n\nexport default class Branch extends Model {\n  constructor( attributes, store ) {\n\n    let defaultAttributes = {\n      'location': '',\n      'street_number': '',\n      'street_name': '',\n      'name': '',\n      'status': 'ACTIVE',\n      'professionals': [],\n      'users': [],\n    };\n\n    let attrs = Object.assign( defaultAttributes, attributes );\n\n    super(attrs, store);\n  }\n\n  afterSetData() {\n    if (this.professionals) {\n      const modeledProfessionals = [];\n      this.professionals.forEach( professional => {\n        modeledProfessionals.push(new Professional(professional, ProfessionalsStore))\n      });\n      this.professionals = modeledProfessionals;\n    }\n    if (this.users) {\n      const modeledUsers = [];\n      this.users.forEach( user => {\n        modeledUsers.push(new User(user, UsersStore));\n      });\n      this.users = modeledUsers;\n    }\n  }\n\n  @action\n  activate() {\n    this.status = 'ACTIVE';\n    return this.clean().save();\n  }\n\n  @action\n  deactivate() {\n    this.status = 'INACTIVE';\n    return this.clean().save();\n  }\n\n  @computed\n  get isActive() {\n    return this.status.name == 'ACTIVE';\n  }\n\n  @computed\n  get cookedStatus() {\n    const statuses = {\n      'ACTIVE': 'Activo',\n      'INACTIVE': 'Inactivo'\n    }\n    return statuses[this.status.name || this.status];\n  }\n\n  @computed\n  get cookedAddress() {\n    return `${ startCase(this.street_name) } ${ this.street_number }, ${ startCase(this.location) }`\n  }\n\n  @action\n  clean() {\n    const cleanProfessionals = [];\n    const cleanUsers = [];\n    this.professionals.forEach( professional => {\n      if (professional instanceof Object) {\n        cleanProfessionals.push(professional.id)\n      }\n      else {\n        cleanProfessionals.push(professional)\n      }\n    });\n\n    this.users.forEach( user => {\n      if (user instanceof Object) {\n        cleanUsers.push(user.id)\n      }\n      else {\n        cleanUsers.push(user)\n      }\n    });\n    this.users = cleanUsers;\n    this.professionals = cleanProfessionals;\n\n    return this;\n  }\n\n  @computed\n  get allServices() {\n    const services = [];\n    this.professionals.forEach( professional => {\n      if (professional.isActive) {\n        professional.services.forEach( service => {\n          if (!services.includes(service)) {\n            services.push(new Service(service, ServicesStore));\n          }\n        });\n      }\n    });\n    return Object.values(services.reduce((acc,cur) => Object.assign(acc,{[cur.id]:cur}),{}));\n  }\n}"]},"metadata":{},"sourceType":"module"}