{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/WorkingHoursSelector.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Columns, Column, Checkbox } from 'bloomer';\nimport { Select, Text } from 'shipnow-mercurio';\nimport moment from 'moment';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nvar WorkingHoursSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkingHoursSelector, _Component);\n\n  function WorkingHoursSelector(props) {\n    var _this;\n\n    _classCallCheck(this, WorkingHoursSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkingHoursSelector).call(this, props));\n    _this.state = {\n      startingDate: '',\n      finishingDate: '',\n      days: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WorkingHoursSelector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.defaultProfessional) {\n        this.setState({\n          startingDate: this.props.defaultProfessional.beginHour,\n          finishingDate: this.props.defaultProfessional.endHour,\n          days: this.props.defaultProfessional.rawWorkingDays\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      if (name == 'starting') {\n        this.setState({\n          startingDate: value\n        });\n      } else if (name == 'finishing') {\n        this.setState({\n          finishingDate: value\n        });\n      }\n    }\n  }, {\n    key: \"handleDays\",\n    value: function handleDays(received) {\n      var newArray = Array.from(this.state.days);\n\n      if (newArray.includes(received)) {\n        newArray = newArray.filter(function (item) {\n          return item !== received;\n        });\n      } else {\n        newArray.push(received);\n      }\n\n      this.setState({\n        days: newArray\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.days != prevState.days || this.state.startingDate != prevState.startingDate || this.state.finishingDate != prevState.finishingDate) {\n        this.props.onChange([this.state.days, this.state.startingDate, this.state.finishingDate]);\n      }\n    } //30 minutes intervals\n    // hoursBetweenDates(startDate, endDate) {\n    //   let dates = [];\n    //   let currDate = moment(startDate).startOf('minute').subtract(30, 'minutes');\n    //   let lastDate = moment(endDate).startOf('minute').add(30, 'minutes');\n    //   while(currDate.add(30, 'minutes').diff(lastDate, 'minutes') < 0) {\n    //       dates.push(currDate.clone().format('HH:mm'));\n    //   }\n    //   return dates;\n    // }\n    //1 hour intervals\n\n  }, {\n    key: \"hoursBetweenDates\",\n    value: function hoursBetweenDates(startDate, endDate) {\n      var hours = [];\n      var currDate = moment(startDate).startOf('minute').subtract(60, 'minutes');\n      var lastDate = moment(endDate).startOf('minute').add(60, 'minutes');\n\n      while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n        hours.push(currDate.clone().format('HH:mm'));\n      }\n\n      return hours;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hourList = this.hoursBetweenDates(this.props.startingDate, this.props.finishingDate);\n      var daysList = this.props.days;\n      var translatedDays = {\n        'MONDAY': 'Lunes',\n        'TUESDAY': 'Martes',\n        'WEDNESDAY': 'Miércoles',\n        'THURSDAY': 'Jueves',\n        'FRIDAY': 'Viernes',\n        'SATURDAY': 'Sábado'\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        className: \"is-gapless is-marginless mb-3\",\n        isCentered: true,\n        isVCentered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, daysList.map(function (day) {\n        return React.createElement(Checkbox, {\n          className: \"pr-1 mr-1 mt-2\",\n          name: \"day\",\n          isFullWidth: true,\n          defaultChecked: _this2.props.defaultProfessional && _this2.props.defaultProfessional.cookedWorkingDays.includes(translatedDays[day]),\n          onClick: function onClick() {\n            return _this2.handleDays(day);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Text, {\n          className: \"ml-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, translatedDays[day]));\n      })), React.createElement(Columns, {\n        className: \"is-gapless is-marginless mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"pt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"De\")), React.createElement(Column, {\n        isSize: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Entrada\",\n        className: \"is-fullwidth\",\n        borderless: true,\n        icon: faChevronDown,\n        value: this.state.startingDate,\n        name: \"starting\",\n        onChange: this.handleChange,\n        options: hourList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Column, {\n        isSize: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Text, {\n        className: \"pt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"a\")), React.createElement(Select, {\n        placeholder: \"Salida\",\n        className: \"is-fullwidth\",\n        borderless: true,\n        icon: faChevronDown,\n        value: this.state.finishingDate,\n        name: \"finishing\",\n        onChange: this.handleChange,\n        options: hourList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return WorkingHoursSelector;\n}(Component);\n\nWorkingHoursSelector.PropTypes = {\n  startingDate: PropTypes.object,\n  finishingDate: PropTypes.object,\n  days: PropTypes.array,\n  defaultProfessional: PropTypes.object,\n  onChange: PropTypes.func,\n  validate: PropTypes.func\n};\nWorkingHoursSelector.defaultProps = {\n  startingDate: null,\n  finishingDate: null,\n  days: null,\n  onChange: null,\n  validate: null\n};\nexport default WorkingHoursSelector;","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/WorkingHoursSelector.jsx"],"names":["React","Component","PropTypes","Columns","Column","Checkbox","Select","Text","moment","faChevronDown","WorkingHoursSelector","props","state","startingDate","finishingDate","days","handleChange","bind","defaultProfessional","setState","beginHour","endHour","rawWorkingDays","sender","value","name","valid","received","newArray","Array","from","includes","filter","item","push","prevProps","prevState","onChange","startDate","endDate","hours","currDate","startOf","subtract","lastDate","add","diff","clone","format","hourList","hoursBetweenDates","daysList","translatedDays","map","day","cookedWorkingDays","handleDays","object","array","func","validate","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Columns,\n  Column,\n  Checkbox\n} from 'bloomer';\n\nimport {\n  Select,\n  Text\n} from 'shipnow-mercurio';\n\nimport moment from 'moment';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\n\nclass WorkingHoursSelector extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startingDate: '',\n      finishingDate: '',\n      days: []\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.defaultProfessional) {\n      this.setState({\n        startingDate: this.props.defaultProfessional.beginHour,\n        finishingDate: this.props.defaultProfessional.endHour,\n        days: this.props.defaultProfessional.rawWorkingDays\n      })\n    }\n  }\n\n  handleChange(sender, value, name, valid) {\n    if (name == 'starting') {\n      this.setState({\n        startingDate: value\n      })\n    }\n    else if (name == 'finishing') {\n      this.setState({\n        finishingDate: value\n      })\n    }\n  }\n\n  handleDays(received) {\n    let newArray = Array.from(this.state.days)\n    if (newArray.includes(received)) {\n      newArray = newArray.filter(item => item !== received)\n    } else {\n      newArray.push(received)\n    }\n    this.setState({\n      days: newArray,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.days != prevState.days || this.state.startingDate != prevState.startingDate || this.state.finishingDate != prevState.finishingDate) {\n      this.props.onChange([this.state.days, this.state.startingDate, this.state.finishingDate]);\n    }\n  }\n\n  //30 minutes intervals\n  // hoursBetweenDates(startDate, endDate) {\n  //   let dates = [];\n\n  //   let currDate = moment(startDate).startOf('minute').subtract(30, 'minutes');\n  //   let lastDate = moment(endDate).startOf('minute').add(30, 'minutes');\n\n  //   while(currDate.add(30, 'minutes').diff(lastDate, 'minutes') < 0) {\n  //       dates.push(currDate.clone().format('HH:mm'));\n  //   }\n\n  //   return dates;\n  // }\n\n  //1 hour intervals\n  hoursBetweenDates(startDate, endDate) {\n    let hours = [];\n\n    let currDate = moment(startDate).startOf('minute').subtract(60, 'minutes');\n    let lastDate = moment(endDate).startOf('minute').add(60, 'minutes');\n\n    while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n      hours.push(currDate.clone().format('HH:mm'));\n    }\n\n    return hours;\n  }\n\n  render() {\n    let hourList = this.hoursBetweenDates(this.props.startingDate, this.props.finishingDate)\n    let daysList = this.props.days\n    const translatedDays = {\n      'MONDAY': 'Lunes',\n      'TUESDAY': 'Martes',\n      'WEDNESDAY': 'Miércoles',\n      'THURSDAY': 'Jueves',\n      'FRIDAY': 'Viernes',\n      'SATURDAY': 'Sábado',\n    }\n\n    return (\n      <React.Fragment>\n        <Columns className=\"is-gapless is-marginless mb-3\" isCentered isVCentered>\n          {daysList.map(day => (\n            <Checkbox className=\"pr-1 mr-1 mt-2\" name=\"day\" isFullWidth defaultChecked={this.props.defaultProfessional && this.props.defaultProfessional.cookedWorkingDays.includes(translatedDays[day])} onClick={() => this.handleDays(day)} ><Text className=\"ml-1\">{translatedDays[day]}</Text></Checkbox>\n          ))}\n        </Columns>\n        <Columns className=\"is-gapless is-marginless mb-3\">\n          <Column isSize={ 1 }>\n            <Text className=\"pt-1\">De</Text>\n          </Column>\n          <Column isSize={ 3 }>\n            <Select placeholder=\"Entrada\"\n              className=\"is-fullwidth\"\n              borderless icon={faChevronDown}\n              value={this.state.startingDate}\n              name=\"starting\" onChange={this.handleChange} options={hourList} />\n          </Column>\n          <Column isSize={ 1 }>\n            <Text className=\"pt-1\">a</Text>\n          </Column>\n          <Select placeholder=\"Salida\"\n            className=\"is-fullwidth\"\n            borderless icon={faChevronDown}\n            value={this.state.finishingDate}\n            name=\"finishing\" onChange={this.handleChange} options={hourList} />\n        </Columns>\n      </React.Fragment>)\n  }\n}\n\nWorkingHoursSelector.PropTypes = {\n  startingDate: PropTypes.object,\n  finishingDate: PropTypes.object,\n  days: PropTypes.array,\n  defaultProfessional: PropTypes.object,\n  onChange: PropTypes.func,\n  validate: PropTypes.func\n}\n\nWorkingHoursSelector.defaultProps = {\n  startingDate: null,\n  finishingDate: null,\n  days: null,\n  onChange: null,\n  validate: null\n}\n\nexport default WorkingHoursSelector;"]},"metadata":{},"sourceType":"module"}