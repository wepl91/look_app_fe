{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Reports/ServicesReport/ServicesReportView.jsx\";\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Bar } from 'react-chartjs-2';\nimport withStore from '../../../hocs/withStore';\nimport { observer } from 'mobx-react';\nimport { translate } from '../../../lib/Translator';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Column, Columns, Level, LevelLeft } from 'bloomer';\nimport { Title, Select, Field, DateTimePicker } from 'shipnow-mercurio';\nimport moment from 'moment';\n\nvar ServicesReportView = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ServicesReportView, _Component);\n\n  function ServicesReportView(props) {\n    var _this;\n\n    _classCallCheck(this, ServicesReportView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ServicesReportView).call(this, props));\n    _this.state = {\n      sort: 'asc',\n      sortBy: 'totalAmount',\n      data: null,\n      branches: null,\n      fromDate: moment().startOf('month'),\n      toDate: moment(),\n      branch: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSort = _this.handleSort.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSortBy = _this.handleSortBy.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ServicesReportView, [{\n    key: \"handleSortBy\",\n    value: function handleSortBy(sender, value, name) {\n      debugger;\n    }\n  }, {\n    key: \"handleSort\",\n    value: function handleSort(sort) {\n      this.setState({\n        sort: sort\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      if (name == 'branch' && value == 'null') {\n        this.setState({\n          branch: null\n        });\n      } else {\n        this.setState(_defineProperty({}, name, value));\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.branch != this.state.branch) {\n        this.sendRequest();\n      }\n\n      if (prevState.toDate != this.state.toDate) {\n        this.sendRequest();\n      }\n\n      if (prevState.fromDate != this.state.fromDate) {\n        this.sendRequest();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.sendRequest();\n      this.setState({\n        branches: this.props.store.branches.search({}, 'branches-list', true)\n      });\n    }\n  }, {\n    key: \"sendRequest\",\n    value: function sendRequest() {\n      var reqParams = {};\n\n      if (this.state.branch) {\n        reqParams['branchId'] = this.state.branch;\n      }\n\n      if (this.state.toDate) {\n        reqParams['toDate'] = this.state.toDate;\n      }\n\n      if (this.state.fromDate) {\n        reqParams['fromDate'] = this.state.fromDate;\n      }\n\n      this.setState({\n        data: this.props.store.reports.getServicesReport(reqParams)\n      });\n    }\n  }, {\n    key: \"sort\",\n    value: function sort(data) {\n      var _this2 = this;\n\n      if (this.state.sort == 'asc') {\n        return data.sort(function (a, b) {\n          return b[_this2.state.sortBy] - a[_this2.state.sortBy];\n        });\n      } else {\n        return data.sort(function (a, b) {\n          return a[_this2.state.sortBy] - b[_this2.state.sortBy];\n        });\n      }\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      var sortedData = this.sort(this.state.data.toArray());\n      return {\n        labels: sortedData.map(function (item) {\n          return item.service.name;\n        }),\n        datasets: [{\n          label: 'Ingresos',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: sortedData.map(function (item) {\n            return parseFloat(item.totalAmount);\n          })\n        }]\n      };\n    }\n  }, {\n    key: \"getChartConfig\",\n    value: function getChartConfig() {\n      return {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: this.getText('Ingresos por servicios'),\n          fontSize: '18'\n        },\n        legend: {\n          display: false\n        },\n        tooltips: {\n          callbacks: {\n            label: function label(tooltipItem) {\n              return \"Total facturado: $\".concat(tooltipItem.yLabel);\n            },\n            title: function title(tooltipItem) {\n              return \"Ingresos generados por \".concat(tooltipItem[0].xLabel);\n            }\n          }\n        },\n        scales: {\n          xAxes: [{\n            stacked: true\n          }],\n          yAxes: [{\n            stacked: true\n          }]\n        }\n      };\n    }\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      return [{\n        key: this.getText('Ingresos'),\n        value: 'totalAmount'\n      }, {\n        key: this.getText('Veces consumidas'),\n        value: 'quantity'\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var isReportDataLoaded = this.state.data && this.state.data.isOk();\n      var isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n      if (!isReportDataLoaded || !isBranchesLoaded) return null;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, this.getText('Reporte de servicios')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('¿Querés filtrar y ver ingresos por sucursal?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Select, {\n        icon: faChevronDown,\n        className: \"is-fullwidth\",\n        borderless: true,\n        placeholder: this.getText('Sucursal'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        isSize: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Desde'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        isSize: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Hasta'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        isSize: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Ordenar por:'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Select, {\n        value: this.state.sortBy,\n        icon: faChevronDown,\n        className: \"is-fullwidth\",\n        borderless: true,\n        options: this.getOptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        isSize: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Ordernamiento'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"asc\",\n        onChange: function onChange() {\n          return _this3.handleSort('asc');\n        },\n        checked: this.state.sort == 'asc',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), this.getText('Ascendiente')), React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"ml-1 mr-1\",\n        type: \"radio\",\n        value: \"desc\",\n        onChange: function onChange() {\n          return _this3.handleSort('desc');\n        },\n        checked: this.state.sort == 'desc',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), this.getText('Descendiente')))))), React.createElement(Columns, {\n        className: \"pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.getChartData(),\n        width: 100,\n        height: 450,\n        options: this.getChartConfig(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ServicesReportView;\n}(Component)) || _class;\n\nexport default withStore(withRouter(ServicesReportView));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Reports/ServicesReport/ServicesReportView.jsx"],"names":["React","Component","withRouter","Bar","withStore","observer","translate","faChevronDown","Column","Columns","Level","LevelLeft","Title","Select","Field","DateTimePicker","moment","ServicesReportView","props","state","sort","sortBy","data","branches","fromDate","startOf","toDate","branch","handleChange","bind","handleSort","handleSortBy","sender","value","name","setState","valid","prevProps","prevState","sendRequest","store","search","reqParams","reports","getServicesReport","a","b","text","ui","language","sortedData","toArray","labels","map","item","service","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","parseFloat","totalAmount","maintainAspectRatio","title","display","getText","fontSize","legend","tooltips","callbacks","tooltipItem","yLabel","xLabel","scales","xAxes","stacked","yAxes","key","isReportDataLoaded","isOk","isBranchesLoaded","getOptions","flexDirection","alignItems","marginTop","getChartData","getChartConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport { Bar } from 'react-chartjs-2';\n\nimport withStore from '../../../hocs/withStore';\n\nimport { observer } from 'mobx-react';\n\nimport { translate } from '../../../lib/Translator';\n\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  Column,\n  Columns,\n  Level,\n  LevelLeft\n} from 'bloomer';\n\nimport {\n  Title,\n  Select,\n  Field,\n  DateTimePicker,\n} from 'shipnow-mercurio';\n\nimport moment from 'moment';\n\n@observer\nclass ServicesReportView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sort: 'asc',\n      sortBy: 'totalAmount',\n      data: null,\n      branches: null,\n      fromDate: moment().startOf('month'),\n      toDate: moment(),\n      branch: null,\n    }\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSort   = this.handleSort.bind(this);\n    this.handleSortBy = this.handleSortBy.bind(this);\n  }\n\n  handleSortBy(sender, value, name) {\n    debugger\n  }\n\n  handleSort(sort) {\n    this.setState({\n      sort,\n    })\n  }\n\n  handleChange(sender, value, name, valid) {\n    if (name == 'branch' && value == 'null') {\n      this.setState({\n        branch: null,\n      })\n    }\n    else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.branch != this.state.branch) {\n      this.sendRequest();\n    }  \n    if (prevState.toDate != this.state.toDate) {\n      this.sendRequest();\n    }  \n    if (prevState.fromDate != this.state.fromDate) {\n      this.sendRequest();\n    }  \n  }\n\n  componentDidMount() {\n    this.sendRequest();\n    this.setState({\n      branches: this.props.store.branches.search({}, 'branches-list', true),\n    })\n  }\n\n  sendRequest() {\n    const reqParams = {};\n    if (this.state.branch) {\n      reqParams['branchId'] = this.state.branch;\n    }\n    if (this.state.toDate) {\n      reqParams['toDate'] = this.state.toDate;\n    }\n    if (this.state.fromDate) {\n      reqParams['fromDate'] = this.state.fromDate;\n    }\n\n    this.setState({\n      data: this.props.store.reports.getServicesReport(reqParams)\n    })\n  }\n\n  sort(data) {\n    if (this.state.sort == 'asc') {\n      return data.sort((a, b) => b[this.state.sortBy] - a[this.state.sortBy]);\n    }\n    else {\n      return data.sort((a, b) => a[this.state.sortBy] - b[this.state.sortBy]);\n    }\n  }\n\n  getText(text) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  getChartData() {\n    const sortedData = this.sort(this.state.data.toArray());\n    return {\n      labels: sortedData.map(item => (item.service.name)),\n      datasets: [\n        {\n          label: 'Ingresos',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: sortedData.map(item => (parseFloat(item.totalAmount))),\n        }\n      ]\n    };\n  }\n\n  getChartConfig() {\n    return {\n      maintainAspectRatio: false,\n      title: {\n        display: true,\n        text: this.getText('Ingresos por servicios'),\n        fontSize: '18',\n      },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `Total facturado: $${tooltipItem.yLabel}`\n          },\n          title: function (tooltipItem) {\n            return `Ingresos generados por ${tooltipItem[0].xLabel}`\n          }\n        }\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true\n          }\n        ],\n        yAxes: [\n          {\n            stacked: true\n          }\n        ]\n      }\n    }\n  }\n\n  getOptions() {\n    return [{\n      key: this.getText('Ingresos'),\n      value: 'totalAmount',\n    },\n    {\n      key: this.getText('Veces consumidas'),\n      value: 'quantity'\n    }];\n  }\n\n  render() {\n    const isReportDataLoaded = this.state.data && this.state.data.isOk();\n    const isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n    if (!isReportDataLoaded || !isBranchesLoaded) return null;\n    return (\n      <React.Fragment>\n        <Level>\n          <LevelLeft>\n            <Title>{this.getText('Reporte de servicios')}</Title>\n          </LevelLeft>\n        </Level>\n        <hr />\n        <Columns>\n          <Column isSize={3}>\n            <Field label={this.getText('¿Querés filtrar y ver ingresos por sucursal?')}>\n              <Select\n                icon={ faChevronDown } \n                className=\"is-fullwidth\"\n                borderless\n                placeholder={this.getText('Sucursal')} />\n            </Field>\n          </Column>\n          <Column isSize={2}>\n            <Field label={this.getText('Desde')}>\n              <DateTimePicker />\n            </Field>\n          </Column>\n          <Column isSize={2}>\n            <Field label={this.getText('Hasta')}>\n              <DateTimePicker />\n            </Field>\n          </Column>\n          <Column isSize={2}>\n            <Field label={this.getText('Ordenar por:')}>\n              <Select\n                value={ this.state.sortBy }\n                icon={ faChevronDown }\n                className=\"is-fullwidth\"\n                borderless\n                options={ this.getOptions() } />\n            </Field>\n          </Column>\n          <Column isSize={2}>\n            <Field label={this.getText('Ordernamiento')}>\n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                  <input\n                    className=\"ml-1 mr-1\"\n                    type=\"radio\"\n                    value=\"asc\"\n                    onChange={() => (this.handleSort('asc'))}\n                    checked={this.state.sort == 'asc'} />\n                  {this.getText('Ascendiente')}\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: '8px' }}>\n                  <input\n                    className=\"ml-1 mr-1\"\n                    type=\"radio\"\n                    value=\"desc\"\n                    onChange={() => (this.handleSort('desc'))}\n                    checked={this.state.sort == 'desc'} />\n                  {this.getText('Descendiente')}\n                </div>\n              </div>\n            </Field>\n          </Column>\n        </Columns>\n        <Columns className=\"pt-5\">\n          <Bar\n            data={this.getChartData()}\n            width={100}\n            height={450}\n            options={this.getChartConfig()}\n          />\n        </Columns>\n      </React.Fragment>)\n  }\n}\n\nexport default withStore(withRouter(ServicesReportView));"]},"metadata":{},"sourceType":"module"}