{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Branches/BranchesForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { observer } from 'mobx-react';\nimport { withStore } from '../../hocs';\nimport { Field, TextInput } from 'shipnow-mercurio';\nimport { Column, Columns } from 'bloomer';\n\nvar BranchesForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BranchesForm, _Component);\n\n  function BranchesForm(props) {\n    var _this;\n\n    _classCallCheck(this, BranchesForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BranchesForm).call(this, props));\n    _this.state = {\n      street_name: '',\n      street_number: '',\n      location: '',\n      lonlat: {\n        lat: null,\n        lon: null\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLanLot = _this.getLanLot.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BranchesForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var diffStreet = prevState.street_name != this.state.street_name;\n      var diffNumber = prevState.street_number != this.state.street_number;\n      var diffLocation = prevState.location != this.state.location;\n\n      if (diffLocation || diffNumber || diffStreet) {\n        this.getLanLot();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        loaded: true\n      });\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"getLanLot\",\n    value: function getLanLot() {\n      var _this2 = this;\n\n      console.dir(this.state);\n\n      if (this.state.street_name == '' || this.state.location == '' || this.state.street_number == '') {\n        return;\n      }\n\n      var cookedLocation = \"\".concat(this.state.street_name, \" \").concat(this.state.street_number, \", \").concat(this.state.location);\n      var url = \"http://www.mapquestapi.com/geocoding/v1/address?key=1G0vEZOEtXkU5BW9MDLAGp22ATGiUzs8&location=\".concat(cookedLocation);\n      var request = {\n        'method': 'GET',\n        'headers': {}\n      };\n      fetch(url, request).then(function (response) {\n        return response.json().then(function (content) {\n          var point = {\n            lat: content.results[0].locations[0].displayLatLng.lat,\n            lon: content.results[0].locations[0].displayLatLng.lng\n          };\n\n          _this2.setState({\n            lonlat: point\n          });\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          branch = _this$props.branch,\n          withMap = _this$props.withMap;\n      var position = this.state.lonlat.lon && this.state.lonlat.lat ? [this.state.lonlat.lat, this.state.lonlat.lon] : null;\n      return React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: \"Nombre\",\n        labelNote: \"\\xBFCu\\xE1l es el nombre de la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"name\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"Localidad\",\n        labelNote: \"\\xBFEn qu\\xE9 localidad se ubica la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"location\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"Calle\",\n        labelNote: \"\\xBFSobre qu\\xE9 calle se encuentra la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"street_name\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: \"N\\xFAmero\",\n        labelNote: \"\\xBFA qu\\xE9 altura se encuentra la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        name: \"street_number\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), withMap && React.createElement(Map, {\n        center: position,\n        zoom: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        position: position,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\xBFAqu\\xED se encuentra la sucursal?\"))));\n    }\n  }]);\n\n  return BranchesForm;\n}(Component)) || _class;\n\nBranchesForm.PropTypes = {\n  branch: PropTypes.object,\n  withMap: PropTypes.bool\n};\nBranchesForm.defaultProps = {\n  branch: null,\n  withMap: false\n};\nexport default withStore(BranchesForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Branches/BranchesForm.jsx"],"names":["React","Component","PropTypes","Map","TileLayer","Marker","Popup","observer","withStore","Field","TextInput","Column","Columns","BranchesForm","props","state","street_name","street_number","location","lonlat","lat","lon","handleChange","bind","getLanLot","prevProps","prevState","diffStreet","diffNumber","diffLocation","setState","loaded","text","translate","store","ui","language","console","dir","cookedLocation","url","request","fetch","then","response","json","content","point","results","locations","displayLatLng","lng","sender","value","name","valid","branch","withMap","position","object","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\n\nimport { observer } from 'mobx-react';\n\nimport { withStore } from '../../hocs';\n\nimport {\n  Field,\n  TextInput,\n} from 'shipnow-mercurio';\n\nimport {\n  Column,\n  Columns\n} from 'bloomer'\n\n@observer\nclass BranchesForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      street_name: '',\n      street_number: '',\n      location: '',\n      lonlat: {\n        lat: null,\n        lon: null,\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.getLanLot = this.getLanLot.bind(this);\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const diffStreet = prevState.street_name != this.state.street_name;\n    const diffNumber = prevState.street_number != this.state.street_number;\n    const diffLocation = prevState.location != this.state.location;\n    if (diffLocation || diffNumber || diffStreet) {\n      this.getLanLot();\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      loaded: true\n    })\n  }\n\n\n  getText(text) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  getLanLot() {\n    console.dir(this.state)\n    if (this.state.street_name == '' || this.state.location == '' || this.state.street_number == '') {\n      return;\n    }\n\n    const cookedLocation = `${this.state.street_name} ${this.state.street_number}, ${this.state.location}`;\n    const url = `http://www.mapquestapi.com/geocoding/v1/address?key=1G0vEZOEtXkU5BW9MDLAGp22ATGiUzs8&location=${cookedLocation}`\n    let request = {\n      'method': 'GET',\n      'headers': {},\n    };\n\n    fetch(url, request).then(response => {\n      return response.json().then(content => {\n        const point = {\n          lat: content.results[0].locations[0].displayLatLng.lat,\n          lon: content.results[0].locations[0].displayLatLng.lng\n        }\n        this.setState({\n          lonlat: point,\n        });\n      });\n    });\n  }\n\n  handleChange(sender, value, name, valid) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { branch, withMap } = this.props\n    const position = this.state.lonlat.lon && this.state.lonlat.lat ? [this.state.lonlat.lat, this.state.lonlat.lon] : null\n    return (\n      <Columns>\n        <Column isSize={ 4 }>\n          <Field label=\"Nombre\" labelNote=\"¿Cuál es el nombre de la nueva sucursal?\">\n            <TextInput name=\"name\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n          <Field label=\"Localidad\" labelNote=\"¿En qué localidad se ubica la nueva sucursal?\">\n            <TextInput name=\"location\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n          <Field label=\"Calle\" labelNote=\"¿Sobre qué calle se encuentra la nueva sucursal?\">\n            <TextInput name=\"street_name\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n          <Field label=\"Número\" labelNote=\"¿A qué altura se encuentra la nueva sucursal?\">\n            <TextInput name=\"street_number\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n        </Column>\n        { withMap && \n          <Map center={position} zoom={16}>\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n            <Marker position={position}>\n              <Popup>¿Aquí se encuentra la sucursal?</Popup>\n            </Marker>\n          </Map> }\n      </Columns>)\n  }\n}\n\nBranchesForm.PropTypes = {\n  branch: PropTypes.object,\n  withMap: PropTypes.bool,\n}\n\nBranchesForm.defaultProps = {\n  branch: null,\n  withMap: false\n}\n\nexport default withStore(BranchesForm);"]},"metadata":{},"sourceType":"module"}