{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Reports/ProfessionalsReport/ProfessionalsReportView.jsx\";\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Bar } from 'react-chartjs-2';\nimport withStore from '../../../hocs/withStore';\nimport { observer } from 'mobx-react';\nimport { translate } from '../../../lib/Translator';\nimport { Column, Columns, Level, LevelLeft } from 'bloomer';\nimport { Title, Select, Field, DateTimePicker } from 'shipnow-mercurio';\n\nvar ProfessionalsReportView = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfessionalsReportView, _Component);\n\n  function ProfessionalsReportView(props) {\n    _classCallCheck(this, ProfessionalsReportView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfessionalsReportView).call(this, props));\n  }\n\n  _createClass(ProfessionalsReportView, [{\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"getChartData\",\n    value: function getChartData() {\n      return {\n        labels: ['Juan', 'Pedro', 'Bruno', 'Walter', 'Jeremias', 'Nicolas', 'Agustin'],\n        datasets: [{\n          label: 'Ingresos',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [65.5, 59, 80, 81, 56, 55, 49]\n        }]\n      };\n    }\n  }, {\n    key: \"getChartConfig\",\n    value: function getChartConfig() {\n      return {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: this.getText('Ingresos por profesionales'),\n          fontSize: '18'\n        },\n        legend: {\n          display: false\n        },\n        tooltips: {\n          callbacks: {\n            label: function label(tooltipItem) {\n              return \"Total facturado: $\".concat(tooltipItem.yLabel);\n            },\n            title: function title(tooltipItem) {\n              return \"Ingresos generados por \".concat(tooltipItem[0].xLabel);\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.getText('Reporte de profesionales')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('¿Querés filtrar y ver ingresos por sucursal?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"is-fullwidth\",\n        borderless: true,\n        placeholder: this.getText('Sucursal'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        isSize: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Desde'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(Column, {\n        isSize: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Hasta'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(DateTimePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })))), React.createElement(Columns, {\n        className: \"pt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.getChartData(),\n        width: 100,\n        height: 450,\n        options: this.getChartConfig(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProfessionalsReportView;\n}(Component)) || _class;\n\nexport default withStore(withRouter(ProfessionalsReportView));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Reports/ProfessionalsReport/ProfessionalsReportView.jsx"],"names":["React","Component","withRouter","Bar","withStore","observer","translate","Column","Columns","Level","LevelLeft","Title","Select","Field","DateTimePicker","ProfessionalsReportView","props","text","store","ui","language","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","maintainAspectRatio","title","display","getText","fontSize","legend","tooltips","callbacks","tooltipItem","yLabel","xLabel","getChartData","getChartConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nimport {Bar} from 'react-chartjs-2';\n\nimport withStore from '../../../hocs/withStore';\n\nimport { observer } from 'mobx-react';\n\nimport { translate } from '../../../lib/Translator'; \n\nimport {\n  Column,\n  Columns,\n  Level,\n  LevelLeft\n} from 'bloomer';\n\nimport {\n  Title,\n  Select,\n  Field,\n  DateTimePicker,\n} from 'shipnow-mercurio';\n\n@observer\nclass ProfessionalsReportView extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  getChartData() {\n    return {\n      labels: ['Juan', 'Pedro', 'Bruno', 'Walter', 'Jeremias', 'Nicolas', 'Agustin'],\n      datasets: [\n        {\n          label: 'Ingresos',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [65.5, 59, 80, 81, 56, 55, 49],\n        }\n      ]\n    };\n  }\n\n  getChartConfig() {\n    return {\n      maintainAspectRatio: false,\n      title: {\n        display: true,\n        text: this.getText('Ingresos por profesionales'),\n        fontSize: '18',\n      },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        callbacks: {\n          label: function(tooltipItem) {\n            return `Total facturado: $${tooltipItem.yLabel}`\n          },\n          title: function(tooltipItem) {\n            return `Ingresos generados por ${tooltipItem[0].xLabel}`\n          } \n        }\n      }\n    }\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n        <Level>\n          <LevelLeft>\n            <Title>{ this.getText('Reporte de profesionales') }</Title>\n          </LevelLeft>\n        </Level>\n        <hr/>\n          <Columns>\n            <Column isSize={ 3 }>\n              <Field label={ this.getText('¿Querés filtrar y ver ingresos por sucursal?') }>\n                <Select \n                  className=\"is-fullwidth\"\n                  borderless\n                  placeholder={this.getText('Sucursal')}/>\n              </Field>\n            </Column>\n            <Column isSize={ 3 }>\n              <Field label={ this.getText('Desde') }>\n                <DateTimePicker />\n              </Field>\n            </Column>\n            <Column isSize={ 3 }>\n              <Field label={ this.getText('Hasta') }>\n                <DateTimePicker />\n              </Field>\n            </Column>\n          </Columns>\n        <Columns className=\"pt-5\">\n        <Bar\n          data={this.getChartData()}\n          width={100}\n          height={450}\n          options={this.getChartConfig()}\n      />\n        </Columns>\n      </React.Fragment> )\n  }\n}\n\nexport default withStore(withRouter(ProfessionalsReportView));"]},"metadata":{},"sourceType":"module"}