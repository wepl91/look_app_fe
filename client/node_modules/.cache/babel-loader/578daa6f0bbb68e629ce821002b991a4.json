{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Branches/BranchesForm.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport debounce from 'lodash/debounce';\nimport { observer } from 'mobx-react';\nimport { withStore } from '../../hocs';\nimport { Field, TextInput } from 'shipnow-mercurio';\nimport { Column, Columns } from 'bloomer';\nimport { translate } from '../../lib/Translator';\n\nvar BranchesForm = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BranchesForm, _Component);\n\n  function BranchesForm(props) {\n    var _this;\n\n    _classCallCheck(this, BranchesForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BranchesForm).call(this, props));\n    _this.state = {\n      street_name: '',\n      street_number: '',\n      location: '',\n      lonlat: {\n        lat: null,\n        lon: null\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getLanLot = debounce(_this.getLanLot.bind(_assertThisInitialized(_assertThisInitialized(_this))), 400);\n    return _this;\n  }\n\n  _createClass(BranchesForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.branch) {\n        this.getLanLot(this.props.branch);\n      }\n\n      this.setState({\n        loaded: true\n      });\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"getLanLot\",\n    value: function getLanLot() {\n      var _this2 = this;\n\n      var branch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var street_name = branch ? branch.street_name : this.state.street_name;\n      var street_number = branch ? branch.street_number : this.state.street_number;\n      var location = branch ? branch.location : this.state.location;\n\n      if (street_name == '' || location == '' || street_number == '') {\n        return;\n      }\n\n      var url = \"http://www.mapquestapi.com/geocoding/v1/address?key=1G0vEZOEtXkU5BW9MDLAGp22ATGiUzs8&street=\".concat(street_number, \"+\").concat(street_name.replace(' ', '+'), \"&city=\").concat(location.replace(' ', '+'), \"&country=Argentina,\");\n      var request = {\n        'method': 'GET',\n        'headers': {}\n      };\n      fetch(url, request).then(function (response) {\n        return response.json().then(function (content) {\n          var point = {\n            lat: content.results[0].locations[0].displayLatLng.lat,\n            lon: content.results[0].locations[0].displayLatLng.lng\n          };\n\n          _this2.setState({\n            lonlat: point\n          });\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      var _this3 = this;\n\n      this.setState(_defineProperty({}, name, value), function () {\n        _this3.getLanLot();\n      });\n      this.props.onChange && this.props.onChange(name, value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          branch = _this$props.branch,\n          withMap = _this$props.withMap;\n      var position = this.state.lonlat.lat && this.state.lonlat.lon ? [this.state.lonlat.lat, this.state.lonlat.lon] : null;\n      return React.createElement(Columns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 4,\n        className: \"ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Field, {\n        label: this.getText('Nombre'),\n        labelNote: this.getText('¿Cuál es el nombre de la nueva sucursal?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: branch && branch.name,\n        name: \"name\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: this.getText('Localidad'),\n        labelNote: this.getText('¿En qué localidad se ubica la nueva sucursal?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: branch && branch.location,\n        name: \"location\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: this.getText('Calle'),\n        labelNote: this.getText('¿Sobre qué calle se encuentra la nueva sucursal?'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: branch && branch.street_name,\n        name: \"street_name\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Field, {\n        label: this.getText('Número'),\n        labelNote: \"\\xBFA qu\\xE9 altura se encuentra la nueva sucursal?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: branch && branch.street_number,\n        name: \"street_number\",\n        onChange: this.handleChange,\n        className: \"is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), withMap && React.createElement(Column, {\n        isSize: 6,\n        className: \"ml-5 pl-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Map, {\n        center: position,\n        zoom: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        position: position,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BranchesForm;\n}(Component)) || _class;\n\nBranchesForm.PropTypes = {\n  branch: PropTypes.object,\n  withMap: PropTypes.bool,\n  onChange: PropTypes.func\n};\nBranchesForm.defaultProps = {\n  branch: null,\n  withMap: false,\n  onChange: null\n};\nexport default withStore(BranchesForm);","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Branches/BranchesForm.jsx"],"names":["React","Component","PropTypes","Map","TileLayer","Marker","Popup","debounce","observer","withStore","Field","TextInput","Column","Columns","translate","BranchesForm","props","state","street_name","street_number","location","lonlat","lat","lon","handleChange","bind","getLanLot","branch","setState","loaded","text","store","ui","language","url","replace","request","fetch","then","response","json","content","point","results","locations","displayLatLng","lng","sender","value","name","valid","onChange","withMap","position","getText","object","bool","func","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SACEC,KADF,EAEEC,SAFF,QAGO,kBAHP;AAKA,SACEC,MADF,EAEEC,OAFF,QAGO,SAHP;AAKA,SAASC,SAAT,QAA0B,sBAA1B;;IAGMC,Y,GADLP,Q;;;;;AAEC,wBAAYQ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,IADC;AAENC,QAAAA,GAAG,EAAE;AAFC;AAJG,KAAb;AAUA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAEA,UAAKC,SAAL,GAAiBnB,QAAQ,CAAC,MAAKmB,SAAL,CAAeD,IAAf,uDAAD,EAA4B,GAA5B,CAAzB;AAfiB;AAiBlB;;;;wCAEmB;AAClB,UAAI,KAAKT,KAAL,CAAWW,MAAf,EAAuB;AACrB,aAAKD,SAAL,CAAe,KAAKV,KAAL,CAAWW,MAA1B;AACD;;AACD,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD;;;4BAGOC,I,EAAM;AACZ,aAAOhB,SAAS,CAACgB,IAAD,EAAO,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,EAAjB,CAAoBC,QAA3B,CAAhB;AACD;;;gCAEwB;AAAA;;AAAA,UAAfN,MAAe,uEAAN,IAAM;AACvB,UAAMT,WAAW,GAAGS,MAAM,GAAGA,MAAM,CAACT,WAAV,GAAwB,KAAKD,KAAL,CAAWC,WAA7D;AACA,UAAMC,aAAa,GAAGQ,MAAM,GAAGA,MAAM,CAACR,aAAV,GAA0B,KAAKF,KAAL,CAAWE,aAAjE;AACA,UAAMC,QAAQ,GAAGO,MAAM,GAAGA,MAAM,CAACP,QAAV,GAAqB,KAAKH,KAAL,CAAWG,QAAvD;;AACA,UAAIF,WAAW,IAAI,EAAf,IAAqBE,QAAQ,IAAI,EAAjC,IAAuCD,aAAa,IAAI,EAA5D,EAAgE;AAC9D;AACD;;AAED,UAAMe,GAAG,yGAAmGf,aAAnG,cAAsHD,WAAW,CAACiB,OAAZ,CAAoB,GAApB,EAAyB,GAAzB,CAAtH,mBAA8Jf,QAAQ,CAACe,OAAT,CAAiB,GAAjB,EAAsB,GAAtB,CAA9J,wBAAT;AACA,UAAIC,OAAO,GAAG;AACZ,kBAAU,KADE;AAEZ,mBAAW;AAFC,OAAd;AAKAC,MAAAA,KAAK,CAACH,GAAD,EAAME,OAAN,CAAL,CAAoBE,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AACnC,eAAOA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAAAG,OAAO,EAAI;AACrC,cAAMC,KAAK,GAAG;AACZpB,YAAAA,GAAG,EAAEmB,OAAO,CAACE,OAAR,CAAgB,CAAhB,EAAmBC,SAAnB,CAA6B,CAA7B,EAAgCC,aAAhC,CAA8CvB,GADvC;AAEZC,YAAAA,GAAG,EAAEkB,OAAO,CAACE,OAAR,CAAgB,CAAhB,EAAmBC,SAAnB,CAA6B,CAA7B,EAAgCC,aAAhC,CAA8CC;AAFvC,WAAd;;AAIA,UAAA,MAAI,CAAClB,QAAL,CAAc;AACZP,YAAAA,MAAM,EAAEqB;AADI,WAAd;AAGD,SARM,CAAP;AASD,OAVD;AAWD;;;iCAEYK,M,EAAQC,K,EAAOC,I,EAAMC,K,EAAO;AAAA;;AACvC,WAAKtB,QAAL,qBACGqB,IADH,EACUD,KADV,GAEG,YAAM;AACP,QAAA,MAAI,CAACtB,SAAL;AACD,OAJD;AAKA,WAAKV,KAAL,CAAWmC,QAAX,IAAuB,KAAKnC,KAAL,CAAWmC,QAAX,CAAoBF,IAApB,EAA0BD,KAA1B,CAAvB;AACD;;;6BAEQ;AAAA,wBACqB,KAAKhC,KAD1B;AAAA,UACCW,MADD,eACCA,MADD;AAAA,UACSyB,OADT,eACSA,OADT;AAEP,UAAMC,QAAQ,GAAG,KAAKpC,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,IAAyB,KAAKL,KAAL,CAAWI,MAAX,CAAkBE,GAA3C,GAAiD,CAAC,KAAKN,KAAL,CAAWI,MAAX,CAAkBC,GAAnB,EAAwB,KAAKL,KAAL,CAAWI,MAAX,CAAkBE,GAA1C,CAAjD,GAAkG,IAAnH;AACA,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,CAAjB;AAAqB,QAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAK+B,OAAL,CAAa,QAAb,CAAf;AAAwC,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,0CAAb,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG3B,MAAM,IAAIA,MAAM,CAACsB,IAApC;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,QAAQ,EAAE,KAAKzB,YAAtE;AAAoF,QAAA,SAAS,EAAC,cAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAK8B,OAAL,CAAa,WAAb,CAAf;AAA2C,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,+CAAb,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG3B,MAAM,IAAIA,MAAM,CAACP,QAApC;AAA+C,QAAA,IAAI,EAAC,UAApD;AAA+D,QAAA,QAAQ,EAAE,KAAKI,YAA9E;AAA4F,QAAA,SAAS,EAAC,cAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAK8B,OAAL,CAAa,OAAb,CAAf;AAAuC,QAAA,SAAS,EAAG,KAAKA,OAAL,CAAa,kDAAb,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG3B,MAAM,IAAIA,MAAM,CAACT,WAApC;AAAkD,QAAA,IAAI,EAAC,aAAvD;AAAqE,QAAA,QAAQ,EAAE,KAAKM,YAApF;AAAkG,QAAA,SAAS,EAAC,cAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAUE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAG,KAAK8B,OAAL,CAAa,QAAb,CAAf;AAAwC,QAAA,SAAS,EAAC,qDAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAG3B,MAAM,IAAIA,MAAM,CAACR,aAApC;AAAoD,QAAA,IAAI,EAAC,eAAzD;AAAyE,QAAA,QAAQ,EAAE,KAAKK,YAAxF;AAAsG,QAAA,SAAS,EAAC,cAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF,EAeI4B,OAAO,IACP,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,CAAjB;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAEC,QAAb;AAAuB,QAAA,IAAI,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAC,2EADd;AAEE,QAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CAhBJ,CADF;AA0BD;;;;EAnGwBpD,S;;AAsG3Bc,YAAY,CAACb,SAAb,GAAyB;AACvByB,EAAAA,MAAM,EAAEzB,SAAS,CAACqD,MADK;AAEvBH,EAAAA,OAAO,EAAElD,SAAS,CAACsD,IAFI;AAGvBL,EAAAA,QAAQ,EAAEjD,SAAS,CAACuD;AAHG,CAAzB;AAMA1C,YAAY,CAAC2C,YAAb,GAA4B;AAC1B/B,EAAAA,MAAM,EAAE,IADkB;AAE1ByB,EAAAA,OAAO,EAAE,KAFiB;AAG1BD,EAAAA,QAAQ,EAAE;AAHgB,CAA5B;AAMA,eAAe1C,SAAS,CAACM,YAAD,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\n\nimport debounce from 'lodash/debounce';\n\nimport { observer } from 'mobx-react';\n\nimport { withStore } from '../../hocs';\n\nimport {\n  Field,\n  TextInput,\n} from 'shipnow-mercurio';\n\nimport {\n  Column,\n  Columns\n} from 'bloomer'\n\nimport { translate } from '../../lib/Translator'\n\n@observer\nclass BranchesForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      street_name: '',\n      street_number: '',\n      location: '',\n      lonlat: {\n        lat: null,\n        lon: null,\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.getLanLot = debounce(this.getLanLot.bind(this), 400);\n\n  }\n\n  componentDidMount() {\n    if (this.props.branch) {\n      this.getLanLot(this.props.branch);\n    }\n    this.setState({\n      loaded: true\n    });\n  }\n\n\n  getText(text) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  getLanLot(branch = null) {\n    const street_name = branch ? branch.street_name : this.state.street_name;\n    const street_number = branch ? branch.street_number : this.state.street_number;\n    const location = branch ? branch.location : this.state.location;\n    if (street_name == '' || location == '' || street_number == '') {\n      return;\n    }\n\n    const url = `http://www.mapquestapi.com/geocoding/v1/address?key=1G0vEZOEtXkU5BW9MDLAGp22ATGiUzs8&street=${ street_number }+${ street_name.replace(' ', '+') }&city=${ location.replace(' ', '+') }&country=Argentina,`\n    let request = {\n      'method': 'GET',\n      'headers': {},\n    };\n\n    fetch(url, request).then(response => {\n      return response.json().then(content => {\n        const point = {\n          lat: content.results[0].locations[0].displayLatLng.lat,\n          lon: content.results[0].locations[0].displayLatLng.lng\n        }\n        this.setState({\n          lonlat: point,\n        });\n      });\n    });\n  }\n\n  handleChange(sender, value, name, valid) {\n    this.setState({\n      [name]: value,\n    }, () => {\n      this.getLanLot();\n    });\n    this.props.onChange && this.props.onChange(name, value);\n  }\n\n  render() {\n    const { branch, withMap } = this.props\n    const position = this.state.lonlat.lat && this.state.lonlat.lon ? [this.state.lonlat.lat, this.state.lonlat.lon] : null;\n    return (\n      <Columns>\n        <Column isSize={ 4 } className=\"ml-4\">\n          <Field label={ this.getText('Nombre') } labelNote={ this.getText('¿Cuál es el nombre de la nueva sucursal?') }>\n            <TextInput value={ branch && branch.name } name=\"name\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n          <Field label={ this.getText('Localidad') } labelNote={ this.getText('¿En qué localidad se ubica la nueva sucursal?') }>\n            <TextInput value={ branch && branch.location } name=\"location\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n          <Field label={ this.getText('Calle') } labelNote={ this.getText('¿Sobre qué calle se encuentra la nueva sucursal?') }>\n            <TextInput value={ branch && branch.street_name } name=\"street_name\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n          <Field label={ this.getText('Número') } labelNote=\"¿A qué altura se encuentra la nueva sucursal?\">\n            <TextInput value={ branch && branch.street_number } name=\"street_number\" onChange={this.handleChange} className=\"is-fullwidth\"/>\n          </Field>\n        </Column>\n        { withMap && \n          <Column isSize={ 6 } className=\"ml-5 pl-5\">\n            <Map center={position} zoom={16}>\n              <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n              <Marker position={position} />\n            </Map> \n          </Column> }\n      </Columns>)\n  }\n}\n\nBranchesForm.PropTypes = {\n  branch: PropTypes.object,\n  withMap: PropTypes.bool,\n  onChange: PropTypes.func,\n}\n\nBranchesForm.defaultProps = {\n  branch: null,\n  withMap: false,\n  onChange: null,\n}\n\nexport default withStore(BranchesForm);"]},"metadata":{},"sourceType":"module"}