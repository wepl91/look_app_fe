{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Professionals/ProfessionalsList.jsx\";\n\nimport React, { Component } from 'react';\nimport { Title, Table, SelectableIcon, Text, Button, Toggle, Dropdown, DropdownToggle, DropdownPanel } from 'shipnow-mercurio';\nimport { Level, LevelLeft, Column } from 'bloomer';\nimport withStore from '../../hocs/withStore';\nimport { withToastManager } from 'react-toast-notifications';\nimport { observer } from 'mobx-react';\nimport { faSuitcase, faPencilAlt, faDotCircle, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport { ProfessionalsEditModal } from '../../components/Professionals';\nimport startCase from 'lodash/startCase';\nimport { Columns } from 'bloomer/lib/grid/Columns';\nimport { translate } from '../../lib/Translator';\n\nvar ProfessionalsList = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfessionalsList, _Component);\n\n  function ProfessionalsList(props) {\n    var _this;\n\n    _classCallCheck(this, ProfessionalsList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfessionalsList).call(this, props));\n    _this.state = {\n      showModal: false,\n      professionals: null,\n      professionalToEdit: null\n    };\n    return _this;\n  }\n\n  _createClass(ProfessionalsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        professionals: this.props.store.professionals.search({}, 'list-professionals-view', true)\n      });\n    }\n  }, {\n    key: \"handleModal\",\n    value: function handleModal(professional) {\n      this.setState(function (prevState) {\n        return {\n          showModal: !prevState.showModal,\n          professionalToEdit: professional\n        };\n      });\n    }\n  }, {\n    key: \"handleActivate\",\n    value: function handleActivate(user) {\n      var toastManager = this.props.toastManager;\n      user.activate().andThen(function (savedUser, responseError) {\n        if (responseError) {\n          toastManager.add(\"Ups! Parece que hubo un error al activar el profesional!\", {\n            appearance: 'error',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        } else {\n          var text = React.createElement(Text, {\n            color: \"warning\",\n            weight: \"medium\",\n            className: \"mt-1 mb-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"\\xA1El profesional ha sido marcado como activo!\");\n          toastManager.add(text, {\n            appearance: 'warning',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleInactivate\",\n    value: function handleInactivate(user) {\n      var toastManager = this.props.toastManager;\n      user.deactivate().andThen(function (savedUser, responseError) {\n        if (responseError) {\n          toastManager.add(\"Ups! Parece que hubo un error al desactivar el profesional!\", {\n            appearance: 'error',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        } else {\n          var text = React.createElement(Text, {\n            color: \"warning\",\n            weight: \"medium\",\n            className: \"mt-1 mb-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"\\xA1El profesional ha sido marcado como inactivo!\");\n          toastManager.add(text, {\n            appearance: 'warning',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this2 = this;\n\n      var data = this.state.professionals.toArray();\n      var columns = [{\n        label: '',\n        content: function content(data) {\n          return React.createElement(SelectableIcon, {\n            className: \"ml-2\",\n            icon: faSuitcase,\n            readOnly: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        },\n        size: 'is-1'\n      }, {\n        label: this.getText('Nombre'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, startCase(data.fullName || _this2.getText('- sin nombre -')));\n        },\n        size: 'is-2'\n      }, {\n        label: this.getText('Teléfono'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, data.phone || _this2.getText('- sin teléfono -'));\n        },\n        size: 'is-1'\n      }, {\n        label: this.getText('Email'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, data.email || _this2.getText('- sin email -'));\n        },\n        size: 'is-2'\n      }, {\n        label: this.getText('Sucursal'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, data.branch.name || data.branch.cookedAddress);\n        },\n        size: 'is-2'\n      }, {\n        label: this.getText('Servicios ofrecidos'),\n        content: function content(data) {\n          return data.professionalServices.length > 0 ? React.createElement(Dropdown, {\n            className: \"is-fullwidth\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, React.createElement(DropdownToggle, {\n            className: \"is-fullwidth\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"\".concat(_this2.getText('Servicios'), \" \"), React.createElement(FontAwesomeIcon, {\n            className: \"mr-1\",\n            icon: faChevronDown,\n            size: \"xs\",\n            fixedWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }))), React.createElement(DropdownPanel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, data.professionalServices.map(function (name) {\n            return React.createElement(Text, {\n              className: \"mb-1\",\n              size: \"md\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, React.createElement(FontAwesomeIcon, {\n              className: \"mr-1\",\n              icon: faDotCircle,\n              size: \"xs\",\n              fixedWidth: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }), name);\n          }))) : React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, _this2.getText('- Sin servicios -'));\n        }\n      }, {\n        label: this.getText('Días de trabajo'),\n        content: function content(data) {\n          return React.createElement(Dropdown, {\n            className: \"is-fullwidth\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156\n            },\n            __self: this\n          }, React.createElement(DropdownToggle, {\n            className: \"is-fullwidth\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157\n            },\n            __self: this\n          }, React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \"\".concat(_this2.getText('Días y horarios'), \"  \"), React.createElement(FontAwesomeIcon, {\n            className: \"mr-1\",\n            icon: faChevronDown,\n            size: \"xs\",\n            fixedWidth: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          }))), React.createElement(DropdownPanel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, data.cookedWorkingDays.map(function (days) {\n            return React.createElement(React.Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }, React.createElement(Columns, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166\n              },\n              __self: this\n            }, React.createElement(Column, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }, React.createElement(Text, {\n              size: \"md\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168\n              },\n              __self: this\n            }, _this2.getText(days.day))), React.createElement(Column, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170\n              },\n              __self: this\n            }, React.createElement(Text, {\n              className: \"has-text-right\",\n              size: \"md\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 171\n              },\n              __self: this\n            }, \"\".concat(days.begin, \" \").concat(_this2.getText('a'), \" \").concat(days.end)))));\n          })));\n        }\n      }, {\n        label: this.getText('Activo'),\n        content: function content(data) {\n          return React.createElement(Toggle, {\n            checked: data.isActive,\n            checkedColor: \"success\",\n            unCheckedColor: \"delete\",\n            onChange: function onChange() {\n              return data.isActive ? _this2.handleInactivate(data) : _this2.handleActivate(data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          });\n        },\n        size: 'is-1'\n      }, {\n        label: '',\n        content: function content(data) {\n          return React.createElement(Button, {\n            icon: faPencilAlt,\n            kind: \"link\",\n            onClick: function onClick() {\n              return _this2.handleModal(data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          });\n        },\n        size: 'is-1',\n        align: 'center'\n      }];\n      return React.createElement(Table, {\n        columns: columns,\n        data: data,\n        striped: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.professionals || !this.state.professionals.isOk()) {\n        return this.getText('Cargando profesionales..');\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.getText('Lista de profesionales')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), this.renderTable(), this.state.showModal && React.createElement(ProfessionalsEditModal, {\n        professional: this.state.professionalToEdit,\n        onClose: function onClose() {\n          return _this3.handleModal(null);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProfessionalsList;\n}(Component)) || _class;\n\nexport default withToastManager(withStore(ProfessionalsList));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Professionals/ProfessionalsList.jsx"],"names":["React","Component","Title","Table","SelectableIcon","Text","Button","Toggle","Dropdown","DropdownToggle","DropdownPanel","Level","LevelLeft","Column","withStore","withToastManager","observer","faSuitcase","faPencilAlt","faDotCircle","faChevronDown","FontAwesomeIcon","ProfessionalsEditModal","startCase","Columns","translate","ProfessionalsList","props","state","showModal","professionals","professionalToEdit","setState","store","search","professional","prevState","user","toastManager","activate","andThen","savedUser","responseError","add","appearance","autoDismiss","pauseOnHover","text","deactivate","data","toArray","columns","label","content","size","getText","fullName","phone","email","branch","name","cookedAddress","professionalServices","length","map","cookedWorkingDays","days","day","begin","end","isActive","handleInactivate","handleActivate","handleModal","align","ui","language","isOk","renderTable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Title,\n  Table,\n  SelectableIcon,\n  Text,\n  Button,\n  Toggle,\n  Dropdown,\n  DropdownToggle,\n  DropdownPanel,\n} from 'shipnow-mercurio';\n\nimport {\n  Level,\n  LevelLeft,\n  Column\n} from 'bloomer';\n\nimport withStore from '../../hocs/withStore';\nimport { withToastManager } from 'react-toast-notifications';\n\nimport { observer } from 'mobx-react';\n\nimport { faSuitcase, faPencilAlt, faDotCircle, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\n\nimport { ProfessionalsEditModal } from '../../components/Professionals';\n\nimport startCase from 'lodash/startCase';\nimport { Columns } from 'bloomer/lib/grid/Columns';\n\nimport { translate } from '../../lib/Translator'\n\n@observer\nclass ProfessionalsList extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showModal: false,\n      professionals: null,\n      professionalToEdit: null,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      professionals: this.props.store.professionals.search({}, 'list-professionals-view', true),\n    })\n  }\n\n  handleModal( professional ) {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n      professionalToEdit: professional,\n    }))\n  }\n\n  handleActivate( user ) {\n    const { toastManager } = this.props;\n    user.activate().andThen( (savedUser, responseError) => {\n      if (responseError) {\n        toastManager.add(\"Ups! Parece que hubo un error al activar el profesional!\", {\n          appearance: 'error',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n      else {\n        let text = <Text color=\"warning\" weight=\"medium\" className=\"mt-1 mb-1\">¡El profesional ha sido marcado como activo!</Text>\n        toastManager.add(text, {\n          appearance: 'warning',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n    })\n  }\n\n  handleInactivate( user ) {\n    const { toastManager } = this.props;\n    user.deactivate().andThen( (savedUser, responseError) => {\n      if (responseError) {\n        toastManager.add(\"Ups! Parece que hubo un error al desactivar el profesional!\", {\n          appearance: 'error',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n      else {\n        let text = <Text color=\"warning\" weight=\"medium\" className=\"mt-1 mb-1\">¡El profesional ha sido marcado como inactivo!</Text>\n        toastManager.add(text, {\n          appearance: 'warning',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n    })\n  }\n\n  renderTable() {\n    const data = this.state.professionals.toArray();\n    const columns = [\n      {\n        label: '',\n        content: (data) => (<SelectableIcon  className=\"ml-2\" icon={ faSuitcase } readOnly/>),\n        size: 'is-1'\n      },\n      {\n        label: this.getText('Nombre'),\n        content: (data) => (<Text>{ startCase( data.fullName || this.getText('- sin nombre -')  )}</Text>),\n        size: 'is-2'\n      },\n      {\n        label: this.getText('Teléfono'),\n        content: (data) => (<Text>{ data.phone || this.getText('- sin teléfono -') }</Text>),\n        size: 'is-1',\n      },\n      {\n        label: this.getText('Email'),\n        content: (data) => (<Text>{ data.email || this.getText('- sin email -') }</Text>),\n        size: 'is-2'\n      },\n      {\n        label: this.getText('Sucursal'),\n        content: (data) => (<Text>{ data.branch.name || data.branch.cookedAddress }</Text>),\n        size: 'is-2'\n      },\n      {\n        label: this.getText('Servicios ofrecidos'),\n        content: (data) => (\n          data.professionalServices.length > 0 ?\n          <Dropdown className=\"is-fullwidth\">\n            <DropdownToggle className=\"is-fullwidth\">\n              <Text>\n                { `${ this.getText('Servicios') } ` }\n                <FontAwesomeIcon className=\"mr-1\" icon={ faChevronDown } size=\"xs\" fixedWidth/>\n              </Text>\n            </DropdownToggle>\n            <DropdownPanel>\n            {data.professionalServices.map(name => (\n                  <Text className=\"mb-1\" size=\"md\" ><FontAwesomeIcon className=\"mr-1\" icon={ faDotCircle } size=\"xs\" fixedWidth/>{ name }</Text> \n            ))}\n            </DropdownPanel>\n        </Dropdown>\n        :\n        <Text>{ this.getText('- Sin servicios -') }</Text>\n        ),\n      },\n      {\n        label: this.getText('Días de trabajo'),\n        content: (data) => (\n          <Dropdown className=\"is-fullwidth\">\n            <DropdownToggle className=\"is-fullwidth\">\n              <Text>\n                {`${ this.getText('Días y horarios') }  `} \n                <FontAwesomeIcon className=\"mr-1\" icon={ faChevronDown } size=\"xs\" fixedWidth/>\n              </Text>\n            </DropdownToggle>\n            <DropdownPanel>\n            {data.cookedWorkingDays.map(days => (\n              <React.Fragment>\n              <Columns>\n                <Column>\n                  <Text size=\"md\" >{ this.getText(days.day) }</Text> \n                </Column>\n                <Column>\n                  <Text className=\"has-text-right\" size=\"md\" >{ `${days.begin} ${ this.getText('a') } ${days.end}` }</Text> \n                </Column>\n                </Columns>\n              </React.Fragment>\n            ))}\n            </DropdownPanel>\n        </Dropdown>\n        ),\n      },\n      {\n        label: this.getText('Activo'),\n        content: (data) => (<Toggle checked={ data.isActive } checkedColor=\"success\" unCheckedColor=\"delete\" onChange={ () => (data.isActive ? this.handleInactivate(data) : this.handleActivate(data)) }/>),\n        size: 'is-1',\n      },\n      {\n        label: '',\n        content: (data) => (<Button icon={ faPencilAlt } kind=\"link\" onClick={ () => (this.handleModal(data)) }/>),\n        size: 'is-1',\n        align: 'center'\n      },\n    ]\n\n    return <Table columns={ columns } data={ data } striped={ false }/>\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  render() {\n    if (!this.state.professionals || !this.state.professionals.isOk()) {\n      return this.getText('Cargando profesionales..');\n    }\n    return(\n      <React.Fragment>\n        <Level>\n          <LevelLeft>\n            <Title>{ this.getText('Lista de profesionales') }</Title>\n          </LevelLeft>\n        </Level>\n        <hr/>\n        { this.renderTable() }\n        { this.state.showModal && <ProfessionalsEditModal professional={ this.state.professionalToEdit } onClose={ () => ( this.handleModal(null) ) }/> }\n      </React.Fragment> )\n  }\n\n}\n\nexport default withToastManager(withStore(ProfessionalsList));"]},"metadata":{},"sourceType":"module"}