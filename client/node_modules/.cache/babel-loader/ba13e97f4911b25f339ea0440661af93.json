{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/WorkingHoursSelector.jsx\";\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Columns, Column, Checkbox } from 'bloomer';\nimport { Select, Text } from 'shipnow-mercurio';\nimport moment from 'moment';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport DaysSelector from '../../components/DaysSelector/DaysSelector';\nimport { observer } from 'mobx-react';\n\nvar WorkingHoursSelector = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WorkingHoursSelector, _Component);\n\n  function WorkingHoursSelector(props) {\n    var _this;\n\n    _classCallCheck(this, WorkingHoursSelector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WorkingHoursSelector).call(this, props));\n    _this.state = {\n      startingDate: '',\n      finishingDate: '',\n      days: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDays = _this.handleDays.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(WorkingHoursSelector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.defaultProfessional) {\n        this.setState({\n          startingDate: this.props.defaultProfessional.beginHour,\n          finishingDate: this.props.defaultProfessional.endHour,\n          days: this.props.defaultProfessional.rawWorkingDays\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      if (name == 'starting') {\n        this.setState({\n          startingDate: value\n        });\n      } else if (name == 'finishing') {\n        this.setState({\n          finishingDate: value\n        });\n      }\n    }\n  }, {\n    key: \"handleDays\",\n    value: function handleDays(received) {\n      var newArray = Array.from(this.state.days);\n      debugger;\n\n      if (newArray.includes(received)) {\n        newArray = newArray.filter(function (item) {\n          return item !== received;\n        });\n      } else {\n        newArray.push(received);\n      }\n\n      debugger;\n      this.setState({\n        days: newArray\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.days != prevState.days || this.state.startingDate != prevState.startingDate || this.state.finishingDate != prevState.finishingDate) {\n        this.props.onChange([this.state.days, this.state.startingDate, this.state.finishingDate]);\n      }\n    } //1 hour intervals\n\n  }, {\n    key: \"hoursBetweenDates\",\n    value: function hoursBetweenDates(startDate, endDate) {\n      var hours = [];\n      var currDate = moment(startDate).startOf('minute').subtract(60, 'minutes');\n      var lastDate = moment(endDate).startOf('minute').add(60, 'minutes');\n\n      while (currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n        hours.push(currDate.clone().format('HH:mm'));\n      }\n\n      return hours;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hourList = this.hoursBetweenDates(this.props.startingDate, this.props.finishingDate);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Columns, {\n        className: \"is-gapless is-marginless\",\n        isCentered: true,\n        isVCentered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Column, {\n        isSize: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(DaysSelector, {\n        defaultProfessional: this.props.defaultProfessional,\n        handleDays: this.handleDays,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(Column, {\n        isSize: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Select, {\n        placeholder: \"Entrada\",\n        className: \"is-fullwidth\",\n        borderless: true,\n        icon: faChevronDown,\n        value: this.state.startingDate,\n        name: \"starting\",\n        onChange: this.handleChange,\n        options: hourList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Select, {\n        placeholder: \"Salida\",\n        className: \"is-fullwidth\",\n        borderless: true,\n        icon: faChevronDown,\n        value: this.state.finishingDate,\n        name: \"finishing\",\n        onChange: this.handleChange,\n        options: hourList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return WorkingHoursSelector;\n}(Component)) || _class;\n\nWorkingHoursSelector.PropTypes = {\n  startingDate: PropTypes.object,\n  finishingDate: PropTypes.object,\n  days: PropTypes.array,\n  defaultProfessional: PropTypes.object,\n  onChange: PropTypes.func,\n  validate: PropTypes.func\n};\nWorkingHoursSelector.defaultProps = {\n  startingDate: null,\n  finishingDate: null,\n  days: null,\n  onChange: null,\n  validate: null\n};\nexport default WorkingHoursSelector;","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/WorkingHoursSelector.jsx"],"names":["React","Component","PropTypes","Columns","Column","Checkbox","Select","Text","moment","faChevronDown","DaysSelector","observer","WorkingHoursSelector","props","state","startingDate","finishingDate","days","handleChange","bind","handleDays","defaultProfessional","setState","beginHour","endHour","rawWorkingDays","sender","value","name","valid","received","newArray","Array","from","includes","filter","item","push","prevProps","prevState","onChange","startDate","endDate","hours","currDate","startOf","subtract","lastDate","add","diff","clone","format","hourList","hoursBetweenDates","object","array","func","validate","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Columns,\n  Column,\n  Checkbox\n} from 'bloomer';\n\nimport {\n  Select,\n  Text\n} from 'shipnow-mercurio';\n\nimport moment from 'moment';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport DaysSelector from '../../components/DaysSelector/DaysSelector';\n\nimport { observer } from 'mobx-react';\n\n @observer\nclass WorkingHoursSelector extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      startingDate: '',\n      finishingDate: '',\n      days: []\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDays   = this.handleDays.bind(this);\n  }\n\n  componentDidMount(){\n    \n    if(this.props.defaultProfessional){\n      this.setState({\n        startingDate: this.props.defaultProfessional.beginHour,\n        finishingDate: this.props.defaultProfessional.endHour,\n        days: this.props.defaultProfessional.rawWorkingDays\n      })\n    }\n  }\n\n  handleChange( sender, value, name, valid ) {\n    if (name == 'starting') {\n      this.setState({\n        startingDate: value\n      })\n    }\n    else if (name == 'finishing') {\n      this.setState({\n        finishingDate: value\n      })\n    } \n  }\n\n  handleDays( received ) {\n    let newArray = Array.from(this.state.days)\n    debugger\n    if (newArray.includes(received)){\n      newArray = newArray.filter(item => item !== received)\n    }\n    else{\n      newArray.push(received)\n    }\n    debugger\n    this.setState({\n      days: newArray,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.days != prevState.days || this.state.startingDate != prevState.startingDate || this.state.finishingDate != prevState.finishingDate) {\n      this.props.onChange([this.state.days , this.state.startingDate, this.state.finishingDate]);\n    }\n  }\n\n  //1 hour intervals\n  hoursBetweenDates(startDate, endDate) {\n    let hours = [];\n  \n    let currDate = moment(startDate).startOf('minute').subtract(60, 'minutes');\n    let lastDate = moment(endDate).startOf('minute').add(60, 'minutes');\n  \n    while(currDate.add(60, 'minutes').diff(lastDate, 'minutes') < 0) {\n        hours.push(currDate.clone().format('HH:mm'));\n    }\n  \n    return hours;\n  }\n\n  render() {\n    let hourList = this.hoursBetweenDates(this.props.startingDate, this.props.finishingDate)\n\n    return(\n      <React.Fragment>\n        <Columns className=\"is-gapless is-marginless\" isCentered isVCentered>\n          <Column isSize={6}>\n            <DaysSelector defaultProfessional={ this.props.defaultProfessional } handleDays={ this.handleDays }/>\n          </Column>\n          <Column isSize={6}>\n            <Select placeholder=\"Entrada\" \n                    className=\"is-fullwidth\"\n                    borderless icon={ faChevronDown } \n                    value = {this.state.startingDate}\n                    name=\"starting\" onChange={ this.handleChange } options={ hourList } />\n            <Select placeholder=\"Salida\"\n                    className=\"is-fullwidth\"\n                    borderless icon={ faChevronDown }\n                    value = {this.state.finishingDate}\n                    name=\"finishing\" onChange={ this.handleChange } options={ hourList } />\n          </Column>\n        </Columns>\n      </React.Fragment>)\n  }\n}\n\nWorkingHoursSelector.PropTypes = {\n  startingDate: PropTypes.object,\n  finishingDate: PropTypes.object,\n  days: PropTypes.array,\n  defaultProfessional: PropTypes.object,\n  onChange: PropTypes.func,\n  validate: PropTypes.func\n}\n\nWorkingHoursSelector.defaultProps = {\n  startingDate: null,\n  finishingDate: null,\n  days: null,\n  onChange: null,\n  validate: null\n}\n\nexport default WorkingHoursSelector;"]},"metadata":{},"sourceType":"module"}