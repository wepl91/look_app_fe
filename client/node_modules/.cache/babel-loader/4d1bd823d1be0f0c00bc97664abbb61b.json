{"ast":null,"code":"import _defineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class;\n\nimport { Model } from '../lib';\nimport { action, computed } from 'mobx';\nimport moment from 'moment';\nimport startCase from 'lodash/startCase';\nvar Appointment = (_class =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Appointment, _Model);\n\n  function Appointment(attributes, store) {\n    var _defaultAttributes;\n\n    _classCallCheck(this, Appointment);\n\n    var defaultAttributes = (_defaultAttributes = {\n      local: 'casa',\n      status: 'OPEN',\n      professional: '',\n      client: null\n    }, _defineProperty(_defaultAttributes, \"status\", ''), _defineProperty(_defaultAttributes, \"dayHour\", ''), _defineProperty(_defaultAttributes, \"services\", []), _defaultAttributes);\n    var attrs = Object.assign(defaultAttributes, attributes);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Appointment).call(this, attrs, store));\n  }\n\n  _createClass(Appointment, [{\n    key: \"afterSetData\",\n    value: function afterSetData() {\n      if (this.dayHour) {\n        this.dayHour = moment(this.dayHour);\n      }\n    }\n  }, {\n    key: \"setStatus\",\n    value: function setStatus(status) {\n      this.beginUpdate();\n      this.status.name = status;\n      this.endUpdate();\n      return this;\n    }\n  }, {\n    key: \"clientFullName\",\n    get: function get() {\n      if (!this.client) {\n        return '';\n      }\n\n      return \"\".concat(startCase(this.client.name), \" \").concat(startCase(this.client.surname));\n    }\n  }, {\n    key: \"totalPrice\",\n    get: function get() {\n      var total = 0;\n\n      if (!this.services || this.services.length == 0) {\n        return 0;\n      }\n\n      this.services.map(function (service) {\n        return total += parseInt(service.price);\n      });\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this.status.name === 'OPEN';\n    }\n  }, {\n    key: \"isPaid\",\n    get: function get() {\n      return this.status.name === 'PAID';\n    }\n  }, {\n    key: \"isCancelled\",\n    get: function get() {\n      return this.status.name === 'EXPIRED';\n    }\n  }, {\n    key: \"statusClassName\",\n    get: function get() {\n      var classNames = {\n        'OPEN': 'open',\n        'PAID': 'approved',\n        'CANCELED': 'cancelled',\n        'EXPIRED': 'cancelled'\n      };\n      return classNames[this.status.name];\n    }\n  }, {\n    key: \"hour\",\n    get: function get() {\n      return this.dayHour.format(\"HH:mm\");\n    }\n  }]);\n\n  return Appointment;\n}(Model), (_applyDecoratedDescriptor(_class.prototype, \"setStatus\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setStatus\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"clientFullName\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"clientFullName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"totalPrice\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"totalPrice\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isOpen\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isOpen\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isPaid\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isPaid\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isCancelled\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isCancelled\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isCancelled\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isCancelled\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"statusClassName\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"statusClassName\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"hour\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"hour\"), _class.prototype)), _class);\nexport { Appointment as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/models/Appointment.js"],"names":["Model","action","computed","moment","startCase","Appointment","attributes","store","defaultAttributes","local","status","professional","client","attrs","Object","assign","dayHour","beginUpdate","name","endUpdate","surname","total","services","length","map","service","parseInt","price","classNames","format"],"mappings":";;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,QAAtB;AAEA,SACEC,MADF,EAEEC,QAFF,QAGO,MAHP;AAKA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;IAEqBC,W;;;;;AACnB,uBAAaC,UAAb,EAAyBC,KAAzB,EAAiC;AAAA;;AAAA;;AAE/B,QAAIC,iBAAiB;AACnBC,MAAAA,KAAK,EAAE,MADY;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,YAAY,EAAE,EAHK;AAInBC,MAAAA,MAAM,EAAE;AAJW,qDAKX,EALW,kDAMV,EANU,mDAOT,EAPS,sBAArB;AAUA,QAAIC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAeP,iBAAf,EAAkCF,UAAlC,CAAZ;AAZ+B,oFAczBO,KAdyB,EAclBN,KAdkB;AAiBhC;;;;mCAEc;AACb,UAAI,KAAKS,OAAT,EAAkB;AAChB,aAAKA,OAAL,GAAeb,MAAM,CAAC,KAAKa,OAAN,CAArB;AACD;AACF;;;8BAGUN,M,EAAS;AAClB,WAAKO,WAAL;AACA,WAAKP,MAAL,CAAYQ,IAAZ,GAAmBR,MAAnB;AACA,WAAKS,SAAL;AACA,aAAO,IAAP;AACD;;;wBAGoB;AACnB,UAAI,CAAC,KAAKP,MAAV,EAAkB;AAChB,eAAO,EAAP;AACD;;AACD,uBAAWR,SAAS,CAAC,KAAKQ,MAAL,CAAYM,IAAb,CAApB,cAA4Cd,SAAS,CAAC,KAAKQ,MAAL,CAAYQ,OAAb,CAArD;AACD;;;wBAGgB;AACf,UAAIC,KAAK,GAAG,CAAZ;;AACA,UAAI,CAAC,KAAKC,QAAN,IAAkB,KAAKA,QAAL,CAAcC,MAAd,IAAwB,CAA9C,EAAiD;AAC/C,eAAO,CAAP;AACD;;AAED,WAAKD,QAAL,CAAcE,GAAd,CAAmB,UAAAC,OAAO;AAAA,eAAMJ,KAAK,IAAIK,QAAQ,CAACD,OAAO,CAACE,KAAT,CAAvB;AAAA,OAA1B;AAED;;;wBAGY;AACX,aAAO,KAAKjB,MAAL,CAAYQ,IAAZ,KAAqB,MAA5B;AACD;;;wBAGY;AACX,aAAO,KAAKR,MAAL,CAAYQ,IAAZ,KAAqB,MAA5B;AACD;;;wBAQiB;AAChB,aAAO,KAAKR,MAAL,CAAYQ,IAAZ,KAAqB,SAA5B;AACD;;;wBAGqB;AACpB,UAAMU,UAAU,GAAG;AACjB,gBAAQ,MADS;AAEjB,gBAAQ,UAFS;AAGjB,oBAAY,WAHK;AAIjB,mBAAW;AAJM,OAAnB;AAOA,aAAOA,UAAU,CAAC,KAAKlB,MAAL,CAAYQ,IAAb,CAAjB;AACD;;;wBAGU;AACT,aAAO,KAAKF,OAAL,CAAaa,MAAb,CAAoB,OAApB,CAAP;AACD;;;;EAxFsC7B,K,8DA0BtCC,M,qJAQAC,Q,sJAQAA,Q,8IAWAA,Q,0IAKAA,Q,+IAKAA,Q,oJAKAA,Q,wJAKAA,Q,iJAYAA,Q;SArFkBG,W","sourcesContent":["import { Model } from '../lib';\n\nimport {\n  action,\n  computed,\n} from 'mobx'\n\nimport moment from 'moment';\nimport startCase from 'lodash/startCase';\n\nexport default class Appointment extends Model {\n  constructor( attributes, store ) {\n\n    let defaultAttributes = {\n      local: 'casa',\n      status: 'OPEN',\n      professional: '',\n      client: null,\n      status: '',\n      dayHour: '',\n      services: [], \n    };\n    \n    let attrs = Object.assign( defaultAttributes, attributes );\n    \n    super(attrs, store);\n    \n    \n  }\n  \n  afterSetData() {\n    if (this.dayHour) {\n      this.dayHour = moment(this.dayHour);\n    }\n  }\n\n  @action\n  setStatus( status ) {\n    this.beginUpdate();\n    this.status.name = status;\n    this.endUpdate();\n    return this;  \n  }\n\n  @computed\n  get clientFullName() {\n    if (!this.client) {\n      return '';\n    }\n    return `${ startCase(this.client.name) } ${ startCase(this.client.surname) }`\n  }\n\n  @computed\n  get totalPrice() {\n    let total = 0;\n    if (!this.services || this.services.length == 0) {\n      return 0;\n    }\n\n    this.services.map( service => ( total += parseInt(service.price) ));\n\n  }\n\n  @computed\n  get isOpen() {\n    return this.status.name === 'OPEN';\n  }\n\n  @computed\n  get isPaid() {\n    return this.status.name === 'PAID';\n  }\n\n  @computed\n  get isCancelled() {\n    return this.status.name === 'CANCELED';\n  }\n\n  @computed\n  get isCancelled() {\n    return this.status.name === 'EXPIRED';\n  }\n\n  @computed\n  get statusClassName() {\n    const classNames = {\n      'OPEN': 'open',\n      'PAID': 'approved',\n      'CANCELED': 'cancelled',\n      'EXPIRED': 'cancelled'\n    }\n\n    return classNames[this.status.name];\n  }\n\n  @computed\n  get hour() {\n    return this.dayHour.format(\"HH:mm\");\n  }\n\n}"]},"metadata":{},"sourceType":"module"}