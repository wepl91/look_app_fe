{"ast":null,"code":"import _initializerDefineProperty from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3;\n\nimport { action, observable, computed } from 'mobx';\nimport { RESTClient, LocalStorageClient } from '../lib';\nimport { UIStore, UsersStore, RolesStore, ServicesStore, ProfessionalsStore, AppointmentsStore, ClientsStore, BranchesStore, ConfigsStore } from './';\nvar AppStore = (_class =\n/*#__PURE__*/\nfunction () {\n  function AppStore() {\n    var _this = this;\n\n    _classCallCheck(this, AppStore);\n\n    _initializerDefineProperty(this, \"isLoading\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loggedInUser\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"serviceErrors\", _descriptor3, this);\n\n    this.api_token_key = \"la_\".concat(\"http://localhost:8080\", \"_token\");\n    this.logged_user_key = \"la_\".concat(\"http://localhost:8080\", \"_user\");\n    this.settings = {\n      refreshRate: 5 // in minutes\n\n    };\n    var storedToken = localStorage.getItem(this.api_token_key);\n    var storedUser = localStorage.getItem(this.logged_user_key); //Set by default when app is up in spanish\n    // create adapters\n\n    this.APIClient = new RESTClient(\"http://localhost:8080\", storedToken);\n    this.localStorageClient = new LocalStorageClient('la'); // initialize stores\n\n    this.stores = new Map(); // Domain stores\n\n    this.stores.set('users', new UsersStore(this.APIClient, this));\n    this.stores.set('roles', new RolesStore(this.APIClient, this));\n    this.stores.set('clients', new ClientsStore(this.APIClient, this));\n    this.stores.set('services', new ServicesStore(this.APIClient, this));\n    this.stores.set('branches', new BranchesStore(this.APIClient, this));\n    this.stores.set('configs', new ConfigsStore(this.APIClient, this));\n    this.stores.set('professionals', new ProfessionalsStore(this.APIClient, this));\n    this.stores.set('appointments', new AppointmentsStore(this.APIClient, this)); // UI stores\n\n    this.stores.set('ui', new UIStore(this.localStorageClient, this)); // create easy stores getters\n\n    this.stores.forEach(function (store, key) {\n      Object.defineProperty(_this, key, {\n        get: function get(v) {\n          return store;\n        }\n      });\n      store.updateThreshold = _this.settings.refreshRate;\n    }); // is already a session open?\n    //if ( storedToken && storedUser ) {\n\n    if (storedUser) {\n      this.stores.get('configs').search({}, 'configs').andThen(function (configsResponse) {\n        _this.stores.get('ui').setConfigs(configsResponse.toArray());\n\n        _this.isLoading = false;\n\n        _this.users.get(storedUser).andThen(function (res, err) {\n          if (err) {\n            // something went terrible wrong.... \n            _this.signOut();\n\n            _this.isLoading = false;\n          } else {\n            _this.setCurrentUser(res);\n\n            _this.isLoading = false;\n          }\n        });\n      });\n    } else {\n      this.isLoading = false;\n    }\n  }\n\n  _createClass(AppStore, [{\n    key: \"signOut\",\n    value: function signOut() {\n      localStorage.removeItem(this.api_token_key);\n      localStorage.removeItem(this.logged_user_key);\n      this.APIClient.token = null;\n      this.loggedInUser = null;\n      this.stores.forEach(function (store, key) {\n        store.clear();\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn(user, password) {\n      var _this2 = this;\n\n      return this.authenticate(user, password).then(function (res) {\n        _this2.saveInfo(res);\n      });\n    }\n  }, {\n    key: \"authenticate\",\n    value: function authenticate(user, password) {\n      return this.APIClient.authenticate(user, password);\n    }\n  }, {\n    key: \"saveInfo\",\n    value: function saveInfo(data) {\n      this.setCurrentUser(this.users.store(data)); // save the info in storage\n\n      localStorage.setItem(this.api_token_key, this.APIClient.token);\n      localStorage.setItem(this.logged_user_key, this.loggedInUser.id);\n      localStorage.setItem('language', 'Espa√±ol');\n    }\n  }, {\n    key: \"recoverPassword\",\n    value: function recoverPassword(email) {\n      return this.APIClient.password_recovery(email);\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(token, email) {\n      return this.APIClient.update_password(token, email);\n    }\n  }, {\n    key: \"setCurrentUser\",\n    value: function setCurrentUser(user) {\n      this.isLoading = false;\n      this.loggedInUser = user;\n    }\n  }, {\n    key: \"getCurrentTheme\",\n    value: function getCurrentTheme() {\n      var primaryColors = {\n        // brand colors\n        base: '#e30000',\n        dark: '#b51b1b',\n        darker: '#830d0d',\n        darkest: '#621818',\n        black: '#520000',\n        light: '#dd8989',\n        lighter: '#e5c4c4',\n        lightest: '#f0e2e2',\n        white: '#faf2f2'\n      };\n      var neutralColors = {\n        black: '#2E3A41',\n        gray0: '#4B555B',\n        gray1: '#666F74',\n        gray2: '#82898D',\n        gray3: '#9DA3A7',\n        gray4: '#B8BDBF',\n        gray5: '#D4D6D8',\n        gray6: '#E7E8EA',\n        gray7: '#F0F1F2',\n        gray8: '#F7F9F9',\n        gray9: '#FDFEFF',\n        white: '#FFFFFF'\n      };\n      var paletteColors = {\n        blue: '#209CEE',\n        blueLight: '#BBE1F9',\n        blueDark: '#2479B0',\n        green: '#23D160',\n        greenLight: '#BCF1CF',\n        greenDark: '#269B54',\n        yellow: '#FFDC00',\n        yellowLight: '#FFF4B2',\n        yellowDark: '#B4A217',\n        orange: '#FF9F1C',\n        orangeLight: '#FFE2BA',\n        orangeDark: '#B47B29',\n        red: '#FF3860',\n        redLight: '#FFC3CF',\n        redDark: '#B43854',\n        purple: '#B053E0',\n        purpleLight: '#E7CBF5',\n        purpleDark: '#814AA7',\n        blackDark: neutralColors.gray0,\n        black: neutralColors.gray1,\n        blackLight: neutralColors.gray2,\n        grayDark: neutralColors.gray3,\n        gray: neutralColors.gray4,\n        grayLight: neutralColors.gray5,\n        whiteDark: neutralColors.gray6,\n        white: neutralColors.gray7,\n        whiteLight: neutralColors.gray8\n      };\n      var actionColors = {\n        primary: primaryColors.dark,\n        secondary: primaryColors.light,\n        confirm: paletteColors.green,\n        warning: paletteColors.orange,\n        remove: paletteColors.red,\n        internal: paletteColors.purple,\n        primaryLight: primaryColors.light,\n        secondaryLight: primaryColors.lightest,\n        confirmLight: paletteColors.greenLight,\n        warningLight: paletteColors.orangeLight,\n        removeLight: paletteColors.redLight,\n        internalLight: paletteColors.purpleLight,\n        primaryDark: primaryColors.darkest,\n        secondaryDark: primaryColors.darker,\n        confirmDark: paletteColors.greenDark,\n        warningDark: paletteColors.orangeDark,\n        removeDark: paletteColors.redDark,\n        internalDark: paletteColors.purpleDark\n      };\n      var messageColors = {\n        information: paletteColors.blue,\n        success: paletteColors.green,\n        warning: paletteColors.orange,\n        error: paletteColors.red,\n        attention: paletteColors.purple,\n        informationLight: paletteColors.blueLight,\n        successLight: paletteColors.greenLight,\n        warningLight: paletteColors.orangeLight,\n        errorLight: paletteColors.redLight,\n        attentionLight: paletteColors.purpleLight,\n        informationDark: paletteColors.blueDark,\n        successDark: paletteColors.greenDark,\n        warningDark: paletteColors.orangeDark,\n        errorDark: paletteColors.redDark,\n        attentionDark: paletteColors.purpleDark\n      };\n      var statusColors = {\n        inProgress: paletteColors.blue,\n        done: paletteColors.green,\n        toDo: paletteColors.purple,\n        failed: paletteColors.red,\n        new: paletteColors.orange,\n        noStatus: neutralColors.gray5,\n        inProgressLight: paletteColors.blueLight,\n        doneLight: paletteColors.greenLight,\n        toDoLight: paletteColors.purpleLight,\n        failedLight: paletteColors.redLight,\n        newLight: paletteColors.orangeLight,\n        noStatusLight: neutralColors.gray7,\n        inProgressDark: paletteColors.blueDark,\n        doneDark: paletteColors.greenDark,\n        toDoDark: paletteColors.purpleDark,\n        failedDark: paletteColors.redDark,\n        newDark: paletteColors.orangeDark,\n        noStatusDark: neutralColors.gray3\n      };\n      var availabilityColors = {\n        unavailable: primaryColors.lighter,\n        available: paletteColors.green,\n        busy: paletteColors.red,\n        unavailableLight: primaryColors.lightest,\n        availableLight: paletteColors.greenLight,\n        busyLight: paletteColors.redLight,\n        unavailableDark: primaryColors.dark,\n        availableDark: paletteColors.greenDark,\n        busyDark: paletteColors.redDark\n      };\n      var priorityColors = {\n        trivial: primaryColors.lighter,\n        minor: paletteColors.green,\n        medium: paletteColors.orange,\n        critical: paletteColors.red,\n        trivialLight: primaryColors.lightest,\n        minorLight: paletteColors.greenLight,\n        mediumLight: paletteColors.orangeLight,\n        criticalLight: paletteColors.redLight,\n        trivialDark: primaryColors.dark,\n        minorDark: paletteColors.greenDark,\n        mediumDark: paletteColors.orangeDark,\n        criticalDark: paletteColors.redDark\n      };\n      var uiColors = {\n        text: neutralColors.black,\n        lightText: neutralColors.gray4,\n        background: neutralColors.gray8,\n        borders: neutralColors.gray6\n      };\n      var defaultIcons = {\n        'message': {\n          'information': 'info-circle',\n          'success': 'check-circle',\n          'warning': 'exclamation-triangle',\n          'error': 'times-circle',\n          'attention': 'exclamation-circle'\n        },\n        'ui': {\n          'help': 'question'\n        }\n      }; // build theme\n\n      return {\n        colors: {\n          primary: primaryColors,\n          palette: paletteColors,\n          neutral: neutralColors,\n          action: actionColors,\n          message: messageColors,\n          status: statusColors,\n          availability: availabilityColors,\n          priority: priorityColors,\n          ui: uiColors,\n          all: Object.assign({}, paletteColors, actionColors, messageColors, statusColors, availabilityColors, priorityColors, uiColors)\n        },\n        icons: defaultIcons\n      };\n    }\n  }, {\n    key: \"isLoggedIn\",\n    get: function get() {\n      var loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n\n      return this.APIClient.token != null && loggedInUser != null;\n    }\n  }, {\n    key: \"isLoggingIn\",\n    get: function get() {\n      var loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n\n      return this.APIClient.token != null && loggedInUser == null;\n    }\n  }, {\n    key: \"loggedInUserKey\",\n    get: function get() {\n      if (this.isLoggedIn) {\n        return this.loggedInUser.id;\n      }\n\n      return null;\n    }\n  }]);\n\n  return AppStore;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return true;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loggedInUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"serviceErrors\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"signOut\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"signOut\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"signIn\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"signIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"authenticate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"authenticate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"saveInfo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"saveInfo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"recoverPassword\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"recoverPassword\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"resetPassword\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"resetPassword\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setCurrentUser\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCurrentUser\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoggedIn\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoggedIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"isLoggingIn\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isLoggingIn\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"loggedInUserKey\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"loggedInUserKey\"), _class.prototype)), _class);\nexport { AppStore as default };","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/stores/AppStore.js"],"names":["action","observable","computed","RESTClient","LocalStorageClient","UIStore","UsersStore","RolesStore","ServicesStore","ProfessionalsStore","AppointmentsStore","ClientsStore","BranchesStore","ConfigsStore","AppStore","api_token_key","logged_user_key","settings","refreshRate","storedToken","localStorage","getItem","storedUser","APIClient","localStorageClient","stores","Map","set","forEach","store","key","Object","defineProperty","get","v","updateThreshold","search","andThen","configsResponse","setConfigs","toArray","isLoading","users","res","err","signOut","setCurrentUser","removeItem","token","loggedInUser","clear","user","password","authenticate","then","saveInfo","data","setItem","id","email","password_recovery","update_password","primaryColors","base","dark","darker","darkest","black","light","lighter","lightest","white","neutralColors","gray0","gray1","gray2","gray3","gray4","gray5","gray6","gray7","gray8","gray9","paletteColors","blue","blueLight","blueDark","green","greenLight","greenDark","yellow","yellowLight","yellowDark","orange","orangeLight","orangeDark","red","redLight","redDark","purple","purpleLight","purpleDark","blackDark","blackLight","grayDark","gray","grayLight","whiteDark","whiteLight","actionColors","primary","secondary","confirm","warning","remove","internal","primaryLight","secondaryLight","confirmLight","warningLight","removeLight","internalLight","primaryDark","secondaryDark","confirmDark","warningDark","removeDark","internalDark","messageColors","information","success","error","attention","informationLight","successLight","errorLight","attentionLight","informationDark","successDark","errorDark","attentionDark","statusColors","inProgress","done","toDo","failed","new","noStatus","inProgressLight","doneLight","toDoLight","failedLight","newLight","noStatusLight","inProgressDark","doneDark","toDoDark","failedDark","newDark","noStatusDark","availabilityColors","unavailable","available","busy","unavailableLight","availableLight","busyLight","unavailableDark","availableDark","busyDark","priorityColors","trivial","minor","medium","critical","trivialLight","minorLight","mediumLight","criticalLight","trivialDark","minorDark","mediumDark","criticalDark","uiColors","text","lightText","background","borders","defaultIcons","colors","palette","neutral","message","status","availability","priority","ui","all","assign","icons","isLoggedIn"],"mappings":"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","sourcesContent":["import { action, observable, computed } from 'mobx';\nimport { RESTClient, LocalStorageClient } from '../lib';\n\nimport {\n  UIStore,\n  UsersStore,\n  RolesStore,\n  ServicesStore,\n  ProfessionalsStore,\n  AppointmentsStore,\n  ClientsStore,\n  BranchesStore,\n  ConfigsStore\n} from './';\n\nexport default class AppStore {\n  @observable isLoading = true;\n  @observable loggedInUser = null;\n  @observable serviceErrors = []\n\n  api_token_key = `la_${\"http://localhost:8080\"}_token`;\n  logged_user_key = `la_${\"http://localhost:8080\"}_user`;\n  settings = {\n    refreshRate: 5, // in minutes\n  };\n\n\n  constructor() {\n\n    const storedToken = localStorage.getItem(this.api_token_key);\n    const storedUser = localStorage.getItem(this.logged_user_key);\n\n    //Set by default when app is up in spanish\n\n\n    // create adapters\n    this.APIClient = new RESTClient(\"http://localhost:8080\", storedToken);\n\n    this.localStorageClient = new LocalStorageClient('la');\n\n    // initialize stores\n    this.stores = new Map();\n\n    // Domain stores\n    this.stores.set('users', new UsersStore(this.APIClient, this));\n    this.stores.set('roles', new RolesStore(this.APIClient, this));\n    this.stores.set('clients', new ClientsStore(this.APIClient, this));\n    this.stores.set('services', new ServicesStore(this.APIClient, this));\n    this.stores.set('branches', new BranchesStore(this.APIClient, this));\n    this.stores.set('configs', new ConfigsStore(this.APIClient, this));\n    this.stores.set('professionals', new ProfessionalsStore(this.APIClient, this));\n    this.stores.set('appointments', new AppointmentsStore(this.APIClient, this));\n\n    // UI stores\n    this.stores.set('ui', new UIStore(this.localStorageClient, this));\n\n    // create easy stores getters\n    this.stores.forEach((store, key) => {\n      Object.defineProperty(this, key, {\n        get: (v) => store,\n\n      });\n\n      store.updateThreshold = this.settings.refreshRate;\n    });\n\n\n    // is already a session open?\n    //if ( storedToken && storedUser ) {\n    if (storedUser) {\n      this.stores.get('configs').search({}, 'configs').andThen(configsResponse => {\n        this.stores.get('ui').setConfigs(configsResponse.toArray());\n        this.isLoading = false;\n        this.users.get(storedUser).andThen((res, err) => {\n          if (err) {\n            // something went terrible wrong.... \n            this.signOut();\n            this.isLoading = false;\n          }\n          else {\n            this.setCurrentUser(res);\n            this.isLoading = false;\n          }\n  \n        });\n      });\n\n    }\n    else {\n      this.isLoading = false;\n    }\n\n  }\n\n  @action\n  signOut() {\n    localStorage.removeItem(this.api_token_key);\n    localStorage.removeItem(this.logged_user_key);\n\n    this.APIClient.token = null;\n    this.loggedInUser = null;\n    this.stores.forEach((store, key) => { store.clear() });\n  }\n\n  @action\n  signIn(user, password) {\n    return this.authenticate(user, password).then(res => {\n      this.saveInfo(res)\n    });\n  }\n\n  @action\n  authenticate(user, password) {\n    return this.APIClient.authenticate(user, password)\n  }\n\n  @action\n  saveInfo(data) {\n    this.setCurrentUser(this.users.store(data));\n\n    // save the info in storage\n    localStorage.setItem(this.api_token_key, this.APIClient.token);\n    localStorage.setItem(this.logged_user_key, this.loggedInUser.id);\n    localStorage.setItem('language', 'Espa√±ol');\n  }\n\n  @action\n  recoverPassword(email) {\n    return this.APIClient.password_recovery(email)\n  }\n\n  @action resetPassword(token, email) {\n    return this.APIClient.update_password(token, email);\n  }\n\n  @action\n  setCurrentUser(user) {\n    this.isLoading = false;\n    this.loggedInUser = user;\n  }\n\n  @computed\n  get isLoggedIn() {\n    const loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n    return this.APIClient.token != null && loggedInUser != null;\n  }\n\n  @computed\n  get isLoggingIn() {\n    const loggedInUser = this.loggedInUser; // I need to do this for MOBX to catch it....\n    return this.APIClient.token != null && loggedInUser == null;\n  }\n\n  @computed\n  get loggedInUserKey() {\n    if (this.isLoggedIn) {\n      return this.loggedInUser.id;\n    }\n\n    return null;\n  }\n\n  getCurrentTheme() {\n    const primaryColors = { // brand colors\n      base: '#e30000',\n      dark: '#b51b1b',\n      darker: '#830d0d',\n      darkest: '#621818',\n      black: '#520000',\n      light: '#dd8989',\n      lighter: '#e5c4c4',\n      lightest: '#f0e2e2',\n      white: '#faf2f2',\n    };\n\n    const neutralColors = {\n      black: '#2E3A41',\n      gray0: '#4B555B',\n      gray1: '#666F74',\n      gray2: '#82898D',\n      gray3: '#9DA3A7',\n      gray4: '#B8BDBF',\n      gray5: '#D4D6D8',\n      gray6: '#E7E8EA',\n      gray7: '#F0F1F2',\n      gray8: '#F7F9F9',\n      gray9: '#FDFEFF',\n      white: '#FFFFFF',\n    };\n\n    const paletteColors = {\n      blue: '#209CEE',\n      blueLight: '#BBE1F9',\n      blueDark: '#2479B0',\n      green: '#23D160',\n      greenLight: '#BCF1CF',\n      greenDark: '#269B54',\n      yellow: '#FFDC00',\n      yellowLight: '#FFF4B2',\n      yellowDark: '#B4A217',\n      orange: '#FF9F1C',\n      orangeLight: '#FFE2BA',\n      orangeDark: '#B47B29',\n      red: '#FF3860',\n      redLight: '#FFC3CF',\n      redDark: '#B43854',\n      purple: '#B053E0',\n      purpleLight: '#E7CBF5',\n      purpleDark: '#814AA7',\n\n      blackDark: neutralColors.gray0,\n      black: neutralColors.gray1,\n      blackLight: neutralColors.gray2,\n\n      grayDark: neutralColors.gray3,\n      gray: neutralColors.gray4,\n      grayLight: neutralColors.gray5,\n\n      whiteDark: neutralColors.gray6,\n      white: neutralColors.gray7,\n      whiteLight: neutralColors.gray8,\n    };\n\n    const actionColors = {\n      primary: primaryColors.dark,\n      secondary: primaryColors.light,\n      confirm: paletteColors.green,\n      warning: paletteColors.orange,\n      remove: paletteColors.red,\n      internal: paletteColors.purple,\n\n      primaryLight: primaryColors.light,\n      secondaryLight: primaryColors.lightest,\n      confirmLight: paletteColors.greenLight,\n      warningLight: paletteColors.orangeLight,\n      removeLight: paletteColors.redLight,\n      internalLight: paletteColors.purpleLight,\n\n      primaryDark: primaryColors.darkest,\n      secondaryDark: primaryColors.darker,\n      confirmDark: paletteColors.greenDark,\n      warningDark: paletteColors.orangeDark,\n      removeDark: paletteColors.redDark,\n      internalDark: paletteColors.purpleDark,\n    };\n\n    const messageColors = {\n      information: paletteColors.blue,\n      success: paletteColors.green,\n      warning: paletteColors.orange,\n      error: paletteColors.red,\n      attention: paletteColors.purple,\n      informationLight: paletteColors.blueLight,\n      successLight: paletteColors.greenLight,\n      warningLight: paletteColors.orangeLight,\n      errorLight: paletteColors.redLight,\n      attentionLight: paletteColors.purpleLight,\n      informationDark: paletteColors.blueDark,\n      successDark: paletteColors.greenDark,\n      warningDark: paletteColors.orangeDark,\n      errorDark: paletteColors.redDark,\n      attentionDark: paletteColors.purpleDark,\n    };\n\n    const statusColors = {\n      inProgress: paletteColors.blue,\n      done: paletteColors.green,\n      toDo: paletteColors.purple,\n      failed: paletteColors.red,\n      new: paletteColors.orange,\n      noStatus: neutralColors.gray5,\n      inProgressLight: paletteColors.blueLight,\n      doneLight: paletteColors.greenLight,\n      toDoLight: paletteColors.purpleLight,\n      failedLight: paletteColors.redLight,\n      newLight: paletteColors.orangeLight,\n      noStatusLight: neutralColors.gray7,\n      inProgressDark: paletteColors.blueDark,\n      doneDark: paletteColors.greenDark,\n      toDoDark: paletteColors.purpleDark,\n      failedDark: paletteColors.redDark,\n      newDark: paletteColors.orangeDark,\n      noStatusDark: neutralColors.gray3,\n    };\n\n    const availabilityColors = {\n      unavailable: primaryColors.lighter,\n      available: paletteColors.green,\n      busy: paletteColors.red,\n      unavailableLight: primaryColors.lightest,\n      availableLight: paletteColors.greenLight,\n      busyLight: paletteColors.redLight,\n      unavailableDark: primaryColors.dark,\n      availableDark: paletteColors.greenDark,\n      busyDark: paletteColors.redDark,\n    };\n\n    const priorityColors = {\n      trivial: primaryColors.lighter,\n      minor: paletteColors.green,\n      medium: paletteColors.orange,\n      critical: paletteColors.red,\n      trivialLight: primaryColors.lightest,\n      minorLight: paletteColors.greenLight,\n      mediumLight: paletteColors.orangeLight,\n      criticalLight: paletteColors.redLight,\n      trivialDark: primaryColors.dark,\n      minorDark: paletteColors.greenDark,\n      mediumDark: paletteColors.orangeDark,\n      criticalDark: paletteColors.redDark,\n    };\n\n    const uiColors = {\n      text: neutralColors.black,\n      lightText: neutralColors.gray4,\n      background: neutralColors.gray8,\n      borders: neutralColors.gray6,\n    };\n\n    const defaultIcons = {\n      'message': {\n        'information': 'info-circle',\n        'success': 'check-circle',\n        'warning': 'exclamation-triangle',\n        'error': 'times-circle',\n        'attention': 'exclamation-circle',\n      },\n      'ui': {\n        'help': 'question',\n      },\n    };\n\n    // build theme\n    return {\n      colors: {\n        primary: primaryColors,\n        palette: paletteColors,\n        neutral: neutralColors,\n        action: actionColors,\n        message: messageColors,\n        status: statusColors,\n        availability: availabilityColors,\n        priority: priorityColors,\n        ui: uiColors,\n        all: Object.assign(\n          {},\n          paletteColors,\n          actionColors,\n          messageColors,\n          statusColors,\n          availabilityColors,\n          priorityColors,\n          uiColors),\n      },\n      icons: defaultIcons,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}