{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\n\nvar _class,\n    _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Branches/BranchesList.jsx\";\n\nimport React, { Component } from 'react';\nimport withStore from '../../hocs/withStore';\nimport { withToastManager } from 'react-toast-notifications';\nimport { observer } from 'mobx-react';\nimport startCase from 'lodash/startCase';\nimport { Loader, Title, Text, Table, Button, SelectableIcon, Toggle } from 'shipnow-mercurio';\nimport { Level, LevelLeft, LevelRight } from 'bloomer';\nimport { translate } from '../../lib/Translator';\nimport { faSpinner, faStoreAlt, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { BranchEditModal } from '../../components/Branches';\n\nvar BranchesList = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BranchesList, _Component);\n\n  function BranchesList(props) {\n    var _this;\n\n    _classCallCheck(this, BranchesList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BranchesList).call(this, props));\n    _this.state = {\n      branches: null,\n      showModal: false,\n      branch: null\n    };\n    _this.handleCloseModal = _this.handleCloseModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BranchesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        branches: this.props.store.branches.search({}, 'branches-list', true)\n      });\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(text) {\n      return translate(text, this.props.store.ui.language);\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      this.setState({\n        showModal: false\n      });\n    }\n  }, {\n    key: \"handleShowModal\",\n    value: function handleShowModal(branch) {\n      this.setState({\n        branch: branch,\n        showModal: true\n      });\n    }\n  }, {\n    key: \"handleActivate\",\n    value: function handleActivate(branch) {\n      var _this2 = this;\n\n      var toastManager = this.props.toastManager;\n      branch.activate().andThen(function (savedBranch, responseError) {\n        if (responseError) {\n          toastManager.add(_this2.getText(\"Ups! Parece que hubo un error al activar el usuario!\"), {\n            appearance: 'error',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        } else {\n          var text = React.createElement(Text, {\n            color: \"warning\",\n            weight: \"medium\",\n            className: \"mt-1 mb-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, _this2.getText(\"¡El usuario ha sido marcado como activo!\"));\n          toastManager.add(text, {\n            appearance: 'warning',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleInactivate\",\n    value: function handleInactivate(branch) {\n      var _this3 = this;\n\n      var toastManager = this.props.toastManager;\n      branch.deactivate().andThen(function (savedBranch, responseError) {\n        if (responseError) {\n          toastManager.add(_this3.getText(\"Ups! Parece que hubo un error al desactivar la sucursal!\"), {\n            appearance: 'error',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        } else {\n          var text = React.createElement(Text, {\n            color: \"warning\",\n            weight: \"medium\",\n            className: \"mt-1 mb-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, _this3.getText(\"¡La sucursal ha sido marcado como inactiva!\"));\n          toastManager.add(text, {\n            appearance: 'warning',\n            autoDismiss: true,\n            pauseOnHover: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"renderTable\",\n    value: function renderTable() {\n      var _this4 = this;\n\n      var data = this.state.branches.toArray();\n      var columns = [{\n        label: '',\n        content: function content(data) {\n          return React.createElement(SelectableIcon, {\n            className: \"ml-2\",\n            icon: faStoreAlt,\n            readOnly: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          });\n        },\n        size: 'is-1'\n      }, {\n        label: this.getText('Nombre'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, startCase(data.name) || _this4.getText('- sin nombre -'));\n        },\n        size: 'is-4'\n      }, {\n        label: this.getText('Dirección'),\n        content: function content(data) {\n          return React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, data.cookedAddress || _this4.getText('- sin dirección -'));\n        },\n        size: 'is-3'\n      }, {\n        label: this.getText('Activo'),\n        content: function content(data) {\n          return React.createElement(Toggle, {\n            checked: data.isActive,\n            checkedColor: \"success\",\n            unCheckedColor: \"delete\",\n            onChange: function onChange() {\n              return data.isActive ? _this4.handleInactivate(data) : _this4.handleActivate(data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n        },\n        size: 'is-1',\n        align: 'left'\n      }, {\n        label: '',\n        content: function content(data) {\n          return React.createElement(Button, {\n            icon: faPencilAlt,\n            kind: \"link\",\n            onClick: function onClick() {\n              return _this4.handleShowModal(data);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          });\n        },\n        size: 'is-1',\n        align: 'center'\n      }];\n      return React.createElement(Table, {\n        columns: columns,\n        data: data,\n        striped: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal() {\n      return React.createElement(BranchEditModal, {\n        branch: this.state.branch,\n        onClose: this.handleCloseModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n\n      if (!isBranchesLoaded) {\n        return React.createElement(Loader, {\n          icon: faSpinner,\n          label: this.getText('Cargando las sucursales..'),\n          className: \"fullscreen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Level, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(LevelLeft, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.getText('Listado de sucursales')))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), this.renderTable(), this.state.showModal && this.renderModal());\n    }\n  }]);\n\n  return BranchesList;\n}(Component)) || _class;\n\nexport default withToastManager(withStore(BranchesList));","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/views/Branches/BranchesList.jsx"],"names":["React","Component","withStore","withToastManager","observer","startCase","Loader","Title","Text","Table","Button","SelectableIcon","Toggle","Level","LevelLeft","LevelRight","translate","faSpinner","faStoreAlt","faPencilAlt","BranchEditModal","BranchesList","props","state","branches","showModal","branch","handleCloseModal","bind","setState","store","search","text","ui","language","toastManager","activate","andThen","savedBranch","responseError","add","getText","appearance","autoDismiss","pauseOnHover","deactivate","data","toArray","columns","label","content","size","name","cookedAddress","isActive","handleInactivate","handleActivate","align","handleShowModal","isBranchesLoaded","isOk","renderTable","renderModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport withStore from '../../hocs/withStore';\nimport { withToastManager } from 'react-toast-notifications';\n\nimport { observer } from 'mobx-react';\n\nimport startCase from 'lodash/startCase';\n\nimport {\n  Loader,\n  Title,\n  Text,\n  Table,\n  Button,\n  SelectableIcon,\n  Toggle,\n} from 'shipnow-mercurio';\n\nimport {\n  Level,\n  LevelLeft,\n  LevelRight\n} from 'bloomer';\n\nimport { translate } from '../../lib/Translator';\n\nimport { faSpinner, faStoreAlt, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { BranchEditModal } from '../../components/Branches';\n\n@observer\nclass BranchesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      branches: null,\n      showModal: false,\n      branch: null,\n    }\n\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      branches: this.props.store.branches.search({}, 'branches-list', true),\n    })\n  }\n\n  getText( text ) {\n    return translate(text, this.props.store.ui.language)\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n    })\n  }\n\n  handleShowModal( branch ) {\n    this.setState({\n      branch: branch,\n      showModal: true\n    })\n  }\n\n  handleActivate(branch) {\n    const { toastManager } = this.props;\n    branch.activate().andThen((savedBranch, responseError) => {\n      if (responseError) {\n        toastManager.add(this.getText(\"Ups! Parece que hubo un error al activar el usuario!\"), {\n          appearance: 'error',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n      else {\n        let text = <Text color=\"warning\" weight=\"medium\" className=\"mt-1 mb-1\">{this.getText(\"¡El usuario ha sido marcado como activo!\")}</Text>\n        toastManager.add(text, {\n          appearance: 'warning',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n    })\n  }\n\n  handleInactivate(branch) {\n    const { toastManager } = this.props;\n    branch.deactivate().andThen((savedBranch, responseError) => {\n      if (responseError) {\n        toastManager.add(this.getText(\"Ups! Parece que hubo un error al desactivar la sucursal!\"), {\n          appearance: 'error',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n      else {\n        let text = <Text color=\"warning\" weight=\"medium\" className=\"mt-1 mb-1\">{this.getText(\"¡La sucursal ha sido marcado como inactiva!\")}</Text>\n        toastManager.add(text, {\n          appearance: 'warning',\n          autoDismiss: true,\n          pauseOnHover: false,\n        });\n      }\n    })\n  }\n\n  renderTable() {\n    const data = this.state.branches.toArray();\n\n    const columns = [\n      {\n        label: '',\n        content: (data) => (<SelectableIcon  className=\"ml-2\" icon={ faStoreAlt } readOnly/>),\n        size: 'is-1',\n      },\n      {\n        label: this.getText('Nombre'),\n        content: (data) => (<Text>{ startCase( data.name) || this.getText('- sin nombre -') }</Text>),\n        size: 'is-4'\n      },\n      {\n        label: this.getText('Dirección'),\n        content: (data) => (<Text>{ data.cookedAddress || this.getText('- sin dirección -') }</Text>),\n        size: 'is-3'\n      },\n      {\n        label: this.getText('Activo'),\n        content: (data) => (<Toggle checked={data.isActive} checkedColor=\"success\" unCheckedColor=\"delete\" onChange={() => (data.isActive ? this.handleInactivate(data) : this.handleActivate(data))} />),\n        size: 'is-1',\n        align: 'left'\n      },\n      {\n        label: '',\n        content: (data) => (<Button icon={ faPencilAlt } kind=\"link\" onClick={ () => (this.handleShowModal(data)) } />),\n        size: 'is-1',\n        align: 'center'\n      },\n    ]\n\n    return <Table columns={ columns } data={ data } striped={ false }/>\n  }\n\n  renderModal() {\n    return <BranchEditModal branch={ this.state.branch } onClose={ this.handleCloseModal } />;\n  }\n\n  render() {\n    const isBranchesLoaded = this.state.branches && this.state.branches.isOk();\n    if (!isBranchesLoaded) {\n      return <Loader icon={ faSpinner } label={ this.getText('Cargando las sucursales..') } className=\"fullscreen\" />\n    }\n    return(\n      <React.Fragment>\n        <Level>\n          <LevelLeft>\n            <Title>{ this.getText('Listado de sucursales') }</Title>\n          </LevelLeft>\n        </Level>\n        <hr/>\n        { this.renderTable() }\n        { this.state.showModal && this.renderModal() }\n      </React.Fragment> )\n  }\n}\n\nexport default withToastManager(withStore(BranchesList));"]},"metadata":{},"sourceType":"module"}