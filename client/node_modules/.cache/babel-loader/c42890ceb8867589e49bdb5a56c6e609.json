{"ast":null,"code":"import _classCallCheck from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/ProfessionalsForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Column, Columns, Level, LevelLeft, Checkbox } from 'bloomer';\nimport { Button, Select, Field, TextInput, Title, Text, Panel } from 'shipnow-mercurio';\nimport { WorkingHoursSelector } from './';\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { servicios, sucursales } from '../../lib/Mocks';\nimport startCase from 'lodash/startCase';\nimport { withStore } from '../../hocs';\nimport moment from 'moment';\n\nvar ProfessionalsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfessionalsForm, _Component);\n\n  function ProfessionalsForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProfessionalsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfessionalsForm).call(this, props));\n    _this.state = {\n      startingTime: '',\n      finishingTime: '',\n      services: null,\n      selectedServices: null,\n      validTimeRange: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleHours = _this.handleHours.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProfessionalsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        services: this.props.store.services.getAll()\n      });\n    }\n  }, {\n    key: \"handleServices\",\n    value: function handleServices(sender, value, name) {\n      this.setState({\n        selectedServices: value\n      });\n      this.props.onChange && this.props.onChange('selectedServices', value.id); //tendria que ser un array de ids, no value.id\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(sender, value, name, valid) {\n      this.props.onChange && this.props.onChange(name, value, valid);\n    }\n  }, {\n    key: \"handleHours\",\n    value: function handleHours(received, valid, name) {\n      name = 'hours';\n      this.setState({\n        startingTime: received[0],\n        finishingTime: received[1]\n      });\n      valid = this.state.validTimeRange;\n      this.props.onChange && this.props.onChange(name, received, valid);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.startingTime != prevState.startingTime || this.state.finishingTime != prevState.finishingTime) {\n        this.setState({\n          validTimeRange: moment(this.state.startingTime, 'HH:mm').isBefore(moment(this.state.finishingTime, 'HH:mm'))\n        });\n      }\n    }\n  }, {\n    key: \"isValidHour\",\n    value: function isValidHour() {\n      var _this$state = this.state,\n          startingTime = _this$state.startingTime,\n          finishingTime = _this$state.finishingTime,\n          validTimeRange = _this$state.validTimeRange;\n\n      if (startingTime === '' || finishingTime === '') {\n        return true;\n      }\n\n      return validTimeRange;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.services || !this.state.services.isOk()) {\n        return 'Cargando profesionales..';\n      }\n\n      var professional = this.props.professional;\n      var services = this.state.services;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: \"Nombre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.name,\n        name: \"name\",\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: \"Apellido\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.lastName,\n        name: \"lastName\",\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: \"Tel\\xE9fono\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.phone,\n        name: \"phone\",\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: \"Mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        value: professional && professional.email,\n        name: \"email\",\n        className: \"is-fullwidth\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Field, {\n        className: \"pl-5 pr-5\",\n        label: \"\\xBFQu\\xE9 servicios ofrece?\",\n        labelNote: \"Seleccion\\xE1 los servicios\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, services.toArray().map(function (servicio) {\n        return React.createElement(Checkbox, {\n          className: \"pt-1\",\n          isFullWidth: true,\n          onClick: console.log(\"********\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Text, {\n          className: \"pl-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, startCase(servicio.name)));\n      })));\n    }\n  }]);\n\n  return ProfessionalsForm;\n}(Component);\n\nProfessionalsForm.PropTypes = {\n  onChange: PropTypes.func,\n  professional: PropTypes.object\n};\nProfessionalsForm.defaultProps = {\n  onChange: null,\n  professional: null\n};\nexport default withStore(ProfessionalsForm); // export default ProfessionalsForm;","map":{"version":3,"sources":["/Users/wpereyra/Documents/Universidad/PP1/look_app_fe/src/components/Professionals/ProfessionalsForm.jsx"],"names":["React","Component","PropTypes","Column","Columns","Level","LevelLeft","Checkbox","Button","Select","Field","TextInput","Title","Text","Panel","WorkingHoursSelector","faChevronDown","servicios","sucursales","startCase","withStore","moment","ProfessionalsForm","props","state","startingTime","finishingTime","services","selectedServices","validTimeRange","handleChange","bind","handleHours","setState","store","getAll","sender","value","name","onChange","id","valid","received","prevProps","prevState","isBefore","isOk","professional","lastName","phone","email","toArray","map","servicio","console","log","func","object","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACEC,MADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,SANP;AAQA,SACEC,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,KAPF,QAQO,kBARP;AAUA,SAASC,oBAAT,QAAqC,IAArC;AAEA,SAASC,aAAT,QAA8B,mCAA9B;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,iBAAtC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,QAAQ,EAAE,IAHC;AAIXC,MAAAA,gBAAgB,EAAE,IAJP;AAKXC,MAAAA,cAAc,EAAE;AALL,KAAb;AAOA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAXiB;AAYlB;;;;wCAEmB;AAClB,WAAKE,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWW,KAAX,CAAiBP,QAAjB,CAA0BQ,MAA1B;AADE,OAAd;AAGD;;;mCAEeC,M,EAAQC,K,EAAOC,I,EAAO;AACpC,WAAKL,QAAL,CAAc;AACZL,QAAAA,gBAAgB,EAAES;AADN,OAAd;AAGA,WAAKd,KAAL,CAAWgB,QAAX,IAAuB,KAAKhB,KAAL,CAAWgB,QAAX,CAAoB,kBAApB,EAAwCF,KAAK,CAACG,EAA9C,CAAvB,CAJoC,CAIqC;AAC1E;;;iCAEaJ,M,EAAQC,K,EAAOC,I,EAAMG,K,EAAQ;AACzC,WAAKlB,KAAL,CAAWgB,QAAX,IAAuB,KAAKhB,KAAL,CAAWgB,QAAX,CAAoBD,IAApB,EAA0BD,KAA1B,EAAiCI,KAAjC,CAAvB;AACD;;;gCAEWC,Q,EAAUD,K,EAAOH,I,EAAM;AACjCA,MAAAA,IAAI,GAAG,OAAP;AACE,WAAKL,QAAL,CAAc;AACZR,QAAAA,YAAY,EAAEiB,QAAQ,CAAC,CAAD,CADV;AAEZhB,QAAAA,aAAa,EAAEgB,QAAQ,CAAC,CAAD;AAFX,OAAd;AAIFD,MAAAA,KAAK,GAAG,KAAKjB,KAAL,CAAWK,cAAnB;AACA,WAAKN,KAAL,CAAWgB,QAAX,IAAuB,KAAKhB,KAAL,CAAWgB,QAAX,CAAoBD,IAApB,EAA0BI,QAA1B,EAAoCD,KAApC,CAAvB;AACD;;;uCAEkBE,S,EAAWC,S,EAAU;AACtC,UAAI,KAAKpB,KAAL,CAAWC,YAAX,IAA2BmB,SAAS,CAACnB,YAArC,IAAqD,KAAKD,KAAL,CAAWE,aAAX,IAA4BkB,SAAS,CAAClB,aAA/F,EAA8G;AAC5G,aAAKO,QAAL,CAAc;AAACJ,UAAAA,cAAc,EAAER,MAAM,CAAC,KAAKG,KAAL,CAAWC,YAAZ,EAAyB,OAAzB,CAAN,CAAwCoB,QAAxC,CAAiDxB,MAAM,CAAC,KAAKG,KAAL,CAAWE,aAAZ,EAA0B,OAA1B,CAAvD;AAAjB,SAAd;AACD;AACF;;;kCAEa;AAAA,wBAC4C,KAAKF,KADjD;AAAA,UACJC,YADI,eACJA,YADI;AAAA,UACUC,aADV,eACUA,aADV;AAAA,UACyBG,cADzB,eACyBA,cADzB;;AAEZ,UAAIJ,YAAY,KAAK,EAAjB,IAAuBC,aAAa,KAAK,EAA7C,EAAiD;AAC/C,eAAO,IAAP;AACD;;AACD,aAAOG,cAAP;AACD;;;6BAEQ;AACP,UAAI,CAAC,KAAKL,KAAL,CAAWG,QAAZ,IAAwB,CAAC,KAAKH,KAAL,CAAWG,QAAX,CAAoBmB,IAApB,EAA7B,EAAyD;AACvD,eAAO,0BAAP;AACD;;AAHM,UAICC,YAJD,GAIkB,KAAKxB,KAJvB,CAICwB,YAJD;AAAA,UAKCpB,QALD,GAKc,KAAKH,KALnB,CAKCG,QALD;AAMP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAGoB,YAAY,IAAIA,YAAY,CAACT,IAAhD;AAAuD,QAAA,IAAI,EAAC,MAA5D;AAAmE,QAAA,SAAS,EAAC,cAA7E;AAA4F,QAAA,QAAQ,EAAG,KAAKR,YAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADN,EAIM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAGiB,YAAY,IAAIA,YAAY,CAACC,QAAhD;AAA2D,QAAA,IAAI,EAAC,UAAhE;AAA2E,QAAA,SAAS,EAAC,cAArF;AAAoG,QAAA,QAAQ,EAAG,KAAKlB,YAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJN,EAOM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAGiB,YAAY,IAAIA,YAAY,CAACE,KAAhD;AAAwD,QAAA,IAAI,EAAC,OAA7D;AAAqE,QAAA,SAAS,EAAC,cAA/E;AAA8F,QAAA,QAAQ,EAAG,KAAKnB,YAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPN,EAUM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAGiB,YAAY,IAAIA,YAAY,CAACG,KAAhD;AAAwD,QAAA,IAAI,EAAC,OAA7D;AAAqE,QAAA,SAAS,EAAC,cAA/E;AAA8F,QAAA,QAAQ,EAAG,KAAKpB,YAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVN,EAoBM,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,WAAjB;AAA6B,QAAA,KAAK,EAAC,8BAAnC;AAA4D,QAAA,SAAS,EAAC,6BAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,QAAQ,CAACwB,OAAT,GAAmBC,GAAnB,CAAuB,UAAAC,QAAQ;AAAA,eAC9B,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAC,MAApB;AAA2B,UAAA,WAAW,MAAtC;AAAuC,UAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwBpC,SAAS,CAACkC,QAAQ,CAACf,IAAV,CAAjC,CAAzE,CAD8B;AAAA,OAA/B,CADH,CApBN,CADF;AAoCD;;;;EAlG6BrC,S;;AAqGhCqB,iBAAiB,CAACpB,SAAlB,GAA8B;AAC5BqC,EAAAA,QAAQ,EAAErC,SAAS,CAACsD,IADQ;AAE5BT,EAAAA,YAAY,EAAG7C,SAAS,CAACuD;AAFG,CAA9B;AAKAnC,iBAAiB,CAACoC,YAAlB,GAAiC;AAC/BnB,EAAAA,QAAQ,EAAE,IADqB;AAE/BQ,EAAAA,YAAY,EAAG;AAFgB,CAAjC;AAKA,eAAe3B,SAAS,CAACE,iBAAD,CAAxB,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Column,\n  Columns,\n  Level,\n  LevelLeft,\n  Checkbox\n} from 'bloomer';\n\nimport {\n  Button,\n  Select,\n  Field,\n  TextInput,\n  Title,\n  Text,\n  Panel\n} from 'shipnow-mercurio';\n\nimport { WorkingHoursSelector } from './';\n\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { servicios, sucursales } from '../../lib/Mocks';\n\nimport startCase from 'lodash/startCase';\n\nimport { withStore } from '../../hocs';\n\nimport moment from 'moment';\n\nclass ProfessionalsForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startingTime: '',\n      finishingTime: '',\n      services: null,\n      selectedServices: null,\n      validTimeRange: true\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleHours = this.handleHours.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      services: this.props.store.services.getAll(),\n    })\n  }\n\n  handleServices( sender, value, name ) {\n    this.setState({\n      selectedServices: value,\n    });\n    this.props.onChange && this.props.onChange('selectedServices', value.id) //tendria que ser un array de ids, no value.id\n  }\n\n  handleChange( sender, value, name, valid ) {\n    this.props.onChange && this.props.onChange(name, value, valid);\n  }\n\n  handleHours(received, valid, name ){\n    name = 'hours'\n      this.setState({\n        startingTime: received[0],\n        finishingTime: received[1]\n      }) \n    valid = this.state.validTimeRange\n    this.props.onChange && this.props.onChange(name, received, valid);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.startingTime != prevState.startingTime || this.state.finishingTime != prevState.finishingTime) {\n      this.setState({validTimeRange: moment(this.state.startingTime,'HH:mm').isBefore(moment(this.state.finishingTime,'HH:mm'))})\n    }\n  }\n\n  isValidHour() {\n    const { startingTime, finishingTime, validTimeRange } = this.state;\n    if (startingTime === '' || finishingTime === '') {\n      return true;\n    }\n    return validTimeRange;\n  }\n\n  render() {\n    if (!this.state.services || !this.state.services.isOk()) {\n      return 'Cargando profesionales..';\n    }\n    const { professional } = this.props;\n    const { services } = this.state; \n    return(\n      <React.Fragment>\n            <Field className=\"pl-5 pr-5\" label=\"Nombre\">\n              <TextInput value={ professional && professional.name } name=\"name\" className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-5 pr-5\" label=\"Apellido\">\n              <TextInput value={ professional && professional.lastName } name=\"lastName\" className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-5 pr-5\" label=\"Teléfono\">\n              <TextInput value={ professional && professional.phone } name=\"phone\" className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n            <Field className=\"pl-5 pr-5\" label=\"Mail\">\n              <TextInput value={ professional && professional.email } name=\"email\" className=\"is-fullwidth\" onChange={ this.handleChange } />\n            </Field>\n{/*             <Field className=\"pl-5 pr-5\" label=\"¿En qué sucursal va a atender?\" labelNote=\"Seleccioná una sucursal\">\n              <Select className=\"is-fullwidth\" placeholder=\"Sucursales\" borderless icon={ faChevronDown } options={ sucursales().map(sucursal => ({key: sucursal.address, value: sucursal.id})) } />\n            </Field>\n            <Field className=\"pl-5 pr-5\" label=\"Horarios de trabajo\" labelNote=\"Seleccioná los horarios semanales\">\n              <WorkingHoursSelector name=\"hours\" startingDate={ moment('05-17-2018 02:30 PM', 'MM-DD-YYYY hh:mm A') } finishingDate={ moment('05-17-2018 06:00 PM', 'MM-DD-YYYY hh:mm A') } onChange={ this.handleHours } />\n              { !this.isValidHour() && <Panel color=\"error\" invert ><Text className=\"has-text-centered\">Los horarios ingresados son incorrectos</Text></Panel> }\n            </Field> */}\n            <Field className=\"pl-5 pr-5\" label=\"¿Qué servicios ofrece?\" labelNote=\"Seleccioná los servicios\">\n              {services.toArray().map(servicio => (\n                <Checkbox className=\"pt-1\" isFullWidth onClick={console.log(\"********\")}><Text className=\"pl-1\">{startCase(servicio.name)}</Text></Checkbox>\n              ))}\n{/*               <Select \n            placeholder=\"Profesionales\" \n            borderless \n            icon={ faChevronDown } \n            onChange={ this.handleProfessional }\n            options={ professionals.toArray().map( prof => ({ key: `${ startCase(prof.name) } ${ startCase(prof.lastName) }`, value: prof })) } /> */}\n\n\n\n            </Field>\n      </React.Fragment> )\n  }\n}\n\nProfessionalsForm.PropTypes = {\n  onChange: PropTypes.func,\n  professional : PropTypes.object,\n}\n\nProfessionalsForm.defaultProps = {\n  onChange: null,\n  professional : null,\n}\n\nexport default withStore(ProfessionalsForm);\n// export default ProfessionalsForm;"]},"metadata":{},"sourceType":"module"}